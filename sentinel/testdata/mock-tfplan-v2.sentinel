terraform_version = "0.12.21"

planned_values = {
	"outputs": {
		"primary_tfe_cluster": {
			"name":      "primary_tfe_cluster",
			"sensitive": false,
			"value":     undefined,
		},
	},
	"resources": {
		"azurerm_network_interface.main": {
			"address":        "azurerm_network_interface.main",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "main",
			"provider_name":  "azurerm",
			"tainted":        false,
			"type":           "azurerm_network_interface",
			"values": {
				"enable_accelerated_networking": false,
				"enable_ip_forwarding":          false,
				"ip_configuration": [
					{
						"name": "testconfiguration1",
						"private_ip_address_allocation": "dynamic",
						"private_ip_address_version":    "IPv4",
						"public_ip_address_id":          null,
					},
				],
				"location": "westeurope",
				"name":     "tfvmex-nic",
				"network_security_group_id": null,
				"resource_group_name":       "tfvmex-resources",
			},
		},
		"azurerm_resource_group.main": {
			"address":        "azurerm_resource_group.main",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "main",
			"provider_name":  "azurerm",
			"tainted":        false,
			"type":           "azurerm_resource_group",
			"values": {
				"location": "westeurope",
				"name":     "tfvmex-resources",
			},
		},
		"azurerm_subnet.internal": {
			"address":        "azurerm_subnet.internal",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "internal",
			"provider_name":  "azurerm",
			"tainted":        false,
			"type":           "azurerm_subnet",
			"values": {
				"address_prefix": "10.0.2.0/24",
				"delegation":     [],
				"enforce_private_link_endpoint_network_policies": false,
				"enforce_private_link_service_network_policies":  false,
				"name": "internal",
				"network_security_group_id": null,
				"resource_group_name":       "tfvmex-resources",
				"route_table_id":            null,
				"service_endpoints":         null,
				"virtual_network_name":      "tfvmex-network",
			},
		},
		"azurerm_virtual_machine.main": {
			"address":        "azurerm_virtual_machine.main",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "main",
			"provider_name":  "azurerm",
			"tainted":        false,
			"type":           "azurerm_virtual_machine",
			"values": {
				"additional_capabilities":          [],
				"boot_diagnostics":                 [],
				"delete_data_disks_on_termination": false,
				"delete_os_disk_on_termination":    false,
				"location":                         "westeurope",
				"name":                             "tfvmex-vm",
				"os_profile": [
					{
						"admin_password": "Password1234!",
						"admin_username": "testadmin",
						"computer_name":  "hostname",
					},
				],
				"os_profile_linux_config": [
					{
						"disable_password_authentication": false,
						"ssh_keys":                        [],
					},
				],
				"os_profile_secrets":        [],
				"os_profile_windows_config": [],
				"plan": [],
				"primary_network_interface_id": null,
				"proximity_placement_group_id": null,
				"resource_group_name":          "tfvmex-resources",
				"storage_image_reference": [
					{
						"id":        "",
						"offer":     "UbuntuServer",
						"publisher": "Canonical",
						"sku":       "16.04-LTS",
						"version":   "latest",
					},
				],
				"storage_os_disk": [
					{
						"caching":                   "ReadWrite",
						"create_option":             "FromImage",
						"image_uri":                 null,
						"managed_disk_type":         "Standard_LRS",
						"name":                      "myosdisk1",
						"vhd_uri":                   null,
						"write_accelerator_enabled": false,
					},
				],
				"tags": {
					"environment": "staging",
				},
				"vm_size": "Standard_DS1_v2",
				"zones":   null,
			},
		},
		"azurerm_virtual_network.main": {
			"address":        "azurerm_virtual_network.main",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "main",
			"provider_name":  "azurerm",
			"tainted":        false,
			"type":           "azurerm_virtual_network",
			"values": {
				"address_space": [
					"10.0.0.0/16",
				],
				"ddos_protection_plan": [],
				"dns_servers":          null,
				"location":             "westeurope",
				"name":                 "tfvmex-network",
				"resource_group_name":  "tfvmex-resources",
			},
		},
		"module.primary_tfe.google_sql_database_instance.tfe-db-instance": {
			"address":        "module.primary_tfe.google_sql_database_instance.tfe-db-instance",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "tfe-db-instance",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_sql_database_instance",
			"values": {
				"database_version": "POSTGRES_9_6",
				"region":           "europe-west4",
				"settings": [
					{
						"authorized_gae_applications": null,
						"availability_type":           "REGIONAL",
						"backup_configuration": [
							{
								"binary_log_enabled": null,
								"enabled":            true,
								"location":           "europe-west4",
								"start_time":         "20:55",
							},
						],
						"database_flags":  [],
						"disk_autoresize": true,
						"disk_size":       100,
						"ip_configuration": [
							{
								"authorized_networks": [],
								"ipv4_enabled":        false,
								"require_ssl":         false,
							},
						],
						"maintenance_window": [
							{
								"day":          5,
								"hour":         12,
								"update_track": null,
							},
						],
						"pricing_plan":     "PER_USE",
						"replication_type": "SYNCHRONOUS",
						"tier":             "db-custom-8-30720",
						"user_labels": {
							"billing":    "937294293-smatale-tst",
							"operations": "937294293-smatale-tst",
							"security":   "937294293-smatale-tst",
						},
					},
				],
				"timeouts": null,
			},
		},
		"module.primary_tfe.google_sql_ssl_cert.client_cert": {
			"address":        "module.primary_tfe.google_sql_ssl_cert.client_cert",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "client_cert",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_sql_ssl_cert",
			"values": {
				"common_name": "terraform-generated",
				"project":     "aeroframe",
			},
		},
		"module.primary_tfe.google_sql_user.users": {
			"address":        "module.primary_tfe.google_sql_user.users",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "users",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_sql_user",
			"values": {
				"host":     null,
				"name":     "postgres",
				"password": "admin",
			},
		},
		"module.primary_tfe.google_storage_bucket.tfe-store": {
			"address":        "module.primary_tfe.google_storage_bucket.tfe-store",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "tfe-store",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_storage_bucket",
			"values": {
				"cors": [],
				"default_event_based_hold": null,
				"encryption":               [],
				"force_destroy":            false,
				"labels": {
					"billing":      "937294293-smatale-tst",
					"operations":   "937294293-smatale-tst",
					"security":     "937294293-smatale-tst",
					"serverstatus": "hypercare",
				},
				"lifecycle_rule":   [],
				"location":         "EUR4",
				"logging":          [],
				"requester_pays":   null,
				"retention_policy": [],
				"storage_class":    "STANDARD",
				"versioning":       [],
				"website":          [],
			},
		},
		"module.primary_tfe.module.tfe_asg.google_compute_health_check.instance_autohealing": {
			"address":        "module.primary_tfe.module.tfe_asg.google_compute_health_check.instance_autohealing",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_asg",
			"name":           "instance_autohealing",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_health_check",
			"values": {
				"check_interval_sec": 5,
				"description":        null,
				"healthy_threshold":  2,
				"http2_health_check": [],
				"http_health_check":  [],
				"https_health_check": [],
				"ssl_health_check":   [],
				"tcp_health_check": [
					{
						"port":               8800,
						"port_name":          null,
						"port_specification": null,
						"proxy_header":       "NONE",
						"request":            null,
						"response":           null,
					},
				],
				"timeout_sec":         5,
				"timeouts":            null,
				"unhealthy_threshold": 10,
			},
		},
		"module.primary_tfe.module.tfe_asg.google_compute_instance_template.instance_template": {
			"address":        "module.primary_tfe.module.tfe_asg.google_compute_instance_template.instance_template",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_asg",
			"name":           "instance_template",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_instance_template",
			"values": {
				"can_ip_forward": false,
				"disk": [
					{
						"auto_delete":         true,
						"boot":                true,
						"disk_encryption_key": [],
						"disk_name":           null,
						"disk_size_gb":        50,
						"labels":              null,
						"source":              null,
						"source_image":        "rhel-7-v20190729",
					},
				],
				"enable_display":    null,
				"guest_accelerator": [],
				"labels": {
					"billing":      "937294293-smatale-tst",
					"operations":   "937294293-smatale-tst",
					"security":     "937294293-smatale-tst",
					"serverstatus": "hypercare",
					"servertype":   "app",
				},
				"machine_type":            "n1-standard-2",
				"metadata_startup_script": "    echo \"trigger disable yum cron\"\n    systemctl disable yum-cron\n    systemctl stop yum-cron \n    echo \"nameserver 169.254.169.254\" >> /etc/resolv.conf\n    # #!/bin/bash\n\n# set -e -o pipefail\n\n# # Grab all the install/config data from gcp's metadata store\n# mkdir /etc/ptfe\n\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/jq-url\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/jq-url\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/ptfe-hostname\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/hostname\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/repl-data\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/repl-data\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/b64-license\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/replicated-licenseb64\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/encpasswd\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/encpasswd\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_user\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_user\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_password\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_password\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_netloc\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_netloc\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_dbname\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_dbname\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_extra_params\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_extra_params\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_credentials\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_credentials\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_project\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_project\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_bucket\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_bucket\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_certificate\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/terraform.crt\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_cert_privatekey\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/terraform.key\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/private_ip\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_console_admin_username\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/tfe_console_admin_username\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_cosnole_admin_useremail\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/tfe_cosnole_admin_useremail\n\n# chown root:root /etc/ptfe/*\n# chown 0400 /etc/ptfe/*\n\n# JQ_URL=$(cat /etc/ptfe/jq-url)\n# curl -sfSL -o /usr/bin/jq $JQ_URL\n# chmod +x /usr/bin/jq\n\n# CONSOLE=$(base64 --decode /etc/ptfe/repl-data)\n# export CONSOLE\n# TFE_USERNAME=$(cat /etc/ptfe/tfe_console_admin_username)\n# export TFE_USERNAME\n# TFE_USEREMAIL=$(cat /etc/ptfe/tfe_cosnole_admin_useremail)\n# export TFE_USEREMAIL\n\n# # Store various bits of info as env vars\n# base64 -d /etc/ptfe/replicated-licenseb64 > /etc/replicated.rli\n# PTFEHOSTNAME=$(cat /etc/ptfe/hostname)\n# #PTFEHOSTNAME=${PTFEHOSTNAME%?}\n# export PTFEHOSTNAME\n# ENCPASSWD=$(cat /etc/ptfe/encpasswd)\n# export ENCPASSWD\n# PRIVATEIP=$(cat /etc/ptfe/private_ip)\n# export PRIVATEIP\n\n\n\n# if [[ $(< /etc/ptfe/pg_user) != none ]]; then\n#     PG_USER=$(cat /etc/ptfe/pg_user)\n#     export PG_USER\n#     PG_PASSWORD=$(base64 --decode /etc/ptfe/pg_password)\n#     export PG_PASSWORD\n#     PG_NETLOC=$(cat /etc/ptfe/pg_netloc)\n#     export PG_NETLOC\n#     PG_DBNAME=$(cat /etc/ptfe/pg_dbname)\n#     export PG_DBNAME\n#     if [ -f /etc/ptfe/pg_extra_params ]; then\n#         PG_EXTRA_PARAMS=$(cat /etc/ptfe/pg_extra_params)\n#     else\n#         PG_EXTRA_PARAMS=\n#     fi\n#     export PG_EXTRA_PARAMS\n#     GCS_PROJECT=$(cat /etc/ptfe/gcs_project)\n#     export GCS_PROJECT\n#     GCS_BUCKET=$(cat /etc/ptfe/gcs_bucket)\n#     export GCS_BUCKET\n#     GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n#     export GCS_CREDS\n# fi\n\n# # Setup the config files that will be used during the install\n# /bin/cat <<EOF >/etc/ptfe/payload.json\n# {\n#   \"username\": \"$TFE_USERNAME\",\n#   \"email\": \"$TFE_USEREMAIL\",\n#   \"password\": \"$CONSOLE\"\n# }\n# EOF\n\n# chown 0400 /etc/ptfe/payload.json\n\n# /bin/cat <<EOF >/etc/replicated-ptfe.conf\n# {\n#     \"hostname\": {\n#         \"value\": \"$PTFEHOSTNAME\"\n#     },\n#     \"enc_password\": {\n#         \"value\": \"$ENCPASSWD\"\n#     },\n#     \"installation_type\": {\n#         \"value\": \"production\"\n#     },\n#     \"production_type\": {\n#         \"value\": \"external\"\n#     },\n#     \"pg_user\": {\n#         \"value\": \"$PG_USER\"\n#     },\n#     \"pg_password\": {\n#         \"value\": \"$PG_PASSWORD\"\n#     },\n#     \"pg_netloc\": {\n#         \"value\": \"$PG_NETLOC\"\n#     },\n#     \"pg_dbname\": {\n#         \"value\": \"$PG_DBNAME\"\n#     },\n#     \"pg_extra_params\": {\n#         \"value\": \"$PG_EXTRA_PARAMS\"\n#     },\n#     \"placement\": {\n#         \"value\": \"placement_gcs\"\n#     },\n#     \"gcs_credentials\": {\n#         \"value\": \"$GCS_CREDS\"\n#     },\n#     \"gcs_project\": {\n#         \"value\": \"$GCS_PROJECT\"\n#     },\n#     \"gcs_bucket\": {\n#         \"value\": \"$GCS_BUCKET\"\n#     }\n# }\n# EOF\n\n# chown root:root /etc/replicated-ptfe.conf\n# chmod 0644 /etc/replicated-ptfe.conf\n\n# /bin/cat <<EOF >/etc/replicated.conf\n# {\n#     \"DaemonAuthenticationType\":     \"password\",\n#     \"DaemonAuthenticationPassword\": \"$CONSOLE\",\n#     \"TlsBootstrapType\":             \"server-path\",\n#     \"TlsBootstrapHostname\":         \"$PTFEHOSTNAME\",\n#     \"TlsBootstrapCert\":             \"/etc/ptfe/terraform.crt\",\n#     \"TlsBootstrapKey\":              \"/etc/ptfe/terraform.key\",\n#     \"BypassPreflightChecks\":        true,\n#     \"ImportSettingsFrom\":           \"/etc/replicated-ptfe.conf\",\n#     \"LicenseFileLocation\":          \"/etc/replicated.rli\"\n# }\n# EOF\n\n# chown root:root /etc/replicated.conf\n# chmod 0644 /etc/replicated.conf\n\n# #Install Stackdriver Logging and Monitoring Agent\n\n# GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n# export GCS_CREDS\n\n# GOOGLE_APPLICATION_CREDENTIALS=\"/etc/google/auth/application_default_credentials.json\"\n# sudo mkdir -p /etc/google/auth\n# echo \"$GCS_CREDS\" > \"$GOOGLE_APPLICATION_CREDENTIALS\"\n# sudo chown root:root \"$GOOGLE_APPLICATION_CREDENTIALS\"\n# sudo chmod 0400 \"$GOOGLE_APPLICATION_CREDENTIALS\"\n\n# curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\n# sudo bash install-monitoring-agent.sh\n\n# curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh\n# sudo bash install-logging-agent.sh --structured\n\n# echo \"Running docker install\"\n# sudo -s\n# yum install docker-1.13.1-108.git4ef4b30.el7 -y\n\n# #Install Google Cloud SDK and JQ\n# tee -a /etc/yum.repos.d/google-cloud-sdk.repo << EOM\n# [google-cloud-sdk]\n# name=Google Cloud SDK\n# baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64\n# enabled=1\n# gpgcheck=1\n# repo_gpgcheck=1\n# gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg\n#        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\n# EOM\n\n# yum install google-cloud-sdk -y\n# yum install epel-release -y\n# yum install jq -y\n# echo \"Running docker storage setup\"\n\n# #Remove authorization plugins active RHEL Docker Service\n# systemctl stop docker\n# rm /usr/lib/systemd/system/docker.service\n\n# touch /usr/lib/systemd/system/docker.service\n# chown root:root /usr/lib/systemd/system/docker.service\n# chmod 0644 /usr/lib/systemd/system/docker.service\n# cat > /usr/lib/systemd/system/docker.service <<EOF\n# Wants=docker-storage-setup.service\n# Requires=rhel-push-plugin.service registries.service\n# Requires=docker-cleanup.timer\n# [Service]\n# Type=notify\n# NotifyAccess=main\n# EnvironmentFile=-/run/containers/registries.conf\n# EnvironmentFile=-/etc/sysconfig/docker\n# EnvironmentFile=-/etc/sysconfig/docker-storage\n# EnvironmentFile=-/etc/sysconfig/docker-network\n# Environment=GOTRACEBACK=crash\n# Environment=DOCKER_HTTP_HOST_COMPAT=1\n# Environment=PATH=/usr/libexec/docker:/usr/bin:/usr/sbin\n# ExecStart=/usr/bin/dockerd-current \\\n#           --add-runtime docker-runc=/usr/libexec/docker/docker-runc-current \\\n#           --default-runtime=docker-runc \\\n#           --exec-opt native.cgroupdriver=systemd \\\n#           --userland-proxy-path=/usr/libexec/docker/docker-proxy-current \\\n#           --init-path=/usr/libexec/docker/docker-init-current \\\n#           --seccomp-profile=/etc/docker/seccomp.json \\\n#           $OPTIONS \\\n#           $DOCKER_STORAGE_OPTIONS \\\n#           $DOCKER_NETWORK_OPTIONS \\\n#           $ADD_REGISTRY \\\n#           $BLOCK_REGISTRY \\\n#           $INSECURE_REGISTRY \\\n#           $REGISTRIES\n# ExecReload=/bin/kill -s HUP $MAINPID\n# LimitNOFILE=1048576\n# LimitNPROC=1048576\n# LimitCORE=infinity\n# TimeoutStartSec=0\n# Restart=on-abnormal\n# KillMode=process\n#!/bin/bash\nset -e -o pipefail\n\n# global vars\nmetadataURL=\"http://metadata.google.internal/computeMetadata/v1/instance\"\nmetadataHeader=\"Metadata-Flavor: Google\"\nmetadataOutput=/etc/ptfe/\n\n# Grab all the install/config data from gcp's metadata store\nfunction metadataAttributesPTFE {\n    curl --silent --show-error --location --header \"$metadataHeader\" \"$metadataURL/attributes/$1\" -o $metadataOutput$2\n}\n\nfunction metadataNetworkPTFE {\n    curl --silent --show-error --location --header \"$metadataHeader\" \"$metadataURL/network-interfaces/0/$1\" -o $metadataOutput$2\n}\n\nfunction installMetadataInfo {\n    mkdir /etc/ptfe\n\n    metadataAttributesPTFE \"ptfe-hostname\" hostname\n    metadataAttributesPTFE \"b64-license\" replicated-licenseb64\n\n    metadataAttributesPTFE \"repl-data\" repl-data\n    metadataAttributesPTFE \"health_url\" health_url\n    metadataAttributesPTFE \"encpasswd\" encpasswd\n    metadataAttributesPTFE \"pg_user\" pg_user\n    metadataAttributesPTFE \"pg_password\" pg_password\n    metadataAttributesPTFE \"pg_netloc\" pg_netloc\n    metadataAttributesPTFE \"pg_dbname\" pg_dbname\n    metadataAttributesPTFE \"pg_extra_params\" pg_extra_params\n    metadataAttributesPTFE \"gcs_credentials\" gcs_credentials\n    metadataAttributesPTFE \"gcs_project\" gcs_project\n    metadataAttributesPTFE \"gcs_bucket\" gcs_bucket\n    metadataAttributesPTFE \"tfe_console_admin_username\" tfe_console_admin_username\n    metadataAttributesPTFE \"tfe_cosnole_admin_useremail\" tfe_cosnole_admin_useremail\n\n    metadataAttributesPTFE \"tfe_certificate\" terraform.crt\n    metadataAttributesPTFE \"tfe_cert_privatekey\" terraform.key\n\n    metadataAttributesPTFE \"sql_ssl_cert\" sql_ssl_cert.pem\n    metadataAttributesPTFE \"sql_ssl_server_ca_cert\" sql_ssl_server_ca_cert.pem\n    metadataAttributesPTFE \"sql_ssl_private_key\" sql_ssl_private_key.pem\n\n    metadataNetworkPTFE \"ip\" private_ip\n\n    chown root:root /etc/ptfe/*\n    chown 400 /etc/ptfe/*\n\n    chmod 600 /etc/ptfe/sql_ssl_*\n}\n\nfunction setupMetadataConfig {\n    base64 -d /etc/ptfe/replicated-licenseb64 > /etc/replicated.rli\n\n    CONSOLE=$(base64 --decode /etc/ptfe/repl-data)\n    TFE_USERNAME=$(cat /etc/ptfe/tfe_console_admin_username)\n    TFE_USEREMAIL=$(cat /etc/ptfe/tfe_cosnole_admin_useremail)\n    PTFEHOSTNAME=$(cat /etc/ptfe/hostname)\n\n    ENCPASSWD=$(cat /etc/ptfe/encpasswd)\n    PRIVATEIP=$(cat /etc/ptfe/private_ip)\n\n    PG_USER=$(cat /etc/ptfe/pg_user)\n    PG_PASSWORD=$(base64 --decode /etc/ptfe/pg_password)\n    PG_NETLOC=$(cat /etc/ptfe/pg_netloc)\n    PG_DBNAME=$(cat /etc/ptfe/pg_dbname)    \n\n    GCS_PROJECT=$(cat /etc/ptfe/gcs_project)\n    GCS_BUCKET=$(cat /etc/ptfe/gcs_bucket)\n    GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n    \n    if [ -f /etc/ptfe/pg_extra_params ]; then\n        PG_EXTRA_PARAMS=$(cat /etc/ptfe/pg_extra_params)\n    else\n        PG_EXTRA_PARAMS=\"\"\n    fi\n\n# Setup the config files that will be used during the install\ncat > /etc/ptfe/payload.json <<EOF \n{\n  \"username\": \"$TFE_USERNAME\",\n  \"email\": \"$TFE_USEREMAIL\",\n  \"password\": \"$CONSOLE\"\n}\nEOF\n\ncat > /etc/replicated-ptfe.conf <<EOF \n{\n    \"hostname\": {\n        \"value\": \"$PTFEHOSTNAME\"\n    },\n    \"enc_password\": {\n        \"value\": \"$ENCPASSWD\"\n    },\n    \"installation_type\": {\n        \"value\": \"production\"\n    },\n    \"production_type\": {\n        \"value\": \"external\"\n    },\n    \"pg_user\": {\n        \"value\": \"$PG_USER\"\n    },\n    \"pg_password\": {\n        \"value\": \"$PG_PASSWORD\"\n    },\n    \"pg_netloc\": {\n        \"value\": \"$PG_NETLOC\"\n    },\n    \"pg_dbname\": {\n        \"value\": \"$PG_DBNAME\"\n    },\n    \"pg_extra_params\": {\n        \"value\": \"$PG_EXTRA_PARAMS\"\n    },\n    \"placement\": {\n        \"value\": \"placement_gcs\"\n    },\n    \"gcs_credentials\": {\n        \"value\": \"$GCS_CREDS\"\n    },\n    \"gcs_project\": {\n        \"value\": \"$GCS_PROJECT\"\n    },\n    \"gcs_bucket\": {\n        \"value\": \"$GCS_BUCKET\"\n    }\n}\nEOF\n\ncat > /etc/replicated.conf <<EOF \n{\n    \"DaemonAuthenticationType\":     \"password\",\n    \"DaemonAuthenticationPassword\": \"$CONSOLE\",\n    \"TlsBootstrapType\":             \"server-path\",\n    \"TlsBootstrapHostname\":         \"$PTFEHOSTNAME\",\n    \"TlsBootstrapCert\":             \"/etc/ptfe/terraform.crt\",\n    \"TlsBootstrapKey\":              \"/etc/ptfe/terraform.key\",\n    \"BypassPreflightChecks\":        true,\n    \"ImportSettingsFrom\":           \"/etc/replicated-ptfe.conf\",\n    \"LicenseFileLocation\":          \"/etc/replicated.rli\"\n}\nEOF\n\n    chown 400 /etc/ptfe/payload.json\n    chown root:root /etc/replicated-ptfe.conf\n    chmod 644 /etc/replicated-ptfe.conf\n    chown root:root /etc/replicated.conf\n    chmod 644 /etc/replicated.conf\n}\n\nfunction installGoogleAgents {\n    GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n    GOOGLE_APPLICATION_CREDENTIALS=\"/etc/google/auth/application_default_credentials.json\"\n    mkdir -p /etc/google/auth\n    echo \"$GCS_CREDS\" > \"$GOOGLE_APPLICATION_CREDENTIALS\"\n    chown root:root \"$GOOGLE_APPLICATION_CREDENTIALS\"\n    chmod 400 \"$GOOGLE_APPLICATION_CREDENTIALS\"\n\n    curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\n    bash install-monitoring-agent.sh\n\n    curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh\n    bash install-logging-agent.sh --structured\n}\n\nfunction installDocker {\n\nmkdir -p /etc/docker/\ncat > /etc/docker/daemon.conf << EOF\n{\n  \"mtu\": 1460\n}\nEOF\n\n    # OS specific configs\n    setenforce 0\n    mkdir -p /lib/tc\n    mount --bind /usr/lib64/tc/ /lib/tc/\n    sed -i -e 's/^SELINUX=enforcing/SELINUX=permissive/' /etc/sysconfig/selinux \n\n    yum -y install docker ipvsadm wget unzip\n    systemctl enable docker\n    systemctl start docker\n}\n\nfunction installPTFE {\n    echo \"Running 'ptfe install'\"\n\n    curl -o install.sh https://install.terraform.io/ptfe/stable\n    chmod +x ./install.sh\n    bash ./install.sh \\\n        no-proxy \\\n        no-docker \\\n        private-address=$(cat /etc/ptfe/private_ip) \\\n        public-address=$(cat /etc/ptfe/private_ip)\n\n    PRIVATEIP=$(cat /etc/ptfe/private_ip)\n    health_check=$(cat /etc/ptfe/health_url | sed \"s/IP/$PRIVATEIP\"/g )\n\n    until curl -ks $health_check | jq -r '.passed' | grep -q true; do\n        printf '.'\n        sleep 15\n    done\n\n    echo \"TFE is in healthy state now\"\n\n    initial_token=$(/usr/local/bin/replicated admin retrieve-iact)\n    echo \"== intial token is $initial_token ==\"\n\n    curl \\\n    --header \"Content-Type: application/json\" \\\n    --request POST \\\n    --data @/etc/ptfe/payload.json \\\n    http://${PRIVATEIP}:8800/admin/initial-admin-user?token=$initial_token\n}\n\nfunction main {\n    # install dependencies\n    yum install google-cloud-sdk -y\n    yum install epel-release -y\n    yum install jq -y\n\n    installMetadataInfo \n    setupMetadataConfig\n    installGoogleAgents\n    installDocker\n    installPTFE\n\n}\n\nmain\n",
				"min_cpu_platform":        null,
				"network_interface": [
					{
						"access_config":  [],
						"alias_ip_range": [],
						"network_ip":     null,
					},
				],
				"region": "europe-west4",
				"scheduling": [
					{
						"automatic_restart":   true,
						"node_affinities":     [],
						"on_host_maintenance": "MIGRATE",
						"preemptible":         false,
					},
				],
				"service_account": [
					{
						"email": "aeroframe@aeroframe.iam.gserviceaccount.com",
						"scopes": [
							"https://www.googleapis.com/auth/cloud-platform",
							"https://www.googleapis.com/auth/compute.readonly",
							"https://www.googleapis.com/auth/devstorage.read_only",
							"https://www.googleapis.com/auth/userinfo.email",
						],
					},
				],
				"shielded_instance_config": [],
				"tags": [
					"healthcheck",
					"outbound",
					"tfe",
				],
			},
		},
		"module.primary_tfe.module.tfe_asg.google_compute_region_instance_group_manager.instance_rigm[0]": {
			"address":        "module.primary_tfe.module.tfe_asg.google_compute_region_instance_group_manager.instance_rigm[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_asg",
			"name":           "instance_rigm",
			"provider_name":  "google-beta.west1",
			"tainted":        false,
			"type":           "google_compute_region_instance_group_manager",
			"values": {
				"auto_healing_policies": [
					{
						"initial_delay_sec": 1800,
					},
				],
				"description": null,
				"distribution_policy_zones": [
					"europe-west4-a",
					"europe-west4-b",
				],
				"named_port":   [],
				"region":       "europe-west4",
				"target_pools": null,
				"target_size":  2,
				"timeouts":     null,
				"update_policy": [
					{
						"instance_redistribution_type": null,
						"max_surge_fixed":              3,
						"max_surge_percent":            null,
						"max_unavailable_fixed":        0,
						"max_unavailable_percent":      null,
						"min_ready_sec":                10,
						"minimal_action":               "REPLACE",
						"type":                         "PROACTIVE",
					},
				],
				"version": [
					{
						"target_size": [],
					},
				],
				"wait_for_instances": false,
			},
		},
		"module.primary_tfe.module.tfe_fw.google_compute_firewall.gcp_fw": {
			"address":        "module.primary_tfe.module.tfe_fw.google_compute_firewall.gcp_fw",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_fw",
			"name":           "gcp_fw",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_firewall",
			"values": {
				"allow": [
					{
						"ports": [
							"22",
							"80",
							"443",
							"6443",
							"8800",
							"23010",
						],
						"protocol": "TCP",
					},
				],
				"deny":           [],
				"description":    null,
				"disabled":       null,
				"enable_logging": null,
				"priority":       1000,
				"source_ranges": [
					"0.0.0.0/0",
				],
				"source_service_accounts": null,
				"source_tags":             null,
				"target_service_accounts": null,
				"target_tags": [
					"tfe",
				],
				"timeouts": null,
			},
		},
		"module.primary_tfe.module.tfe_network.google_compute_global_address.private_ip_address": {
			"address":        "module.primary_tfe.module.tfe_network.google_compute_global_address.private_ip_address",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network",
			"name":           "private_ip_address",
			"provider_name":  "google-beta.west1",
			"tainted":        false,
			"type":           "google_compute_global_address",
			"values": {
				"address_type":  "INTERNAL",
				"description":   null,
				"ip_version":    null,
				"labels":        null,
				"prefix_length": 16,
				"purpose":       "VPC_PEERING",
				"timeouts":      null,
			},
		},
		"module.primary_tfe.module.tfe_network.google_compute_network.network": {
			"address":        "module.primary_tfe.module.tfe_network.google_compute_network.network",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "data",
			"module_address": "module.primary_tfe.module.tfe_network",
			"name":           "network",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_network",
			"values": {
				"project": null,
			},
		},
		"module.primary_tfe.module.tfe_network.google_compute_network.vpc": {
			"address":        "module.primary_tfe.module.tfe_network.google_compute_network.vpc",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network",
			"name":           "vpc",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_network",
			"values": {
				"auto_create_subnetworks":         true,
				"delete_default_routes_on_create": false,
				"description":                     null,
				"timeouts":                        null,
			},
		},
		"module.primary_tfe.module.tfe_network.google_service_networking_connection.private_vpc_connection": {
			"address":        "module.primary_tfe.module.tfe_network.google_service_networking_connection.private_vpc_connection",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network",
			"name":           "private_vpc_connection",
			"provider_name":  "google-beta.west1",
			"tainted":        false,
			"type":           "google_service_networking_connection",
			"values": {
				"service": "servicenetworking.googleapis.com",
			},
		},
		"module.primary_tfe.module.tfe_network.module.nat.google_compute_router.router[0]": {
			"address":        "module.primary_tfe.module.tfe_network.module.nat.google_compute_router.router[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network.module.nat",
			"name":           "router",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_router",
			"values": {
				"bgp": [
					{
						"advertise_mode":       "DEFAULT",
						"advertised_groups":    null,
						"advertised_ip_ranges": [],
						"asn": 64514,
					},
				],
				"description": null,
				"region":      "europe-west4",
				"timeouts":    null,
			},
		},
		"module.primary_tfe.module.tfe_network.module.nat.google_compute_router_nat.nat[0]": {
			"address":        "module.primary_tfe.module.tfe_network.module.nat.google_compute_router_nat.nat[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network.module.nat",
			"name":           "nat",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_router_nat",
			"values": {
				"icmp_idle_timeout_sec": 30,
				"log_config": [
					{
						"enable": true,
						"filter": "ERRORS_ONLY",
					},
				],
				"min_ports_per_vm":       null,
				"nat_ip_allocate_option": "AUTO_ONLY",
				"nat_ips":                null,
				"region":                 "europe-west4",
				"source_subnetwork_ip_ranges_to_nat": "ALL_SUBNETWORKS_ALL_IP_RANGES",
				"subnetwork":                         [],
				"tcp_established_idle_timeout_sec":   1200,
				"tcp_transitory_idle_timeout_sec":    30,
				"timeouts":                           null,
				"udp_idle_timeout_sec":               30,
			},
		},
		"module.primary_tfe.module.tfe_network.null_resource.google_service_networking_connection": {
			"address":        "module.primary_tfe.module.tfe_network.null_resource.google_service_networking_connection",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network",
			"name":           "google_service_networking_connection",
			"provider_name":  "null",
			"tainted":        false,
			"type":           "null_resource",
			"values": {
				"triggers": null,
			},
		},
		"module.primary_tfe.module.tfe_nlb.google_compute_firewall.gcp_lb_fw": {
			"address":        "module.primary_tfe.module.tfe_nlb.google_compute_firewall.gcp_lb_fw",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_lb_fw",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_firewall",
			"values": {
				"allow": [
					{
						"ports": [
							"8800",
							"23005",
						],
						"protocol": "tcp",
					},
				],
				"deny":           [],
				"description":    null,
				"disabled":       null,
				"enable_logging": null,
				"priority":       1000,
				"project":        "aeroframe",
				"source_ranges": [
					"0.0.0.0/0",
				],
				"source_service_accounts": null,
				"source_tags":             null,
				"target_service_accounts": null,
				"target_tags": [
					"tfe",
				],
				"timeouts": null,
			},
		},
		"module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[0]": {
			"address":        "module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_fr",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_forwarding_rule",
			"values": {
				"all_ports":             null,
				"backend_service":       null,
				"description":           null,
				"load_balancing_scheme": "EXTERNAL",
				"port_range":            "8800",
				"ports":                 null,
				"project":               "aeroframe",
				"region":                "europe-west4",
				"service_label":         null,
				"timeouts":              null,
			},
		},
		"module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[1]": {
			"address":        "module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_fr",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_forwarding_rule",
			"values": {
				"all_ports":             null,
				"backend_service":       null,
				"description":           null,
				"load_balancing_scheme": "EXTERNAL",
				"port_range":            "23005",
				"ports":                 null,
				"project":               "aeroframe",
				"region":                "europe-west4",
				"service_label":         null,
				"timeouts":              null,
			},
		},
		"module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[0]": {
			"address":        "module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_hhc",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_http_health_check",
			"values": {
				"check_interval_sec":  5,
				"description":         null,
				"healthy_threshold":   2,
				"host":                null,
				"port":                8800,
				"project":             "aeroframe",
				"request_path":        "/",
				"timeout_sec":         5,
				"timeouts":            null,
				"unhealthy_threshold": 2,
			},
		},
		"module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[1]": {
			"address":        "module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_hhc",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_http_health_check",
			"values": {
				"check_interval_sec":  5,
				"description":         null,
				"healthy_threshold":   2,
				"host":                null,
				"port":                23005,
				"project":             "aeroframe",
				"request_path":        "/healthz",
				"timeout_sec":         5,
				"timeouts":            null,
				"unhealthy_threshold": 2,
			},
		},
		"module.primary_tfe.module.tfe_nlb.google_compute_instance_group.gce_ig": {
			"address":        "module.primary_tfe.module.tfe_nlb.google_compute_instance_group.gce_ig",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "data",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gce_ig",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_instance_group",
			"values": {
				"zone": "europe-west4-a",
			},
		},
		"module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[0]": {
			"address":        "module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_tp",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_target_pool",
			"values": {
				"backup_pool":      null,
				"description":      null,
				"failover_ratio":   null,
				"project":          "aeroframe",
				"region":           "europe-west4",
				"session_affinity": "NONE",
			},
		},
		"module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[1]": {
			"address":        "module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_tp",
			"provider_name":  "google.west1",
			"tainted":        false,
			"type":           "google_compute_target_pool",
			"values": {
				"backup_pool":      null,
				"description":      null,
				"failover_ratio":   null,
				"project":          "aeroframe",
				"region":           "europe-west4",
				"session_affinity": "NONE",
			},
		},
		"module.primary_tfe.null_resource.tfe_asg_depends_on": {
			"address":        "module.primary_tfe.null_resource.tfe_asg_depends_on",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "tfe_asg_depends_on",
			"provider_name":  "null",
			"tainted":        false,
			"type":           "null_resource",
			"values": {
				"triggers": null,
			},
		},
		"module.primary_tfe.null_resource.tfe_nlb_depends_on": {
			"address":        "module.primary_tfe.null_resource.tfe_nlb_depends_on",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "tfe_nlb_depends_on",
			"provider_name":  "null",
			"tainted":        false,
			"type":           "null_resource",
			"values": {
				"triggers": null,
			},
		},
		"random_id.project_tag": {
			"address":        "random_id.project_tag",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "project_tag",
			"provider_name":  "random",
			"tainted":        false,
			"type":           "random_id",
			"values": {
				"byte_length": 4,
				"keepers":     null,
				"prefix":      null,
			},
		},
		"random_pet.console_password": {
			"address":        "random_pet.console_password",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "console_password",
			"provider_name":  "random",
			"tainted":        false,
			"type":           "random_pet",
			"values": {
				"keepers":   null,
				"length":    3,
				"prefix":    null,
				"separator": "-",
			},
		},
		"random_string.default_enc_password": {
			"address":        "random_string.default_enc_password",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "default_enc_password",
			"provider_name":  "random",
			"tainted":        false,
			"type":           "random_string",
			"values": {
				"keepers":          null,
				"length":           32,
				"lower":            true,
				"min_lower":        0,
				"min_numeric":      0,
				"min_special":      0,
				"min_upper":        0,
				"number":           true,
				"override_special": null,
				"special":          false,
				"upper":            true,
			},
		},
	},
}

variables = {
	"account_id": {
		"name":  "account_id",
		"value": "aeroframe",
	},
	"az_location": {
		"name":  "az_location",
		"value": "westeurope",
	},
	"certificate": {
		"name":  "certificate",
		"value": "tfe-cluster.crt",
	},
	"client_id": {
		"name":  "client_id",
		"value": "48cb9cf5-f551-4bcd-b9d8-89ebae297a40",
	},
	"client_secret": {
		"name":  "client_secret",
		"value": "dBLMeiw-0iFIdm535D/iFoD=oF=5GJ5n",
	},
	"cloud_provider": {
		"name":  "cloud_provider",
		"value": "gcp",
	},
	"costcenter": {
		"name":  "costcenter",
		"value": "937294293",
	},
	"creator": {
		"name":  "creator",
		"value": "smatale",
	},
	"domain": {
		"name":  "domain",
		"value": "test.slb.com",
	},
	"dr_region": {
		"name":  "dr_region",
		"value": "europe-north1",
	},
	"enable-oslogin": {
		"name":  "enable-oslogin",
		"value": "true",
	},
	"enable_regional_group": {
		"name":  "enable_regional_group",
		"value": "true",
	},
	"encryption_password": {
		"name":  "encryption_password",
		"value": "",
	},
	"environment": {
		"name":  "environment",
		"value": "tst",
	},
	"frontend_dns": {
		"name":  "frontend_dns",
		"value": "terraform",
	},
	"gcs_bucket_location": {
		"name":  "gcs_bucket_location",
		"value": "EUR4",
	},
	"gcs_credentials": {
		"name":  "gcs_credentials",
		"value": "tfe-gcp-creds.json",
	},
	"image_family": {
		"name":  "image_family",
		"value": "rhel-7-v20190729",
	},
	"instance_zone": {
		"name":  "instance_zone",
		"value": "[\"b\", \"c\"]",
	},
	"license_file": {
		"name":  "license_file",
		"value": "schlumberger.rli",
	},
	"machine_type": {
		"name":  "machine_type",
		"value": "n1-standard-2",
	},
	"postgresql_database": {
		"name":  "postgresql_database",
		"value": "postgres",
	},
	"postgresql_disk_size": {
		"name":  "postgresql_disk_size",
		"value": "100",
	},
	"postgresql_extra_params": {
		"name":  "postgresql_extra_params",
		"value": "937294293",
	},
	"postgresql_instance_availability_type": {
		"name":  "postgresql_instance_availability_type",
		"value": "REGIONAL",
	},
	"postgresql_instance_maintenance_window_day": {
		"name":  "postgresql_instance_maintenance_window_day",
		"value": "5",
	},
	"postgresql_instance_maintenance_window_hour": {
		"name":  "postgresql_instance_maintenance_window_hour",
		"value": "12",
	},
	"postgresql_instance_tier": {
		"name":  "postgresql_instance_tier",
		"value": "db-custom-8-30720",
	},
	"postgresql_password": {
		"name":  "postgresql_password",
		"value": "admin",
	},
	"postgresql_user": {
		"name":  "postgresql_user",
		"value": "postgres",
	},
	"prefix": {
		"name":  "prefix",
		"value": "tfvmex",
	},
	"privatekey": {
		"name":  "privatekey",
		"value": "tfe-cluster-private.key",
	},
	"project": {
		"name":  "project",
		"value": "aeroframe",
	},
	"region": {
		"name":  "region",
		"value": "europe-west4",
	},
	"server_status": {
		"name":  "server_status",
		"value": "hypercare",
	},
	"server_type": {
		"name":  "server_type",
		"value": "app",
	},
	"ssh_keys": {
		"name":  "ssh_keys",
		"value": "[]",
	},
	"ssr_id": {
		"name":  "ssr_id",
		"value": "7361",
	},
	"subscription_id": {
		"name":  "subscription_id",
		"value": "8ad38ca9-23ff-4c12-8e04-d9adb350983c",
	},
	"tenant_id": {
		"name":  "tenant_id",
		"value": "c8cd0425-e7b7-4f3d-9215-7e5fa3f439e8",
	},
	"tfe_console_admin_username": {
		"name":  "tfe_console_admin_username",
		"value": "admin",
	},
	"tfe_cosnole_admin_useremail": {
		"name":  "tfe_cosnole_admin_useremail",
		"value": "smatale@slb.com",
	},
	"vm_boot_disk_size": {
		"name":  "vm_boot_disk_size",
		"value": "50",
	},
	"vm_boot_disk_type": {
		"name":  "vm_boot_disk_type",
		"value": "pd-ssd",
	},
}

resource_changes = {
	"azurerm_network_interface.main": {
		"address": "azurerm_network_interface.main",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"enable_accelerated_networking": false,
				"enable_ip_forwarding":          false,
				"ip_configuration": [
					{
						"name": "testconfiguration1",
						"private_ip_address_allocation": "dynamic",
						"private_ip_address_version":    "IPv4",
						"public_ip_address_id":          null,
					},
				],
				"location": "westeurope",
				"name":     "tfvmex-nic",
				"network_security_group_id": null,
				"resource_group_name":       "tfvmex-resources",
			},
			"after_unknown": {
				"applied_dns_servers": true,
				"dns_servers":         true,
				"id":                  true,
				"internal_dns_name_label": true,
				"internal_fqdn":           true,
				"ip_configuration": [
					{
						"application_gateway_backend_address_pools_ids": true,
						"application_security_group_ids":                true,
						"load_balancer_backend_address_pools_ids":       true,
						"load_balancer_inbound_nat_rules_ids":           true,
						"primary":            true,
						"private_ip_address": true,
						"subnet_id":          true,
					},
				],
				"mac_address":          true,
				"private_ip_address":   true,
				"private_ip_addresses": true,
				"tags":                 true,
				"virtual_machine_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "main",
		"provider_name":  "azurerm",
		"type":           "azurerm_network_interface",
	},
	"azurerm_resource_group.main": {
		"address": "azurerm_resource_group.main",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"location": "westeurope",
				"name":     "tfvmex-resources",
			},
			"after_unknown": {
				"id":   true,
				"tags": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "main",
		"provider_name":  "azurerm",
		"type":           "azurerm_resource_group",
	},
	"azurerm_subnet.internal": {
		"address": "azurerm_subnet.internal",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"address_prefix": "10.0.2.0/24",
				"delegation":     [],
				"enforce_private_link_endpoint_network_policies": false,
				"enforce_private_link_service_network_policies":  false,
				"name": "internal",
				"network_security_group_id": null,
				"resource_group_name":       "tfvmex-resources",
				"route_table_id":            null,
				"service_endpoints":         null,
				"virtual_network_name":      "tfvmex-network",
			},
			"after_unknown": {
				"delegation":        [],
				"id":                true,
				"ip_configurations": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "internal",
		"provider_name":  "azurerm",
		"type":           "azurerm_subnet",
	},
	"azurerm_virtual_machine.main": {
		"address": "azurerm_virtual_machine.main",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"additional_capabilities":          [],
				"boot_diagnostics":                 [],
				"delete_data_disks_on_termination": false,
				"delete_os_disk_on_termination":    false,
				"location":                         "westeurope",
				"name":                             "tfvmex-vm",
				"os_profile": [
					{
						"admin_password": "Password1234!",
						"admin_username": "testadmin",
						"computer_name":  "hostname",
					},
				],
				"os_profile_linux_config": [
					{
						"disable_password_authentication": false,
						"ssh_keys":                        [],
					},
				],
				"os_profile_secrets":        [],
				"os_profile_windows_config": [],
				"plan": [],
				"primary_network_interface_id": null,
				"proximity_placement_group_id": null,
				"resource_group_name":          "tfvmex-resources",
				"storage_image_reference": [
					{
						"id":        "",
						"offer":     "UbuntuServer",
						"publisher": "Canonical",
						"sku":       "16.04-LTS",
						"version":   "latest",
					},
				],
				"storage_os_disk": [
					{
						"caching":                   "ReadWrite",
						"create_option":             "FromImage",
						"image_uri":                 null,
						"managed_disk_type":         "Standard_LRS",
						"name":                      "myosdisk1",
						"vhd_uri":                   null,
						"write_accelerator_enabled": false,
					},
				],
				"tags": {
					"environment": "staging",
				},
				"vm_size": "Standard_DS1_v2",
				"zones":   null,
			},
			"after_unknown": {
				"additional_capabilities": [],
				"availability_set_id":     true,
				"boot_diagnostics":        [],
				"id":                      true,
				"identity":                true,
				"license_type":            true,
				"network_interface_ids":   true,
				"os_profile": [
					{
						"custom_data": true,
					},
				],
				"os_profile_linux_config": [
					{
						"ssh_keys": [],
					},
				],
				"os_profile_secrets":        [],
				"os_profile_windows_config": [],
				"plan":              [],
				"storage_data_disk": true,
				"storage_image_reference": [
					{},
				],
				"storage_os_disk": [
					{
						"disk_size_gb":    true,
						"managed_disk_id": true,
						"os_type":         true,
					},
				],
				"tags": {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "main",
		"provider_name":  "azurerm",
		"type":           "azurerm_virtual_machine",
	},
	"azurerm_virtual_network.main": {
		"address": "azurerm_virtual_network.main",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"address_space": [
					"10.0.0.0/16",
				],
				"ddos_protection_plan": [],
				"dns_servers":          null,
				"location":             "westeurope",
				"name":                 "tfvmex-network",
				"resource_group_name":  "tfvmex-resources",
			},
			"after_unknown": {
				"address_space": [
					false,
				],
				"ddos_protection_plan": [],
				"id":     true,
				"subnet": true,
				"tags":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "main",
		"provider_name":  "azurerm",
		"type":           "azurerm_virtual_network",
	},
	"module.primary_tfe.google_sql_database_instance.tfe-db-instance": {
		"address": "module.primary_tfe.google_sql_database_instance.tfe-db-instance",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"database_version": "POSTGRES_9_6",
				"region":           "europe-west4",
				"settings": [
					{
						"authorized_gae_applications": null,
						"availability_type":           "REGIONAL",
						"backup_configuration": [
							{
								"binary_log_enabled": null,
								"enabled":            true,
								"location":           "europe-west4",
								"start_time":         "20:55",
							},
						],
						"database_flags":  [],
						"disk_autoresize": true,
						"disk_size":       100,
						"ip_configuration": [
							{
								"authorized_networks": [],
								"ipv4_enabled":        false,
								"require_ssl":         false,
							},
						],
						"maintenance_window": [
							{
								"day":          5,
								"hour":         12,
								"update_track": null,
							},
						],
						"pricing_plan":     "PER_USE",
						"replication_type": "SYNCHRONOUS",
						"tier":             "db-custom-8-30720",
						"user_labels": {
							"billing":    "937294293-smatale-tst",
							"operations": "937294293-smatale-tst",
							"security":   "937294293-smatale-tst",
						},
					},
				],
				"timeouts": null,
			},
			"after_unknown": {
				"connection_name":               true,
				"first_ip_address":              true,
				"id":                            true,
				"ip_address":                    true,
				"master_instance_name":          true,
				"name":                          true,
				"private_ip_address":            true,
				"project":                       true,
				"public_ip_address":             true,
				"replica_configuration":         true,
				"self_link":                     true,
				"server_ca_cert":                true,
				"service_account_email_address": true,
				"settings": [
					{
						"activation_policy": true,
						"backup_configuration": [
							{},
						],
						"crash_safe_replication": true,
						"database_flags":         [],
						"disk_type":              true,
						"ip_configuration": [
							{
								"authorized_networks": [],
								"private_network":     true,
							},
						],
						"location_preference": true,
						"maintenance_window": [
							{},
						],
						"user_labels": {},
						"version":     true,
					},
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe",
		"name":           "tfe-db-instance",
		"provider_name":  "google.west1",
		"type":           "google_sql_database_instance",
	},
	"module.primary_tfe.google_sql_ssl_cert.client_cert": {
		"address": "module.primary_tfe.google_sql_ssl_cert.client_cert",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"common_name": "terraform-generated",
				"project":     "aeroframe",
			},
			"after_unknown": {
				"cert":               true,
				"cert_serial_number": true,
				"create_time":        true,
				"expiration_time":    true,
				"id":                 true,
				"instance":           true,
				"private_key":        true,
				"server_ca_cert":     true,
				"sha1_fingerprint":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe",
		"name":           "client_cert",
		"provider_name":  "google.west1",
		"type":           "google_sql_ssl_cert",
	},
	"module.primary_tfe.google_sql_user.users": {
		"address": "module.primary_tfe.google_sql_user.users",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"host":     null,
				"name":     "postgres",
				"password": "admin",
			},
			"after_unknown": {
				"id":       true,
				"instance": true,
				"project":  true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe",
		"name":           "users",
		"provider_name":  "google.west1",
		"type":           "google_sql_user",
	},
	"module.primary_tfe.google_storage_bucket.tfe-store": {
		"address": "module.primary_tfe.google_storage_bucket.tfe-store",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"cors": [],
				"default_event_based_hold": null,
				"encryption":               [],
				"force_destroy":            false,
				"labels": {
					"billing":      "937294293-smatale-tst",
					"operations":   "937294293-smatale-tst",
					"security":     "937294293-smatale-tst",
					"serverstatus": "hypercare",
				},
				"lifecycle_rule":   [],
				"location":         "EUR4",
				"logging":          [],
				"requester_pays":   null,
				"retention_policy": [],
				"storage_class":    "STANDARD",
				"versioning":       [],
				"website":          [],
			},
			"after_unknown": {
				"bucket_policy_only": true,
				"cors":               [],
				"encryption":         [],
				"id":                 true,
				"labels":             {},
				"lifecycle_rule":     [],
				"logging":            [],
				"name":               true,
				"project":            true,
				"retention_policy":   [],
				"self_link":          true,
				"url":                true,
				"versioning":         [],
				"website":            [],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe",
		"name":           "tfe-store",
		"provider_name":  "google.west1",
		"type":           "google_storage_bucket",
	},
	"module.primary_tfe.module.tfe_asg.google_compute_health_check.instance_autohealing": {
		"address": "module.primary_tfe.module.tfe_asg.google_compute_health_check.instance_autohealing",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"check_interval_sec": 5,
				"description":        null,
				"healthy_threshold":  2,
				"http2_health_check": [],
				"http_health_check":  [],
				"https_health_check": [],
				"ssl_health_check":   [],
				"tcp_health_check": [
					{
						"port":               8800,
						"port_name":          null,
						"port_specification": null,
						"proxy_header":       "NONE",
						"request":            null,
						"response":           null,
					},
				],
				"timeout_sec":         5,
				"timeouts":            null,
				"unhealthy_threshold": 10,
			},
			"after_unknown": {
				"creation_timestamp": true,
				"http2_health_check": [],
				"http_health_check":  [],
				"https_health_check": [],
				"id":                 true,
				"name":               true,
				"project":            true,
				"self_link":          true,
				"ssl_health_check":   [],
				"tcp_health_check": [
					{},
				],
				"type": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_asg",
		"name":           "instance_autohealing",
		"provider_name":  "google.west1",
		"type":           "google_compute_health_check",
	},
	"module.primary_tfe.module.tfe_asg.google_compute_instance_template.instance_template": {
		"address": "module.primary_tfe.module.tfe_asg.google_compute_instance_template.instance_template",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"can_ip_forward": false,
				"disk": [
					{
						"auto_delete":         true,
						"boot":                true,
						"disk_encryption_key": [],
						"disk_name":           null,
						"disk_size_gb":        50,
						"labels":              null,
						"source":              null,
						"source_image":        "rhel-7-v20190729",
					},
				],
				"enable_display":    null,
				"guest_accelerator": [],
				"labels": {
					"billing":      "937294293-smatale-tst",
					"operations":   "937294293-smatale-tst",
					"security":     "937294293-smatale-tst",
					"serverstatus": "hypercare",
					"servertype":   "app",
				},
				"machine_type":            "n1-standard-2",
				"metadata_startup_script": "    echo \"trigger disable yum cron\"\n    systemctl disable yum-cron\n    systemctl stop yum-cron \n    echo \"nameserver 169.254.169.254\" >> /etc/resolv.conf\n    # #!/bin/bash\n\n# set -e -o pipefail\n\n# # Grab all the install/config data from gcp's metadata store\n# mkdir /etc/ptfe\n\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/jq-url\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/jq-url\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/ptfe-hostname\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/hostname\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/repl-data\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/repl-data\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/b64-license\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/replicated-licenseb64\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/encpasswd\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/encpasswd\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_user\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_user\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_password\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_password\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_netloc\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_netloc\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_dbname\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_dbname\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_extra_params\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_extra_params\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_credentials\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_credentials\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_project\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_project\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_bucket\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_bucket\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_certificate\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/terraform.crt\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_cert_privatekey\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/terraform.key\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/private_ip\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_console_admin_username\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/tfe_console_admin_username\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_cosnole_admin_useremail\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/tfe_cosnole_admin_useremail\n\n# chown root:root /etc/ptfe/*\n# chown 0400 /etc/ptfe/*\n\n# JQ_URL=$(cat /etc/ptfe/jq-url)\n# curl -sfSL -o /usr/bin/jq $JQ_URL\n# chmod +x /usr/bin/jq\n\n# CONSOLE=$(base64 --decode /etc/ptfe/repl-data)\n# export CONSOLE\n# TFE_USERNAME=$(cat /etc/ptfe/tfe_console_admin_username)\n# export TFE_USERNAME\n# TFE_USEREMAIL=$(cat /etc/ptfe/tfe_cosnole_admin_useremail)\n# export TFE_USEREMAIL\n\n# # Store various bits of info as env vars\n# base64 -d /etc/ptfe/replicated-licenseb64 > /etc/replicated.rli\n# PTFEHOSTNAME=$(cat /etc/ptfe/hostname)\n# #PTFEHOSTNAME=${PTFEHOSTNAME%?}\n# export PTFEHOSTNAME\n# ENCPASSWD=$(cat /etc/ptfe/encpasswd)\n# export ENCPASSWD\n# PRIVATEIP=$(cat /etc/ptfe/private_ip)\n# export PRIVATEIP\n\n\n\n# if [[ $(< /etc/ptfe/pg_user) != none ]]; then\n#     PG_USER=$(cat /etc/ptfe/pg_user)\n#     export PG_USER\n#     PG_PASSWORD=$(base64 --decode /etc/ptfe/pg_password)\n#     export PG_PASSWORD\n#     PG_NETLOC=$(cat /etc/ptfe/pg_netloc)\n#     export PG_NETLOC\n#     PG_DBNAME=$(cat /etc/ptfe/pg_dbname)\n#     export PG_DBNAME\n#     if [ -f /etc/ptfe/pg_extra_params ]; then\n#         PG_EXTRA_PARAMS=$(cat /etc/ptfe/pg_extra_params)\n#     else\n#         PG_EXTRA_PARAMS=\n#     fi\n#     export PG_EXTRA_PARAMS\n#     GCS_PROJECT=$(cat /etc/ptfe/gcs_project)\n#     export GCS_PROJECT\n#     GCS_BUCKET=$(cat /etc/ptfe/gcs_bucket)\n#     export GCS_BUCKET\n#     GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n#     export GCS_CREDS\n# fi\n\n# # Setup the config files that will be used during the install\n# /bin/cat <<EOF >/etc/ptfe/payload.json\n# {\n#   \"username\": \"$TFE_USERNAME\",\n#   \"email\": \"$TFE_USEREMAIL\",\n#   \"password\": \"$CONSOLE\"\n# }\n# EOF\n\n# chown 0400 /etc/ptfe/payload.json\n\n# /bin/cat <<EOF >/etc/replicated-ptfe.conf\n# {\n#     \"hostname\": {\n#         \"value\": \"$PTFEHOSTNAME\"\n#     },\n#     \"enc_password\": {\n#         \"value\": \"$ENCPASSWD\"\n#     },\n#     \"installation_type\": {\n#         \"value\": \"production\"\n#     },\n#     \"production_type\": {\n#         \"value\": \"external\"\n#     },\n#     \"pg_user\": {\n#         \"value\": \"$PG_USER\"\n#     },\n#     \"pg_password\": {\n#         \"value\": \"$PG_PASSWORD\"\n#     },\n#     \"pg_netloc\": {\n#         \"value\": \"$PG_NETLOC\"\n#     },\n#     \"pg_dbname\": {\n#         \"value\": \"$PG_DBNAME\"\n#     },\n#     \"pg_extra_params\": {\n#         \"value\": \"$PG_EXTRA_PARAMS\"\n#     },\n#     \"placement\": {\n#         \"value\": \"placement_gcs\"\n#     },\n#     \"gcs_credentials\": {\n#         \"value\": \"$GCS_CREDS\"\n#     },\n#     \"gcs_project\": {\n#         \"value\": \"$GCS_PROJECT\"\n#     },\n#     \"gcs_bucket\": {\n#         \"value\": \"$GCS_BUCKET\"\n#     }\n# }\n# EOF\n\n# chown root:root /etc/replicated-ptfe.conf\n# chmod 0644 /etc/replicated-ptfe.conf\n\n# /bin/cat <<EOF >/etc/replicated.conf\n# {\n#     \"DaemonAuthenticationType\":     \"password\",\n#     \"DaemonAuthenticationPassword\": \"$CONSOLE\",\n#     \"TlsBootstrapType\":             \"server-path\",\n#     \"TlsBootstrapHostname\":         \"$PTFEHOSTNAME\",\n#     \"TlsBootstrapCert\":             \"/etc/ptfe/terraform.crt\",\n#     \"TlsBootstrapKey\":              \"/etc/ptfe/terraform.key\",\n#     \"BypassPreflightChecks\":        true,\n#     \"ImportSettingsFrom\":           \"/etc/replicated-ptfe.conf\",\n#     \"LicenseFileLocation\":          \"/etc/replicated.rli\"\n# }\n# EOF\n\n# chown root:root /etc/replicated.conf\n# chmod 0644 /etc/replicated.conf\n\n# #Install Stackdriver Logging and Monitoring Agent\n\n# GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n# export GCS_CREDS\n\n# GOOGLE_APPLICATION_CREDENTIALS=\"/etc/google/auth/application_default_credentials.json\"\n# sudo mkdir -p /etc/google/auth\n# echo \"$GCS_CREDS\" > \"$GOOGLE_APPLICATION_CREDENTIALS\"\n# sudo chown root:root \"$GOOGLE_APPLICATION_CREDENTIALS\"\n# sudo chmod 0400 \"$GOOGLE_APPLICATION_CREDENTIALS\"\n\n# curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\n# sudo bash install-monitoring-agent.sh\n\n# curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh\n# sudo bash install-logging-agent.sh --structured\n\n# echo \"Running docker install\"\n# sudo -s\n# yum install docker-1.13.1-108.git4ef4b30.el7 -y\n\n# #Install Google Cloud SDK and JQ\n# tee -a /etc/yum.repos.d/google-cloud-sdk.repo << EOM\n# [google-cloud-sdk]\n# name=Google Cloud SDK\n# baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64\n# enabled=1\n# gpgcheck=1\n# repo_gpgcheck=1\n# gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg\n#        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\n# EOM\n\n# yum install google-cloud-sdk -y\n# yum install epel-release -y\n# yum install jq -y\n# echo \"Running docker storage setup\"\n\n# #Remove authorization plugins active RHEL Docker Service\n# systemctl stop docker\n# rm /usr/lib/systemd/system/docker.service\n\n# touch /usr/lib/systemd/system/docker.service\n# chown root:root /usr/lib/systemd/system/docker.service\n# chmod 0644 /usr/lib/systemd/system/docker.service\n# cat > /usr/lib/systemd/system/docker.service <<EOF\n# Wants=docker-storage-setup.service\n# Requires=rhel-push-plugin.service registries.service\n# Requires=docker-cleanup.timer\n# [Service]\n# Type=notify\n# NotifyAccess=main\n# EnvironmentFile=-/run/containers/registries.conf\n# EnvironmentFile=-/etc/sysconfig/docker\n# EnvironmentFile=-/etc/sysconfig/docker-storage\n# EnvironmentFile=-/etc/sysconfig/docker-network\n# Environment=GOTRACEBACK=crash\n# Environment=DOCKER_HTTP_HOST_COMPAT=1\n# Environment=PATH=/usr/libexec/docker:/usr/bin:/usr/sbin\n# ExecStart=/usr/bin/dockerd-current \\\n#           --add-runtime docker-runc=/usr/libexec/docker/docker-runc-current \\\n#           --default-runtime=docker-runc \\\n#           --exec-opt native.cgroupdriver=systemd \\\n#           --userland-proxy-path=/usr/libexec/docker/docker-proxy-current \\\n#           --init-path=/usr/libexec/docker/docker-init-current \\\n#           --seccomp-profile=/etc/docker/seccomp.json \\\n#           $OPTIONS \\\n#           $DOCKER_STORAGE_OPTIONS \\\n#           $DOCKER_NETWORK_OPTIONS \\\n#           $ADD_REGISTRY \\\n#           $BLOCK_REGISTRY \\\n#           $INSECURE_REGISTRY \\\n#           $REGISTRIES\n# ExecReload=/bin/kill -s HUP $MAINPID\n# LimitNOFILE=1048576\n# LimitNPROC=1048576\n# LimitCORE=infinity\n# TimeoutStartSec=0\n# Restart=on-abnormal\n# KillMode=process\n#!/bin/bash\nset -e -o pipefail\n\n# global vars\nmetadataURL=\"http://metadata.google.internal/computeMetadata/v1/instance\"\nmetadataHeader=\"Metadata-Flavor: Google\"\nmetadataOutput=/etc/ptfe/\n\n# Grab all the install/config data from gcp's metadata store\nfunction metadataAttributesPTFE {\n    curl --silent --show-error --location --header \"$metadataHeader\" \"$metadataURL/attributes/$1\" -o $metadataOutput$2\n}\n\nfunction metadataNetworkPTFE {\n    curl --silent --show-error --location --header \"$metadataHeader\" \"$metadataURL/network-interfaces/0/$1\" -o $metadataOutput$2\n}\n\nfunction installMetadataInfo {\n    mkdir /etc/ptfe\n\n    metadataAttributesPTFE \"ptfe-hostname\" hostname\n    metadataAttributesPTFE \"b64-license\" replicated-licenseb64\n\n    metadataAttributesPTFE \"repl-data\" repl-data\n    metadataAttributesPTFE \"health_url\" health_url\n    metadataAttributesPTFE \"encpasswd\" encpasswd\n    metadataAttributesPTFE \"pg_user\" pg_user\n    metadataAttributesPTFE \"pg_password\" pg_password\n    metadataAttributesPTFE \"pg_netloc\" pg_netloc\n    metadataAttributesPTFE \"pg_dbname\" pg_dbname\n    metadataAttributesPTFE \"pg_extra_params\" pg_extra_params\n    metadataAttributesPTFE \"gcs_credentials\" gcs_credentials\n    metadataAttributesPTFE \"gcs_project\" gcs_project\n    metadataAttributesPTFE \"gcs_bucket\" gcs_bucket\n    metadataAttributesPTFE \"tfe_console_admin_username\" tfe_console_admin_username\n    metadataAttributesPTFE \"tfe_cosnole_admin_useremail\" tfe_cosnole_admin_useremail\n\n    metadataAttributesPTFE \"tfe_certificate\" terraform.crt\n    metadataAttributesPTFE \"tfe_cert_privatekey\" terraform.key\n\n    metadataAttributesPTFE \"sql_ssl_cert\" sql_ssl_cert.pem\n    metadataAttributesPTFE \"sql_ssl_server_ca_cert\" sql_ssl_server_ca_cert.pem\n    metadataAttributesPTFE \"sql_ssl_private_key\" sql_ssl_private_key.pem\n\n    metadataNetworkPTFE \"ip\" private_ip\n\n    chown root:root /etc/ptfe/*\n    chown 400 /etc/ptfe/*\n\n    chmod 600 /etc/ptfe/sql_ssl_*\n}\n\nfunction setupMetadataConfig {\n    base64 -d /etc/ptfe/replicated-licenseb64 > /etc/replicated.rli\n\n    CONSOLE=$(base64 --decode /etc/ptfe/repl-data)\n    TFE_USERNAME=$(cat /etc/ptfe/tfe_console_admin_username)\n    TFE_USEREMAIL=$(cat /etc/ptfe/tfe_cosnole_admin_useremail)\n    PTFEHOSTNAME=$(cat /etc/ptfe/hostname)\n\n    ENCPASSWD=$(cat /etc/ptfe/encpasswd)\n    PRIVATEIP=$(cat /etc/ptfe/private_ip)\n\n    PG_USER=$(cat /etc/ptfe/pg_user)\n    PG_PASSWORD=$(base64 --decode /etc/ptfe/pg_password)\n    PG_NETLOC=$(cat /etc/ptfe/pg_netloc)\n    PG_DBNAME=$(cat /etc/ptfe/pg_dbname)    \n\n    GCS_PROJECT=$(cat /etc/ptfe/gcs_project)\n    GCS_BUCKET=$(cat /etc/ptfe/gcs_bucket)\n    GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n    \n    if [ -f /etc/ptfe/pg_extra_params ]; then\n        PG_EXTRA_PARAMS=$(cat /etc/ptfe/pg_extra_params)\n    else\n        PG_EXTRA_PARAMS=\"\"\n    fi\n\n# Setup the config files that will be used during the install\ncat > /etc/ptfe/payload.json <<EOF \n{\n  \"username\": \"$TFE_USERNAME\",\n  \"email\": \"$TFE_USEREMAIL\",\n  \"password\": \"$CONSOLE\"\n}\nEOF\n\ncat > /etc/replicated-ptfe.conf <<EOF \n{\n    \"hostname\": {\n        \"value\": \"$PTFEHOSTNAME\"\n    },\n    \"enc_password\": {\n        \"value\": \"$ENCPASSWD\"\n    },\n    \"installation_type\": {\n        \"value\": \"production\"\n    },\n    \"production_type\": {\n        \"value\": \"external\"\n    },\n    \"pg_user\": {\n        \"value\": \"$PG_USER\"\n    },\n    \"pg_password\": {\n        \"value\": \"$PG_PASSWORD\"\n    },\n    \"pg_netloc\": {\n        \"value\": \"$PG_NETLOC\"\n    },\n    \"pg_dbname\": {\n        \"value\": \"$PG_DBNAME\"\n    },\n    \"pg_extra_params\": {\n        \"value\": \"$PG_EXTRA_PARAMS\"\n    },\n    \"placement\": {\n        \"value\": \"placement_gcs\"\n    },\n    \"gcs_credentials\": {\n        \"value\": \"$GCS_CREDS\"\n    },\n    \"gcs_project\": {\n        \"value\": \"$GCS_PROJECT\"\n    },\n    \"gcs_bucket\": {\n        \"value\": \"$GCS_BUCKET\"\n    }\n}\nEOF\n\ncat > /etc/replicated.conf <<EOF \n{\n    \"DaemonAuthenticationType\":     \"password\",\n    \"DaemonAuthenticationPassword\": \"$CONSOLE\",\n    \"TlsBootstrapType\":             \"server-path\",\n    \"TlsBootstrapHostname\":         \"$PTFEHOSTNAME\",\n    \"TlsBootstrapCert\":             \"/etc/ptfe/terraform.crt\",\n    \"TlsBootstrapKey\":              \"/etc/ptfe/terraform.key\",\n    \"BypassPreflightChecks\":        true,\n    \"ImportSettingsFrom\":           \"/etc/replicated-ptfe.conf\",\n    \"LicenseFileLocation\":          \"/etc/replicated.rli\"\n}\nEOF\n\n    chown 400 /etc/ptfe/payload.json\n    chown root:root /etc/replicated-ptfe.conf\n    chmod 644 /etc/replicated-ptfe.conf\n    chown root:root /etc/replicated.conf\n    chmod 644 /etc/replicated.conf\n}\n\nfunction installGoogleAgents {\n    GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n    GOOGLE_APPLICATION_CREDENTIALS=\"/etc/google/auth/application_default_credentials.json\"\n    mkdir -p /etc/google/auth\n    echo \"$GCS_CREDS\" > \"$GOOGLE_APPLICATION_CREDENTIALS\"\n    chown root:root \"$GOOGLE_APPLICATION_CREDENTIALS\"\n    chmod 400 \"$GOOGLE_APPLICATION_CREDENTIALS\"\n\n    curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\n    bash install-monitoring-agent.sh\n\n    curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh\n    bash install-logging-agent.sh --structured\n}\n\nfunction installDocker {\n\nmkdir -p /etc/docker/\ncat > /etc/docker/daemon.conf << EOF\n{\n  \"mtu\": 1460\n}\nEOF\n\n    # OS specific configs\n    setenforce 0\n    mkdir -p /lib/tc\n    mount --bind /usr/lib64/tc/ /lib/tc/\n    sed -i -e 's/^SELINUX=enforcing/SELINUX=permissive/' /etc/sysconfig/selinux \n\n    yum -y install docker ipvsadm wget unzip\n    systemctl enable docker\n    systemctl start docker\n}\n\nfunction installPTFE {\n    echo \"Running 'ptfe install'\"\n\n    curl -o install.sh https://install.terraform.io/ptfe/stable\n    chmod +x ./install.sh\n    bash ./install.sh \\\n        no-proxy \\\n        no-docker \\\n        private-address=$(cat /etc/ptfe/private_ip) \\\n        public-address=$(cat /etc/ptfe/private_ip)\n\n    PRIVATEIP=$(cat /etc/ptfe/private_ip)\n    health_check=$(cat /etc/ptfe/health_url | sed \"s/IP/$PRIVATEIP\"/g )\n\n    until curl -ks $health_check | jq -r '.passed' | grep -q true; do\n        printf '.'\n        sleep 15\n    done\n\n    echo \"TFE is in healthy state now\"\n\n    initial_token=$(/usr/local/bin/replicated admin retrieve-iact)\n    echo \"== intial token is $initial_token ==\"\n\n    curl \\\n    --header \"Content-Type: application/json\" \\\n    --request POST \\\n    --data @/etc/ptfe/payload.json \\\n    http://${PRIVATEIP}:8800/admin/initial-admin-user?token=$initial_token\n}\n\nfunction main {\n    # install dependencies\n    yum install google-cloud-sdk -y\n    yum install epel-release -y\n    yum install jq -y\n\n    installMetadataInfo \n    setupMetadataConfig\n    installGoogleAgents\n    installDocker\n    installPTFE\n\n}\n\nmain\n",
				"min_cpu_platform":        null,
				"network_interface": [
					{
						"access_config":  [],
						"alias_ip_range": [],
						"network_ip":     null,
					},
				],
				"region": "europe-west4",
				"scheduling": [
					{
						"automatic_restart":   true,
						"node_affinities":     [],
						"on_host_maintenance": "MIGRATE",
						"preemptible":         false,
					},
				],
				"service_account": [
					{
						"email": "aeroframe@aeroframe.iam.gserviceaccount.com",
						"scopes": [
							"https://www.googleapis.com/auth/cloud-platform",
							"https://www.googleapis.com/auth/compute.readonly",
							"https://www.googleapis.com/auth/devstorage.read_only",
							"https://www.googleapis.com/auth/userinfo.email",
						],
					},
				],
				"shielded_instance_config": [],
				"tags": [
					"healthcheck",
					"outbound",
					"tfe",
				],
			},
			"after_unknown": {
				"description": true,
				"disk": [
					{
						"device_name":         true,
						"disk_encryption_key": [],
						"disk_type":           true,
						"interface":           true,
						"mode":                true,
						"type":                true,
					},
				],
				"guest_accelerator": [],
				"id":                true,
				"instance_description": true,
				"labels":               {},
				"metadata":             true,
				"metadata_fingerprint": true,
				"name":                 true,
				"name_prefix":          true,
				"network_interface": [
					{
						"access_config":      [],
						"alias_ip_range":     [],
						"network":            true,
						"subnetwork":         true,
						"subnetwork_project": true,
					},
				],
				"project": true,
				"scheduling": [
					{
						"node_affinities": [],
					},
				],
				"self_link": true,
				"service_account": [
					{
						"scopes": [
							false,
							false,
							false,
							false,
						],
					},
				],
				"shielded_instance_config": [],
				"tags": [
					false,
					false,
					false,
				],
				"tags_fingerprint": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_asg",
		"name":           "instance_template",
		"provider_name":  "google.west1",
		"type":           "google_compute_instance_template",
	},
	"module.primary_tfe.module.tfe_asg.google_compute_region_instance_group_manager.instance_rigm[0]": {
		"address": "module.primary_tfe.module.tfe_asg.google_compute_region_instance_group_manager.instance_rigm[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"auto_healing_policies": [
					{
						"initial_delay_sec": 1800,
					},
				],
				"description": null,
				"distribution_policy_zones": [
					"europe-west4-a",
					"europe-west4-b",
				],
				"named_port":   [],
				"region":       "europe-west4",
				"target_pools": null,
				"target_size":  2,
				"timeouts":     null,
				"update_policy": [
					{
						"instance_redistribution_type": null,
						"max_surge_fixed":              3,
						"max_surge_percent":            null,
						"max_unavailable_fixed":        0,
						"max_unavailable_percent":      null,
						"min_ready_sec":                10,
						"minimal_action":               "REPLACE",
						"type":                         "PROACTIVE",
					},
				],
				"version": [
					{
						"target_size": [],
					},
				],
				"wait_for_instances": false,
			},
			"after_unknown": {
				"auto_healing_policies": [
					{
						"health_check": true,
					},
				],
				"base_instance_name": true,
				"distribution_policy_zones": [
					false,
					false,
				],
				"fingerprint":       true,
				"id":                true,
				"instance_group":    true,
				"instance_template": true,
				"name":              true,
				"named_port":        [],
				"project":           true,
				"self_link":         true,
				"update_policy": [
					{},
				],
				"update_strategy": true,
				"version": [
					{
						"instance_template": true,
						"name":              true,
						"target_size":       [],
					},
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_asg",
		"name":           "instance_rigm",
		"provider_name":  "google-beta.west1",
		"type":           "google_compute_region_instance_group_manager",
	},
	"module.primary_tfe.module.tfe_fw.google_compute_firewall.gcp_fw": {
		"address": "module.primary_tfe.module.tfe_fw.google_compute_firewall.gcp_fw",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"allow": [
					{
						"ports": [
							"22",
							"80",
							"443",
							"6443",
							"8800",
							"23010",
						],
						"protocol": "TCP",
					},
				],
				"deny":           [],
				"description":    null,
				"disabled":       null,
				"enable_logging": null,
				"priority":       1000,
				"source_ranges": [
					"0.0.0.0/0",
				],
				"source_service_accounts": null,
				"source_tags":             null,
				"target_service_accounts": null,
				"target_tags": [
					"tfe",
				],
				"timeouts": null,
			},
			"after_unknown": {
				"allow": [
					{
						"ports": [
							false,
							false,
							false,
							false,
							false,
							false,
						],
					},
				],
				"creation_timestamp": true,
				"deny":               [],
				"destination_ranges": true,
				"direction":          true,
				"id":                 true,
				"name":               true,
				"network":            true,
				"project":            true,
				"self_link":          true,
				"source_ranges": [
					false,
				],
				"target_tags": [
					false,
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_fw",
		"name":           "gcp_fw",
		"provider_name":  "google.west1",
		"type":           "google_compute_firewall",
	},
	"module.primary_tfe.module.tfe_network.data.google_compute_network.network": {
		"address": "module.primary_tfe.module.tfe_network.data.google_compute_network.network",
		"change": {
			"actions": [
				"read",
			],
			"after": {
				"project": null,
			},
			"after_unknown": {
				"description":            true,
				"gateway_ipv4":           true,
				"id":                     true,
				"name":                   true,
				"self_link":              true,
				"subnetworks_self_links": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "data",
		"module_address": "module.primary_tfe.module.tfe_network",
		"name":           "network",
		"provider_name":  "google.west1",
		"type":           "google_compute_network",
	},
	"module.primary_tfe.module.tfe_network.google_compute_global_address.private_ip_address": {
		"address": "module.primary_tfe.module.tfe_network.google_compute_global_address.private_ip_address",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"address_type":  "INTERNAL",
				"description":   null,
				"ip_version":    null,
				"labels":        null,
				"prefix_length": 16,
				"purpose":       "VPC_PEERING",
				"timeouts":      null,
			},
			"after_unknown": {
				"address":            true,
				"creation_timestamp": true,
				"id":                 true,
				"label_fingerprint":  true,
				"name":               true,
				"network":            true,
				"project":            true,
				"self_link":          true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_network",
		"name":           "private_ip_address",
		"provider_name":  "google-beta.west1",
		"type":           "google_compute_global_address",
	},
	"module.primary_tfe.module.tfe_network.google_compute_network.vpc": {
		"address": "module.primary_tfe.module.tfe_network.google_compute_network.vpc",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"auto_create_subnetworks":         true,
				"delete_default_routes_on_create": false,
				"description":                     null,
				"timeouts":                        null,
			},
			"after_unknown": {
				"gateway_ipv4": true,
				"id":           true,
				"ipv4_range":   true,
				"name":         true,
				"project":      true,
				"routing_mode": true,
				"self_link":    true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_network",
		"name":           "vpc",
		"provider_name":  "google.west1",
		"type":           "google_compute_network",
	},
	"module.primary_tfe.module.tfe_network.google_service_networking_connection.private_vpc_connection": {
		"address": "module.primary_tfe.module.tfe_network.google_service_networking_connection.private_vpc_connection",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"service": "servicenetworking.googleapis.com",
			},
			"after_unknown": {
				"id":                      true,
				"network":                 true,
				"peering":                 true,
				"reserved_peering_ranges": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_network",
		"name":           "private_vpc_connection",
		"provider_name":  "google-beta.west1",
		"type":           "google_service_networking_connection",
	},
	"module.primary_tfe.module.tfe_network.module.nat.google_compute_router.router[0]": {
		"address": "module.primary_tfe.module.tfe_network.module.nat.google_compute_router.router[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"bgp": [
					{
						"advertise_mode":       "DEFAULT",
						"advertised_groups":    null,
						"advertised_ip_ranges": [],
						"asn": 64514,
					},
				],
				"description": null,
				"region":      "europe-west4",
				"timeouts":    null,
			},
			"after_unknown": {
				"bgp": [
					{
						"advertised_ip_ranges": [],
					},
				],
				"creation_timestamp": true,
				"id":                 true,
				"name":               true,
				"network":            true,
				"project":            true,
				"self_link":          true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_network.module.nat",
		"name":           "router",
		"provider_name":  "google.west1",
		"type":           "google_compute_router",
	},
	"module.primary_tfe.module.tfe_network.module.nat.google_compute_router_nat.nat[0]": {
		"address": "module.primary_tfe.module.tfe_network.module.nat.google_compute_router_nat.nat[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"icmp_idle_timeout_sec": 30,
				"log_config": [
					{
						"enable": true,
						"filter": "ERRORS_ONLY",
					},
				],
				"min_ports_per_vm":       null,
				"nat_ip_allocate_option": "AUTO_ONLY",
				"nat_ips":                null,
				"region":                 "europe-west4",
				"source_subnetwork_ip_ranges_to_nat": "ALL_SUBNETWORKS_ALL_IP_RANGES",
				"subnetwork":                         [],
				"tcp_established_idle_timeout_sec":   1200,
				"tcp_transitory_idle_timeout_sec":    30,
				"timeouts":                           null,
				"udp_idle_timeout_sec":               30,
			},
			"after_unknown": {
				"id": true,
				"log_config": [
					{},
				],
				"name":       true,
				"project":    true,
				"router":     true,
				"subnetwork": [],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_network.module.nat",
		"name":           "nat",
		"provider_name":  "google.west1",
		"type":           "google_compute_router_nat",
	},
	"module.primary_tfe.module.tfe_network.null_resource.google_service_networking_connection": {
		"address": "module.primary_tfe.module.tfe_network.null_resource.google_service_networking_connection",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"triggers": null,
			},
			"after_unknown": {
				"id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_network",
		"name":           "google_service_networking_connection",
		"provider_name":  "null",
		"type":           "null_resource",
	},
	"module.primary_tfe.module.tfe_nlb.data.google_compute_instance_group.gce_ig": {
		"address": "module.primary_tfe.module.tfe_nlb.data.google_compute_instance_group.gce_ig",
		"change": {
			"actions": [
				"read",
			],
			"after": {
				"zone": "europe-west4-a",
			},
			"after_unknown": {
				"description": true,
				"id":          true,
				"instances":   true,
				"name":        true,
				"named_port":  true,
				"network":     true,
				"project":     true,
				"self_link":   true,
				"size":        true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "data",
		"module_address": "module.primary_tfe.module.tfe_nlb",
		"name":           "gce_ig",
		"provider_name":  "google.west1",
		"type":           "google_compute_instance_group",
	},
	"module.primary_tfe.module.tfe_nlb.google_compute_firewall.gcp_lb_fw": {
		"address": "module.primary_tfe.module.tfe_nlb.google_compute_firewall.gcp_lb_fw",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"allow": [
					{
						"ports": [
							"8800",
							"23005",
						],
						"protocol": "tcp",
					},
				],
				"deny":           [],
				"description":    null,
				"disabled":       null,
				"enable_logging": null,
				"priority":       1000,
				"project":        "aeroframe",
				"source_ranges": [
					"0.0.0.0/0",
				],
				"source_service_accounts": null,
				"source_tags":             null,
				"target_service_accounts": null,
				"target_tags": [
					"tfe",
				],
				"timeouts": null,
			},
			"after_unknown": {
				"allow": [
					{
						"ports": [
							false,
							false,
						],
					},
				],
				"creation_timestamp": true,
				"deny":               [],
				"destination_ranges": true,
				"direction":          true,
				"id":                 true,
				"name":               true,
				"network":            true,
				"self_link":          true,
				"source_ranges": [
					false,
				],
				"target_tags": [
					false,
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_nlb",
		"name":           "gcp_lb_fw",
		"provider_name":  "google.west1",
		"type":           "google_compute_firewall",
	},
	"module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[0]": {
		"address": "module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"all_ports":             null,
				"backend_service":       null,
				"description":           null,
				"load_balancing_scheme": "EXTERNAL",
				"port_range":            "8800",
				"ports":                 null,
				"project":               "aeroframe",
				"region":                "europe-west4",
				"service_label":         null,
				"timeouts":              null,
			},
			"after_unknown": {
				"creation_timestamp": true,
				"id":                 true,
				"ip_address":         true,
				"ip_protocol":        true,
				"ip_version":         true,
				"name":               true,
				"network":            true,
				"network_tier":       true,
				"self_link":          true,
				"service_name":       true,
				"subnetwork":         true,
				"target":             true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_nlb",
		"name":           "gcp_fr",
		"provider_name":  "google.west1",
		"type":           "google_compute_forwarding_rule",
	},
	"module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[1]": {
		"address": "module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"all_ports":             null,
				"backend_service":       null,
				"description":           null,
				"load_balancing_scheme": "EXTERNAL",
				"port_range":            "23005",
				"ports":                 null,
				"project":               "aeroframe",
				"region":                "europe-west4",
				"service_label":         null,
				"timeouts":              null,
			},
			"after_unknown": {
				"creation_timestamp": true,
				"id":                 true,
				"ip_address":         true,
				"ip_protocol":        true,
				"ip_version":         true,
				"name":               true,
				"network":            true,
				"network_tier":       true,
				"self_link":          true,
				"service_name":       true,
				"subnetwork":         true,
				"target":             true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_nlb",
		"name":           "gcp_fr",
		"provider_name":  "google.west1",
		"type":           "google_compute_forwarding_rule",
	},
	"module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[0]": {
		"address": "module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"check_interval_sec":  5,
				"description":         null,
				"healthy_threshold":   2,
				"host":                null,
				"port":                8800,
				"project":             "aeroframe",
				"request_path":        "/",
				"timeout_sec":         5,
				"timeouts":            null,
				"unhealthy_threshold": 2,
			},
			"after_unknown": {
				"creation_timestamp": true,
				"id":                 true,
				"name":               true,
				"self_link":          true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_nlb",
		"name":           "gcp_hhc",
		"provider_name":  "google.west1",
		"type":           "google_compute_http_health_check",
	},
	"module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[1]": {
		"address": "module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"check_interval_sec":  5,
				"description":         null,
				"healthy_threshold":   2,
				"host":                null,
				"port":                23005,
				"project":             "aeroframe",
				"request_path":        "/healthz",
				"timeout_sec":         5,
				"timeouts":            null,
				"unhealthy_threshold": 2,
			},
			"after_unknown": {
				"creation_timestamp": true,
				"id":                 true,
				"name":               true,
				"self_link":          true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_nlb",
		"name":           "gcp_hhc",
		"provider_name":  "google.west1",
		"type":           "google_compute_http_health_check",
	},
	"module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[0]": {
		"address": "module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"backup_pool":      null,
				"description":      null,
				"failover_ratio":   null,
				"project":          "aeroframe",
				"region":           "europe-west4",
				"session_affinity": "NONE",
			},
			"after_unknown": {
				"health_checks": true,
				"id":            true,
				"instances":     true,
				"name":          true,
				"self_link":     true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_nlb",
		"name":           "gcp_tp",
		"provider_name":  "google.west1",
		"type":           "google_compute_target_pool",
	},
	"module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[1]": {
		"address": "module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"backup_pool":      null,
				"description":      null,
				"failover_ratio":   null,
				"project":          "aeroframe",
				"region":           "europe-west4",
				"session_affinity": "NONE",
			},
			"after_unknown": {
				"health_checks": true,
				"id":            true,
				"instances":     true,
				"name":          true,
				"self_link":     true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.primary_tfe.module.tfe_nlb",
		"name":           "gcp_tp",
		"provider_name":  "google.west1",
		"type":           "google_compute_target_pool",
	},
	"module.primary_tfe.null_resource.tfe_asg_depends_on": {
		"address": "module.primary_tfe.null_resource.tfe_asg_depends_on",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"triggers": null,
			},
			"after_unknown": {
				"id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe",
		"name":           "tfe_asg_depends_on",
		"provider_name":  "null",
		"type":           "null_resource",
	},
	"module.primary_tfe.null_resource.tfe_nlb_depends_on": {
		"address": "module.primary_tfe.null_resource.tfe_nlb_depends_on",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"triggers": null,
			},
			"after_unknown": {
				"id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.primary_tfe",
		"name":           "tfe_nlb_depends_on",
		"provider_name":  "null",
		"type":           "null_resource",
	},
	"random_id.project_tag": {
		"address": "random_id.project_tag",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"byte_length": 4,
				"keepers":     null,
				"prefix":      null,
			},
			"after_unknown": {
				"b64":     true,
				"b64_std": true,
				"b64_url": true,
				"dec":     true,
				"hex":     true,
				"id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "project_tag",
		"provider_name":  "random",
		"type":           "random_id",
	},
	"random_pet.console_password": {
		"address": "random_pet.console_password",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"keepers":   null,
				"length":    3,
				"prefix":    null,
				"separator": "-",
			},
			"after_unknown": {
				"id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "console_password",
		"provider_name":  "random",
		"type":           "random_pet",
	},
	"random_string.default_enc_password": {
		"address": "random_string.default_enc_password",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"keepers":          null,
				"length":           32,
				"lower":            true,
				"min_lower":        0,
				"min_numeric":      0,
				"min_special":      0,
				"min_upper":        0,
				"number":           true,
				"override_special": null,
				"special":          false,
				"upper":            true,
			},
			"after_unknown": {
				"id":     true,
				"result": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "default_enc_password",
		"provider_name":  "random",
		"type":           "random_string",
	},
}

output_changes = {
	"primary_tfe_cluster": {
		"change": {
			"actions": [
				"create",
			],
			"after":         undefined,
			"after_unknown": true,
			"before":        null,
		},
		"name": "primary_tfe_cluster",
	},
}

raw = {
	"configuration": {
		"provider_config": {
			"azurerm": {
				"expressions": {
					"client_id": {
						"references": [
							"var.client_id",
						],
					},
					"client_secret": {
						"references": [
							"var.client_secret",
						],
					},
					"subscription_id": {
						"references": [
							"var.subscription_id",
						],
					},
					"tenant_id": {
						"references": [
							"var.tenant_id",
						],
					},
				},
				"name": "azurerm",
			},
			"google-beta.north1": {
				"alias": "north1",
				"expressions": {
					"credentials": {
						"references": [
							"var.gcs_credentials",
						],
					},
					"project": {
						"references": [
							"var.project",
						],
					},
					"region": {
						"references": [
							"var.dr_region",
						],
					},
					"zone": {
						"references": [
							"var.dr_region",
						],
					},
				},
				"name": "google-beta",
			},
			"google-beta.west1": {
				"alias": "west1",
				"expressions": {
					"credentials": {
						"references": [
							"var.gcs_credentials",
						],
					},
					"project": {
						"references": [
							"var.project",
						],
					},
					"region": {
						"references": [
							"var.region",
						],
					},
					"zone": {
						"references": [
							"var.region",
						],
					},
				},
				"name": "google-beta",
			},
			"google.north1": {
				"alias": "north1",
				"expressions": {
					"credentials": {
						"references": [
							"var.gcs_credentials",
						],
					},
					"project": {
						"references": [
							"var.project",
						],
					},
					"region": {
						"references": [
							"var.dr_region",
						],
					},
					"zone": {
						"references": [
							"var.dr_region",
						],
					},
				},
				"name": "google",
			},
			"google.west1": {
				"alias": "west1",
				"expressions": {
					"credentials": {
						"references": [
							"var.gcs_credentials",
						],
					},
					"project": {
						"references": [
							"var.project",
						],
					},
					"region": {
						"references": [
							"var.region",
						],
					},
					"zone": {
						"references": [
							"var.region",
						],
					},
				},
				"name": "google",
			},
		},
		"root_module": {
			"module_calls": {
				"primary_tfe": {
					"expressions": {
						"account_id": {
							"references": [
								"var.account_id",
							],
						},
						"certificate": {
							"references": [
								"var.certificate",
							],
						},
						"cloud_provider": {
							"references": [
								"var.cloud_provider",
							],
						},
						"common_labels": {
							"references": [
								"local.common_labels",
							],
						},
						"console_password": {
							"references": [
								"random_pet.console_password",
							],
						},
						"costcenter": {
							"references": [
								"var.costcenter",
							],
						},
						"creator": {
							"references": [
								"var.creator",
							],
						},
						"domain": {
							"references": [
								"var.domain",
							],
						},
						"enable-oslogin": {
							"references": [
								"var.enable-oslogin",
							],
						},
						"enable_regional_group": {
							"references": [
								"var.enable_regional_group",
							],
						},
						"encryption_password": {
							"references": [
								"local.encryption_password",
							],
						},
						"environment": {
							"constant_value": "tfe-primary",
						},
						"frontend_dns": {
							"references": [
								"var.frontend_dns",
							],
						},
						"gcs_bucket_location": {
							"references": [
								"var.gcs_bucket_location",
							],
						},
						"gcs_credentials": {
							"references": [
								"var.gcs_credentials",
							],
						},
						"image_family": {
							"references": [
								"var.image_family",
							],
						},
						"instance_zone": {
							"references": [
								"var.instance_zone",
							],
						},
						"license_file": {
							"references": [
								"var.license_file",
							],
						},
						"machine_type": {
							"references": [
								"var.machine_type",
							],
						},
						"postgresql_database": {
							"references": [
								"var.postgresql_database",
							],
						},
						"postgresql_disk_size": {
							"references": [
								"var.postgresql_disk_size",
							],
						},
						"postgresql_extra_params": {
							"references": [
								"var.postgresql_extra_params",
							],
						},
						"postgresql_instance_availability_type": {
							"references": [
								"var.postgresql_instance_availability_type",
							],
						},
						"postgresql_instance_maintenance_window_day": {
							"references": [
								"var.postgresql_instance_maintenance_window_day",
							],
						},
						"postgresql_instance_maintenance_window_hour": {
							"references": [
								"var.postgresql_instance_maintenance_window_hour",
							],
						},
						"postgresql_instance_tier": {
							"references": [
								"var.postgresql_instance_tier",
							],
						},
						"postgresql_password": {
							"references": [
								"var.postgresql_password",
							],
						},
						"postgresql_user": {
							"references": [
								"var.postgresql_user",
							],
						},
						"privatekey": {
							"references": [
								"var.privatekey",
							],
						},
						"project": {
							"references": [
								"var.project",
							],
						},
						"project_tag": {
							"references": [
								"random_id.project_tag",
							],
						},
						"region": {
							"references": [
								"var.region",
							],
						},
						"server_status": {
							"references": [
								"var.server_status",
							],
						},
						"server_type": {
							"references": [
								"var.server_type",
							],
						},
						"ssh_keys": {
							"references": [
								"var.ssh_keys",
							],
						},
						"ssr_id": {
							"references": [
								"var.ssr_id",
							],
						},
						"tfe_console_admin_username": {
							"references": [
								"var.tfe_console_admin_username",
							],
						},
						"tfe_cosnole_admin_useremail": {
							"references": [
								"var.tfe_cosnole_admin_useremail",
							],
						},
						"vm_boot_disk_size": {
							"references": [
								"var.vm_boot_disk_size",
							],
						},
						"vm_boot_disk_type": {
							"references": [
								"var.vm_boot_disk_type",
							],
						},
					},
					"module": {
						"module_calls": {
							"tfe_asg": {
								"expressions": {
									"cluster_description": {
										"references": [
											"var.environment",
											"var.project_tag",
											"var.region",
										],
									},
									"depends_on_other_modules": {
										"references": [
											"null_resource.tfe_asg_depends_on",
										],
									},
									"enable_regional_group": {
										"references": [
											"var.enable_regional_group",
										],
									},
									"gcp_cluster_name": {
										"references": [
											"var.environment",
											"var.project_tag",
										],
									},
									"gcp_common_labels": {
										"references": [
											"var.common_labels",
											"var.server_status",
											"var.server_type",
										],
									},
									"gcp_region": {
										"references": [
											"var.region",
										],
									},
									"gcp_zone": {
										"references": [
											"var.enable_regional_group",
											"var.gcp_zone",
										],
									},
									"gcp_zones": {
										"references": [
											"var.enable_regional_group",
											"var.region",
											"var.region",
										],
									},
									"instance_cluster_tag": {
										"constant_value": [
											"tfe",
										],
									},
									"instance_count": {
										"constant_value": 2,
									},
									"instance_disk_size": {
										"references": [
											"var.vm_boot_disk_size",
										],
									},
									"instance_machine_type": {
										"references": [
											"var.machine_type",
										],
									},
									"instance_network": {
										"references": [
											"module.tfe_network.service_network",
										],
									},
									"instance_source_image": {
										"references": [
											"var.image_family",
										],
									},
									"instance_startup_script": {
										"references": [
											"path.module",
										],
									},
									"metadata": {
										"references": [
											"path.module",
											"var.license_file",
											"path.module",
											"var.gcs_credentials",
											"path.module",
											"var.certificate",
											"path.module",
											"var.privatekey",
											"var.console_password",
											"var.frontend_dns",
											"var.domain",
											"local.assistant_port",
											"var.enable-oslogin",
											"var.encryption_password",
											"var.postgresql_user",
											"var.postgresql_password",
											"var.postgresql_database",
											"var.postgresql_extra_params",
											"var.project",
											"var.tfe_console_admin_username",
											"var.tfe_cosnole_admin_useremail",
											"google_storage_bucket.tfe-store",
											"google_sql_database_instance.tfe-db-instance",
											"google_sql_ssl_cert.client_cert",
											"google_sql_ssl_cert.client_cert",
											"google_sql_ssl_cert.client_cert",
										],
									},
									"service_account_email": {
										"references": [
											"data.google_service_account.account_id",
										],
									},
								},
								"module": {
									"outputs": {
										"gcp_region_instance_group_manager": {
											"expression": {
												"references": [
													"var.enable_regional_group",
													"google_compute_region_instance_group_manager.instance_rigm[0]",
													"google_compute_instance_group_manager.instance_igm[0]",
												],
											},
										},
									},
									"resources": [
										{
											"address": "google_compute_health_check.instance_autohealing",
											"expressions": {
												"check_interval_sec": {
													"constant_value": 5,
												},
												"healthy_threshold": {
													"constant_value": 2,
												},
												"name": {
													"references": [
														"local.instance_autohealing_name",
													],
												},
												"tcp_health_check": [
													{
														"port": {
															"references": [
																"var.instance_hc",
															],
														},
													},
												],
												"timeout_sec": {
													"constant_value": 5,
												},
												"unhealthy_threshold": {
													"constant_value": 10,
												},
											},
											"mode":                "managed",
											"name":                "instance_autohealing",
											"provider_config_key": "tfe_asg:google",
											"schema_version":      0,
											"type":                "google_compute_health_check",
										},
										{
											"address": "google_compute_instance_group_manager.instance_igm",
											"count_expression": {
												"references": [
													"var.enable_regional_group",
												],
											},
											"depends_on": [
												"google_compute_instance_template.instance_template",
											],
											"expressions": {
												"auto_healing_policies": [
													{
														"health_check": {
															"references": [
																"google_compute_health_check.instance_autohealing",
															],
														},
														"initial_delay_sec": {
															"constant_value": 1800,
														},
													},
												],
												"base_instance_name": {
													"references": [
														"local.instance_igm_name",
													],
												},
												"name": {
													"references": [
														"local.instance_igm_name",
													],
												},
												"target_pools": {
													"references": [
														"var.instance_group_target_pools",
													],
												},
												"target_size": {
													"references": [
														"var.instance_count",
													],
												},
												"update_policy": [
													{
														"max_surge_fixed": {
															"constant_value": 3,
														},
														"max_unavailable_fixed": {
															"constant_value": 0,
														},
														"min_ready_sec": {
															"constant_value": 10,
														},
														"minimal_action": {
															"constant_value": "REPLACE",
														},
														"type": {
															"constant_value": "PROACTIVE",
														},
													},
												],
												"version": [
													{
														"instance_template": {
															"references": [
																"google_compute_instance_template.instance_template",
															],
														},
														"name": {
															"references": [
																"local.instance_igm_version",
															],
														},
													},
												],
												"zone": {
													"references": [
														"var.gcp_zone",
													],
												},
											},
											"mode":                "managed",
											"name":                "instance_igm",
											"provider_config_key": "tfe_asg:google-beta",
											"schema_version":      0,
											"type":                "google_compute_instance_group_manager",
										},
										{
											"address": "google_compute_instance_template.instance_template",
											"depends_on": [
												"var.depends_on_other_modules",
											],
											"expressions": {
												"description": {
													"references": [
														"var.cluster_description",
													],
												},
												"disk": [
													{
														"auto_delete": {
															"constant_value": true,
														},
														"boot": {
															"constant_value": true,
														},
														"disk_size_gb": {
															"references": [
																"var.instance_disk_size",
															],
														},
														"source_image": {
															"references": [
																"var.instance_source_image",
															],
														},
													},
												],
												"instance_description": {
													"references": [
														"local.instance_template_name",
													],
												},
												"labels": {
													"references": [
														"var.gcp_common_labels",
													],
												},
												"machine_type": {
													"references": [
														"var.instance_machine_type",
													],
												},
												"metadata": {
													"references": [
														"var.metadata",
													],
												},
												"metadata_startup_script": {
													"references": [
														"var.instance_startup_script",
													],
												},
												"name": {
													"references": [
														"local.instance_template_name",
													],
												},
												"network_interface": [
													{
														"network": {
															"references": [
																"var.instance_network",
															],
														},
													},
												],
												"region": {
													"references": [
														"var.gcp_region",
													],
												},
												"scheduling": [
													{
														"automatic_restart": {
															"constant_value": true,
														},
														"on_host_maintenance": {
															"constant_value": "MIGRATE",
														},
														"preemptible": {
															"constant_value": false,
														},
													},
												],
												"service_account": [
													{
														"email": {
															"references": [
																"var.service_account_email",
															],
														},
														"scopes": {
															"constant_value": [
																"userinfo-email",
																"compute-ro",
																"storage-ro",
																"cloud-platform",
															],
														},
													},
												],
												"tags": {
													"references": [
														"var.instance_cluster_tag",
														"var.firewall_tag_instance_healthcheck",
														"var.firewall_tag_instance_outbound",
													],
												},
											},
											"mode":                "managed",
											"name":                "instance_template",
											"provider_config_key": "tfe_asg:google",
											"schema_version":      1,
											"type":                "google_compute_instance_template",
										},
										{
											"address": "google_compute_region_instance_group_manager.instance_rigm",
											"count_expression": {
												"references": [
													"var.enable_regional_group",
												],
											},
											"depends_on": [
												"google_compute_instance_template.instance_template",
											],
											"expressions": {
												"auto_healing_policies": [
													{
														"health_check": {
															"references": [
																"google_compute_health_check.instance_autohealing",
															],
														},
														"initial_delay_sec": {
															"constant_value": 1800,
														},
													},
												],
												"base_instance_name": {
													"references": [
														"local.instance_igm_name",
													],
												},
												"distribution_policy_zones": {
													"references": [
														"var.gcp_zones",
													],
												},
												"name": {
													"references": [
														"local.instance_igm_name",
													],
												},
												"region": {
													"references": [
														"var.gcp_region",
													],
												},
												"target_pools": {
													"references": [
														"var.instance_group_target_pools",
													],
												},
												"target_size": {
													"references": [
														"var.instance_count",
													],
												},
												"update_policy": [
													{
														"max_surge_fixed": {
															"constant_value": 3,
														},
														"max_unavailable_fixed": {
															"constant_value": 0,
														},
														"min_ready_sec": {
															"constant_value": 10,
														},
														"minimal_action": {
															"constant_value": "REPLACE",
														},
														"type": {
															"constant_value": "PROACTIVE",
														},
													},
												],
												"version": [
													{
														"instance_template": {
															"references": [
																"google_compute_instance_template.instance_template",
															],
														},
														"name": {
															"references": [
																"local.instance_igm_version",
															],
														},
													},
												],
											},
											"mode":                "managed",
											"name":                "instance_rigm",
											"provider_config_key": "tfe_asg:google-beta",
											"schema_version":      0,
											"type":                "google_compute_region_instance_group_manager",
										},
									],
									"variables": {
										"cluster_description":      {},
										"depends_on_other_modules": {},
										"enable_oslogin": {
											"default": "TRUE",
										},
										"enable_regional_group": {
											"default": false,
										},
										"firewall_tag_instance_healthcheck": {
											"default": "healthcheck",
										},
										"firewall_tag_instance_outbound": {
											"default": "outbound",
										},
										"gcp_cluster_name":     {},
										"gcp_common_labels":    {},
										"gcp_region":           {},
										"gcp_zone":             {},
										"gcp_zones":            {},
										"instance_cluster_tag": {},
										"instance_count":       {},
										"instance_disk_size":   {},
										"instance_group_target_pools": {
											"default":     [],
											"description": "To use a Load Balancer with the Consul cluster, you must populate this value. Specifically, this is the list of Target Pool URLs to which new Compute Instances in the Instance Group created by this module will be added. Note that updating the Target Pools attribute does not affect existing Compute Instances. Note also that use of a Load Balancer with Consul is generally discouraged; client should instead prefer to talk directly to the server where possible.",
										},
										"instance_hc": {
											"default": {
												"name": "tfe",
												"path": "/",
												"port": "8800",
											},
										},
										"instance_machine_type":   {},
										"instance_network":        {},
										"instance_source_image":   {},
										"instance_startup_script": {},
										"instance_subnetwork": {
											"default":     "",
											"description": "if auto-subnets is enabled empty value is by default",
										},
										"metadata":              {},
										"service_account_email": {},
										"user": {
											"default": "ubuntu",
										},
									},
								},
								"source": "./modules/compute/asg",
							},
							"tfe_fw": {
								"expressions": {
									"gcp_firewall_rules": {
										"constant_value": [
											{
												"ports": [
													"22",
													"80",
													"443",
													"6443",
													"8800",
													"23010",
												],
												"protocol": "TCP",
											},
										],
									},
									"gcp_network": {
										"references": [
											"module.tfe_network.service_network",
										],
									},
									"gcp_network_rule_name": {
										"references": [
											"var.environment",
											"var.project_tag",
										],
									},
									"gcp_source_ranges": {
										"constant_value": [
											"0.0.0.0/0",
										],
									},
									"target_tags": {
										"constant_value": [
											"tfe",
										],
									},
								},
								"module": {
									"resources": [
										{
											"address": "google_compute_firewall.gcp_fw",
											"expressions": {
												"name": {
													"references": [
														"var.gcp_network_rule_name",
													],
												},
												"network": {
													"references": [
														"var.gcp_network",
													],
												},
												"source_ranges": {
													"references": [
														"var.gcp_source_ranges",
													],
												},
												"target_tags": {
													"references": [
														"var.target_tags",
													],
												},
											},
											"mode":                "managed",
											"name":                "gcp_fw",
											"provider_config_key": "tfe_fw:google",
											"schema_version":      1,
											"type":                "google_compute_firewall",
										},
									],
									"variables": {
										"gcp_firewall_rules":    {},
										"gcp_network":           {},
										"gcp_network_rule_name": {},
										"gcp_source_ranges":     {},
										"target_tags":           {},
									},
								},
								"source": "./modules/network/fw/custom",
							},
							"tfe_network": {
								"expressions": {
									"auto_create_subnetworks": {
										"constant_value": true,
									},
									"enable_nat": {
										"constant_value": true,
									},
									"gcp_network_name": {
										"references": [
											"var.environment",
											"var.project_tag",
										],
									},
									"gcp_region": {
										"references": [
											"var.region",
										],
									},
								},
								"module": {
									"module_calls": {
										"nat": {
											"expressions": {
												"enable_nat": {
													"references": [
														"var.enable_nat",
													],
												},
												"gcp_nat_address_name": {
													"references": [
														"var.gcp_network_name",
													],
												},
												"gcp_network": {
													"references": [
														"google_compute_network.vpc",
													],
												},
												"gcp_region": {
													"references": [
														"var.gcp_region",
													],
												},
												"gcp_route_nat_name": {
													"references": [
														"var.gcp_network_name",
													],
												},
												"gcp_router_name": {
													"references": [
														"var.gcp_network_name",
													],
												},
												"gcp_subnetworks": {
													"references": [
														"data.google_compute_network.network",
													],
												},
											},
											"module": {
												"resources": [
													{
														"address": "google_compute_router.router",
														"count_expression": {
															"references": [
																"var.enable_nat",
															],
														},
														"expressions": {
															"bgp": [
																{
																	"asn": {
																		"constant_value": 64514,
																	},
																},
															],
															"name": {
																"references": [
																	"var.gcp_router_name",
																],
															},
															"network": {
																"references": [
																	"var.gcp_network",
																],
															},
															"region": {
																"references": [
																	"var.gcp_region",
																],
															},
														},
														"mode":                "managed",
														"name":                "router",
														"provider_config_key": "nat:google",
														"schema_version":      0,
														"type":                "google_compute_router",
													},
													{
														"address": "google_compute_router_nat.nat",
														"count_expression": {
															"references": [
																"var.enable_nat",
															],
														},
														"expressions": {
															"log_config": [
																{
																	"enable": {
																		"constant_value": true,
																	},
																	"filter": {
																		"constant_value": "ERRORS_ONLY",
																	},
																},
															],
															"name": {
																"references": [
																	"var.gcp_route_nat_name",
																],
															},
															"nat_ip_allocate_option": {
																"constant_value": "AUTO_ONLY",
															},
															"region": {
																"references": [
																	"var.gcp_region",
																],
															},
															"router": {
																"references": [
																	"google_compute_router.router[0]",
																],
															},
															"source_subnetwork_ip_ranges_to_nat": {
																"constant_value": "ALL_SUBNETWORKS_ALL_IP_RANGES",
															},
														},
														"mode":                "managed",
														"name":                "nat",
														"provider_config_key": "nat:google",
														"schema_version":      0,
														"type":                "google_compute_router_nat",
													},
												],
												"variables": {
													"enable_nat":           {},
													"gcp_nat_address_name": {},
													"gcp_network":          {},
													"gcp_region":           {},
													"gcp_route_nat_name":   {},
													"gcp_router_name":      {},
													"gcp_subnetworks":      {},
												},
											},
											"source": "../nat",
										},
									},
									"outputs": {
										"depends_on_google_service_networking_connection": {
											"expression": {
												"references": [
													"null_resource.google_service_networking_connection",
												],
											},
										},
										"service_network": {
											"expression": {
												"references": [
													"google_compute_network.vpc",
												],
											},
										},
										"service_subnets": {
											"expression": {
												"references": [
													"data.google_compute_network.network",
												],
											},
										},
									},
									"resources": [
										{
											"address": "google_compute_global_address.private_ip_address",
											"expressions": {
												"address_type": {
													"constant_value": "INTERNAL",
												},
												"name": {
													"references": [
														"var.gcp_network_name",
													],
												},
												"network": {
													"references": [
														"google_compute_network.vpc",
													],
												},
												"prefix_length": {
													"constant_value": 16,
												},
												"purpose": {
													"constant_value": "VPC_PEERING",
												},
											},
											"mode":                "managed",
											"name":                "private_ip_address",
											"provider_config_key": "tfe_network:google-beta",
											"schema_version":      0,
											"type":                "google_compute_global_address",
										},
										{
											"address": "google_compute_network.vpc",
											"expressions": {
												"auto_create_subnetworks": {
													"references": [
														"var.auto_create_subnetworks",
													],
												},
												"name": {
													"references": [
														"var.gcp_network_name",
													],
												},
											},
											"mode":                "managed",
											"name":                "vpc",
											"provider_config_key": "tfe_network:google",
											"schema_version":      0,
											"type":                "google_compute_network",
										},
										{
											"address": "google_compute_subnetwork.subnets",
											"count_expression": {
												"references": [
													"var.auto_create_subnetworks",
													"var.gcp_subnets",
												],
											},
											"expressions": {
												"ip_cidr_range": {
													"references": [
														"var.gcp_subnets",
														"count.index",
													],
												},
												"name": {
													"references": [
														"var.gcp_network_name",
														"var.gcp_subnets",
														"count.index",
													],
												},
												"network": {
													"references": [
														"google_compute_network.vpc",
													],
												},
												"private_ip_google_access": {
													"references": [
														"var.gcp_subnets",
														"count.index",
													],
												},
												"region": {
													"references": [
														"var.gcp_region",
													],
												},
											},
											"mode":                "managed",
											"name":                "subnets",
											"provider_config_key": "tfe_network:google",
											"schema_version":      0,
											"type":                "google_compute_subnetwork",
										},
										{
											"address": "google_service_networking_connection.private_vpc_connection",
											"expressions": {
												"network": {
													"references": [
														"google_compute_network.vpc",
													],
												},
												"reserved_peering_ranges": {
													"references": [
														"google_compute_global_address.private_ip_address",
													],
												},
												"service": {
													"constant_value": "servicenetworking.googleapis.com",
												},
											},
											"mode":                "managed",
											"name":                "private_vpc_connection",
											"provider_config_key": "tfe_network:google-beta",
											"schema_version":      0,
											"type":                "google_service_networking_connection",
										},
										{
											"address": "null_resource.google_service_networking_connection",
											"depends_on": [
												"google_service_networking_connection.private_vpc_connection",
											],
											"mode":                "managed",
											"name":                "google_service_networking_connection",
											"provider_config_key": "tfe_network:null",
											"schema_version":      0,
											"type":                "null_resource",
										},
										{
											"address": "data.google_compute_network.network",
											"depends_on": [
												"google_compute_network.vpc",
											],
											"expressions": {
												"name": {
													"references": [
														"var.gcp_network_name",
													],
												},
											},
											"mode":                "data",
											"name":                "network",
											"provider_config_key": "tfe_network:google",
											"schema_version":      0,
											"type":                "google_compute_network",
										},
									],
									"variables": {
										"auto_create_subnetworks": {
											"default": false,
										},
										"enable_nat":       {},
										"gcp_network_name": {},
										"gcp_region":       {},
										"gcp_subnets": {
											"default": [],
										},
										"gcp_subnets_to_nat": {
											"default": [],
										},
									},
								},
								"source": "./modules/network/service-network",
							},
							"tfe_nlb": {
								"expressions": {
									"depends_on_other_modules": {
										"references": [
											"null_resource.tfe_nlb_depends_on",
										],
									},
									"gcp_cluster_name": {
										"references": [
											"var.environment",
											"var.project_tag",
										],
									},
									"gcp_instance_group_name": {
										"references": [
											"var.environment",
											"var.project_tag",
										],
									},
									"gcp_network": {
										"references": [
											"module.tfe_network.service_network",
										],
									},
									"gcp_region": {
										"references": [
											"var.region",
										],
									},
									"gcp_zone": {
										"references": [
											"var.region",
										],
									},
									"nlb_services": {
										"references": [
											"var.nlb_services",
										],
									},
									"project_id": {
										"references": [
											"var.project",
										],
									},
									"target_tags": {
										"constant_value": [
											"tfe",
										],
									},
								},
								"module": {
									"outputs": {
										"external_ip": {
											"description": "The external ip address of the forwarding rule.",
											"expression": {
												"references": [
													"google_compute_forwarding_rule.gcp_fr",
												],
											},
										},
									},
									"resources": [
										{
											"address": "google_compute_firewall.gcp_lb_fw",
											"expressions": {
												"allow": [
													{
														"ports": {
															"references": [
																"var.nlb_services",
															],
														},
														"protocol": {
															"constant_value": "tcp",
														},
													},
												],
												"name": {
													"references": [
														"var.gcp_cluster_name",
														"var.gcp_instance_group_name",
													],
												},
												"network": {
													"references": [
														"var.gcp_network",
													],
												},
												"project": {
													"references": [
														"var.project_id",
													],
												},
												"source_ranges": {
													"constant_value": [
														"0.0.0.0/0",
													],
												},
												"target_tags": {
													"references": [
														"var.target_tags",
													],
												},
											},
											"mode":                "managed",
											"name":                "gcp_lb_fw",
											"provider_config_key": "tfe_nlb:google",
											"schema_version":      1,
											"type":                "google_compute_firewall",
										},
										{
											"address": "google_compute_forwarding_rule.gcp_fr",
											"count_expression": {
												"references": [
													"var.nlb_services",
												],
											},
											"depends_on": [
												"var.depends_on_other_modules",
											],
											"expressions": {
												"load_balancing_scheme": {
													"constant_value": "EXTERNAL",
												},
												"name": {
													"references": [
														"var.gcp_cluster_name",
														"var.nlb_services",
														"count.index",
													],
												},
												"port_range": {
													"references": [
														"var.nlb_services",
														"count.index",
													],
												},
												"project": {
													"references": [
														"var.project_id",
													],
												},
												"region": {
													"references": [
														"var.gcp_region",
													],
												},
												"target": {
													"references": [
														"google_compute_target_pool.gcp_tp",
														"count.index",
													],
												},
											},
											"mode":                "managed",
											"name":                "gcp_fr",
											"provider_config_key": "tfe_nlb:google",
											"schema_version":      0,
											"type":                "google_compute_forwarding_rule",
										},
										{
											"address": "google_compute_http_health_check.gcp_hhc",
											"count_expression": {
												"references": [
													"var.nlb_services",
												],
											},
											"expressions": {
												"name": {
													"references": [
														"var.gcp_cluster_name",
														"var.nlb_services",
														"count.index",
													],
												},
												"port": {
													"references": [
														"var.nlb_services",
														"count.index",
													],
												},
												"project": {
													"references": [
														"var.project_id",
													],
												},
												"request_path": {
													"references": [
														"var.nlb_services",
														"count.index",
													],
												},
											},
											"mode":                "managed",
											"name":                "gcp_hhc",
											"provider_config_key": "tfe_nlb:google",
											"schema_version":      0,
											"type":                "google_compute_http_health_check",
										},
										{
											"address": "google_compute_target_pool.gcp_tp",
											"count_expression": {
												"references": [
													"var.nlb_services",
												],
											},
											"expressions": {
												"health_checks": {
													"references": [
														"google_compute_http_health_check.gcp_hhc",
														"count.index",
													],
												},
												"instances": {
													"references": [
														"data.google_compute_instance_group.gce_ig",
													],
												},
												"name": {
													"references": [
														"var.gcp_cluster_name",
														"var.nlb_services",
														"count.index",
													],
												},
												"project": {
													"references": [
														"var.project_id",
													],
												},
												"region": {
													"references": [
														"var.gcp_region",
													],
												},
												"session_affinity": {
													"constant_value": "NONE",
												},
											},
											"mode":                "managed",
											"name":                "gcp_tp",
											"provider_config_key": "tfe_nlb:google",
											"schema_version":      0,
											"type":                "google_compute_target_pool",
										},
										{
											"address": "data.google_compute_instance_group.gce_ig",
											"depends_on": [
												"var.depends_on_other_modules",
											],
											"expressions": {
												"name": {
													"references": [
														"var.gcp_instance_group_name",
													],
												},
												"zone": {
													"references": [
														"var.gcp_region",
													],
												},
											},
											"mode":                "data",
											"name":                "gce_ig",
											"provider_config_key": "tfe_nlb:google",
											"schema_version":      0,
											"type":                "google_compute_instance_group",
										},
									],
									"variables": {
										"depends_on_other_modules": {},
										"gcp_cluster_name":         {},
										"gcp_instance_group_name":  {},
										"gcp_network":              {},
										"gcp_region":               {},
										"gcp_zone":                 {},
										"nlb_services":             {},
										"project_id":               {},
										"target_tags":              {},
									},
								},
								"source": "./modules/network/nlb/custom",
							},
						},
						"outputs": {
							"sql_client_cert": {
								"description": "The CA Certificate used to connect to the SQL Instance via SSL",
								"expression": {
									"references": [
										"google_sql_ssl_cert.client_cert",
									],
								},
							},
							"sql_client_privkey": {
								"description": "Private Key used to connect to the SQL Instance via SSL",
								"expression": {
									"references": [
										"google_sql_ssl_cert.client_cert",
									],
								},
							},
							"sql_client_server_cert": {
								"description": "Server Cert used to connect to the SQL Instance via SSL",
								"expression": {
									"references": [
										"google_sql_ssl_cert.client_cert",
									],
								},
							},
							"tfe_network": {
								"expression": {
									"references": [
										"module.tfe_network.service_network",
									],
								},
							},
							"tfe_nlb": {
								"expression": {
									"references": [
										"module.tfe_nlb.external_ip",
									],
								},
							},
							"tfe_storage_bucket": {
								"expression": {
									"references": [
										"google_storage_bucket.tfe-store",
									],
								},
							},
							"tfe_subnets": {
								"expression": {
									"references": [
										"module.tfe_network.service_subnets",
									],
								},
							},
						},
						"resources": [
							{
								"address": "google_sql_database_instance.tfe-db-instance",
								"depends_on": [
									"module.tfe_network.depends_on_google_service_networking_connection",
								],
								"expressions": {
									"database_version": {
										"constant_value": "POSTGRES_9_6",
									},
									"name": {
										"references": [
											"var.environment",
											"var.ssr_id",
											"var.server_type",
											"var.project_tag",
										],
									},
									"region": {
										"references": [
											"var.region",
										],
									},
									"settings": [
										{
											"availability_type": {
												"references": [
													"var.postgresql_instance_availability_type",
												],
											},
											"disk_size": {
												"references": [
													"var.postgresql_disk_size",
												],
											},
											"ip_configuration": [
												{
													"ipv4_enabled": {
														"constant_value": false,
													},
													"private_network": {
														"references": [
															"module.tfe_network.service_network",
														],
													},
													"require_ssl": {
														"constant_value": "false",
													},
												},
											],
											"maintenance_window": [
												{
													"day": {
														"references": [
															"var.postgresql_instance_maintenance_window_day",
														],
													},
													"hour": {
														"references": [
															"var.postgresql_instance_maintenance_window_hour",
														],
													},
												},
											],
											"tier": {
												"references": [
													"var.postgresql_instance_tier",
												],
											},
											"user_labels": {
												"references": [
													"var.common_labels",
												],
											},
										},
									],
								},
								"mode":                "managed",
								"name":                "tfe-db-instance",
								"provider_config_key": "primary_tfe:google",
								"schema_version":      0,
								"type":                "google_sql_database_instance",
							},
							{
								"address": "google_sql_ssl_cert.client_cert",
								"depends_on": [
									"google_sql_user.users",
								],
								"expressions": {
									"common_name": {
										"constant_value": "terraform-generated",
									},
									"instance": {
										"references": [
											"google_sql_database_instance.tfe-db-instance",
										],
									},
									"project": {
										"references": [
											"var.project",
										],
									},
								},
								"mode":                "managed",
								"name":                "client_cert",
								"provider_config_key": "primary_tfe:google",
								"schema_version":      1,
								"type":                "google_sql_ssl_cert",
							},
							{
								"address": "google_sql_user.users",
								"expressions": {
									"instance": {
										"references": [
											"google_sql_database_instance.tfe-db-instance",
										],
									},
									"name": {
										"references": [
											"var.postgresql_user",
										],
									},
									"password": {
										"references": [
											"var.postgresql_password",
										],
									},
								},
								"mode":                "managed",
								"name":                "users",
								"provider_config_key": "primary_tfe:google",
								"schema_version":      1,
								"type":                "google_sql_user",
							},
							{
								"address": "google_storage_bucket.tfe-store",
								"expressions": {
									"labels": {
										"references": [
											"var.common_labels",
											"var.server_status",
										],
									},
									"location": {
										"references": [
											"var.gcs_bucket_location",
										],
									},
									"name": {
										"references": [
											"var.environment",
											"var.ssr_id",
											"var.server_type",
											"var.project_tag",
										],
									},
									"storage_class": {
										"constant_value": "STANDARD",
									},
								},
								"mode":                "managed",
								"name":                "tfe-store",
								"provider_config_key": "primary_tfe:google",
								"schema_version":      0,
								"type":                "google_storage_bucket",
							},
							{
								"address": "null_resource.tfe_asg_depends_on",
								"depends_on": [
									"google_sql_database_instance.tfe-db-instance",
									"google_sql_user.users",
								],
								"mode":                "managed",
								"name":                "tfe_asg_depends_on",
								"provider_config_key": "primary_tfe:null",
								"schema_version":      0,
								"type":                "null_resource",
							},
							{
								"address": "null_resource.tfe_nlb_depends_on",
								"depends_on": [
									"module.tfe_network.service_network",
									"module.tfe_asg.gcp_region_instance_group_manager",
								],
								"mode":                "managed",
								"name":                "tfe_nlb_depends_on",
								"provider_config_key": "primary_tfe:null",
								"schema_version":      0,
								"type":                "null_resource",
							},
							{
								"address": "data.google_service_account.account_id",
								"expressions": {
									"account_id": {
										"references": [
											"var.account_id",
										],
									},
								},
								"mode":                "data",
								"name":                "account_id",
								"provider_config_key": "primary_tfe:google",
								"schema_version":      0,
								"type":                "google_service_account",
							},
						],
						"variables": {
							"account_id":  {},
							"certificate": {},
							"cloud_provider": {
								"description": "Name of cloud provider in 3 chars",
							},
							"common_labels":    {},
							"console_password": {},
							"costcenter": {
								"description": "Costcenter is associated with billing and its unique per application",
							},
							"creator": {
								"description": "name of the user who provisioned that resource",
							},
							"csp": {
								"default": "gcp",
							},
							"domain":                {},
							"enable-oslogin":        {},
							"enable_regional_group": {},
							"encryption_password": {
								"default":     "",
								"description": "encryption password for the vault unseal key. save this!",
							},
							"environment": {
								"description": "environment name. Examples: DEV / TST / PRD / QTY",
							},
							"frontend_dns": {},
							"gcp_zone": {
								"default": "",
							},
							"gcs_bucket_location": {},
							"gcs_credentials":     {},
							"image_family":        {},
							"instance_zone":       {},
							"license_file":        {},
							"machine_type":        {},
							"nlb_services": {
								"default": [
									{
										"name": "tfe",
										"path": "/",
										"port": 8800,
									},
									{
										"name": "hc",
										"path": "/healthz",
										"port": 23005,
									},
								],
							},
							"postgresql_database":                         {},
							"postgresql_disk_size":                        {},
							"postgresql_extra_params":                     {},
							"postgresql_instance_availability_type":       {},
							"postgresql_instance_maintenance_window_day":  {},
							"postgresql_instance_maintenance_window_hour": {},
							"postgresql_instance_tier":                    {},
							"postgresql_password":                         {},
							"postgresql_user":                             {},
							"privatekey":                                  {},
							"project":                                     {},
							"project_tag":                                 {},
							"region":                                      {},
							"salt_master_name": {
								"default": {
									"azr": "azr6387prdsltmst02",
									"gcp": "gcp6387prdsltmst01",
								},
							},
							"server_status": {
								"description": "Status of server if its live in prod or not. Hypercare / LIVE",
							},
							"server_type": {
								"description": "Type of server Examples: WEB / APP / DB",
							},
							"ssh_keys": {},
							"ssr_id": {
								"description": "SSR ID - Unique id of application",
							},
							"tfe_console_admin_username":  {},
							"tfe_cosnole_admin_useremail": {},
							"vm_boot_disk_size":           {},
							"vm_boot_disk_type":           {},
						},
					},
					"source": "../",
				},
			},
			"outputs": {
				"primary_tfe_cluster": {
					"expression": {
						"references": [
							"random_pet.console_password",
							"module.primary_tfe.tfe_nlb",
						],
					},
				},
			},
			"resources": [
				{
					"address": "azurerm_network_interface.main",
					"expressions": {
						"ip_configuration": [
							{
								"name": {
									"constant_value": "testconfiguration1",
								},
								"private_ip_address_allocation": {
									"constant_value": "Dynamic",
								},
								"subnet_id": {
									"references": [
										"azurerm_subnet.internal",
									],
								},
							},
						],
						"location": {
							"references": [
								"azurerm_resource_group.main",
							],
						},
						"name": {
							"references": [
								"var.prefix",
							],
						},
						"resource_group_name": {
							"references": [
								"azurerm_resource_group.main",
							],
						},
					},
					"mode":                "managed",
					"name":                "main",
					"provider_config_key": "azurerm",
					"schema_version":      0,
					"type":                "azurerm_network_interface",
				},
				{
					"address": "azurerm_resource_group.main",
					"expressions": {
						"location": {
							"references": [
								"var.az_location",
							],
						},
						"name": {
							"references": [
								"var.prefix",
							],
						},
					},
					"mode":                "managed",
					"name":                "main",
					"provider_config_key": "azurerm",
					"schema_version":      0,
					"type":                "azurerm_resource_group",
				},
				{
					"address": "azurerm_subnet.internal",
					"expressions": {
						"address_prefix": {
							"constant_value": "10.0.2.0/24",
						},
						"name": {
							"constant_value": "internal",
						},
						"resource_group_name": {
							"references": [
								"azurerm_resource_group.main",
							],
						},
						"virtual_network_name": {
							"references": [
								"azurerm_virtual_network.main",
							],
						},
					},
					"mode":                "managed",
					"name":                "internal",
					"provider_config_key": "azurerm",
					"schema_version":      0,
					"type":                "azurerm_subnet",
				},
				{
					"address": "azurerm_virtual_machine.main",
					"expressions": {
						"location": {
							"references": [
								"azurerm_resource_group.main",
							],
						},
						"name": {
							"references": [
								"var.prefix",
							],
						},
						"network_interface_ids": {
							"references": [
								"azurerm_network_interface.main",
							],
						},
						"os_profile": [
							{
								"admin_password": {
									"constant_value": "Password1234!",
								},
								"admin_username": {
									"constant_value": "testadmin",
								},
								"computer_name": {
									"constant_value": "hostname",
								},
							},
						],
						"os_profile_linux_config": [
							{
								"disable_password_authentication": {
									"constant_value": false,
								},
							},
						],
						"resource_group_name": {
							"references": [
								"azurerm_resource_group.main",
							],
						},
						"storage_image_reference": [
							{
								"offer": {
									"constant_value": "UbuntuServer",
								},
								"publisher": {
									"constant_value": "Canonical",
								},
								"sku": {
									"constant_value": "16.04-LTS",
								},
								"version": {
									"constant_value": "latest",
								},
							},
						],
						"storage_os_disk": [
							{
								"caching": {
									"constant_value": "ReadWrite",
								},
								"create_option": {
									"constant_value": "FromImage",
								},
								"managed_disk_type": {
									"constant_value": "Standard_LRS",
								},
								"name": {
									"constant_value": "myosdisk1",
								},
							},
						],
						"tags": {
							"constant_value": {
								"environment": "staging",
							},
						},
						"vm_size": {
							"constant_value": "Standard_DS1_v2",
						},
					},
					"mode":                "managed",
					"name":                "main",
					"provider_config_key": "azurerm",
					"schema_version":      0,
					"type":                "azurerm_virtual_machine",
				},
				{
					"address": "azurerm_virtual_network.main",
					"expressions": {
						"address_space": {
							"constant_value": [
								"10.0.0.0/16",
							],
						},
						"location": {
							"references": [
								"azurerm_resource_group.main",
							],
						},
						"name": {
							"references": [
								"var.prefix",
							],
						},
						"resource_group_name": {
							"references": [
								"azurerm_resource_group.main",
							],
						},
					},
					"mode":                "managed",
					"name":                "main",
					"provider_config_key": "azurerm",
					"schema_version":      0,
					"type":                "azurerm_virtual_network",
				},
				{
					"address": "random_id.project_tag",
					"expressions": {
						"byte_length": {
							"constant_value": 4,
						},
					},
					"mode":                "managed",
					"name":                "project_tag",
					"provider_config_key": "random",
					"schema_version":      0,
					"type":                "random_id",
				},
				{
					"address": "random_pet.console_password",
					"expressions": {
						"length": {
							"constant_value": 3,
						},
					},
					"mode":                "managed",
					"name":                "console_password",
					"provider_config_key": "random",
					"schema_version":      0,
					"type":                "random_pet",
				},
				{
					"address": "random_string.default_enc_password",
					"expressions": {
						"length": {
							"constant_value": 32,
						},
						"special": {
							"constant_value": false,
						},
						"upper": {
							"constant_value": true,
						},
					},
					"mode":                "managed",
					"name":                "default_enc_password",
					"provider_config_key": "random",
					"schema_version":      1,
					"type":                "random_string",
				},
			],
			"variables": {
				"account_id":                                  {},
				"az_location":                                 {},
				"certificate":                                 {},
				"client_id":                                   {},
				"client_secret":                               {},
				"cloud_provider":                              {},
				"costcenter":                                  {},
				"creator":                                     {},
				"domain":                                      {},
				"dr_region":                                   {},
				"enable-oslogin":                              {},
				"enable_regional_group":                       {},
				"encryption_password":                         {},
				"environment":                                 {},
				"frontend_dns":                                {},
				"gcs_bucket_location":                         {},
				"gcs_credentials":                             {},
				"image_family":                                {},
				"instance_zone":                               {},
				"license_file":                                {},
				"machine_type":                                {},
				"postgresql_database":                         {},
				"postgresql_disk_size":                        {},
				"postgresql_extra_params":                     {},
				"postgresql_instance_availability_type":       {},
				"postgresql_instance_maintenance_window_day":  {},
				"postgresql_instance_maintenance_window_hour": {},
				"postgresql_instance_tier":                    {},
				"postgresql_password":                         {},
				"postgresql_user":                             {},
				"prefix": {
					"default": "tfvmex",
				},
				"privatekey":                  {},
				"project":                     {},
				"region":                      {},
				"server_status":               {},
				"server_type":                 {},
				"ssh_keys":                    {},
				"ssr_id":                      {},
				"subscription_id":             {},
				"tenant_id":                   {},
				"tfe_console_admin_username":  {},
				"tfe_cosnole_admin_useremail": {},
				"vm_boot_disk_size":           {},
				"vm_boot_disk_type":           {},
			},
		},
	},
	"format_version": "0.1",
	"output_changes": {
		"primary_tfe_cluster": {
			"actions": [
				"create",
			],
			"after_unknown": true,
			"before":        null,
		},
	},
	"planned_values": {
		"outputs": {
			"primary_tfe_cluster": {
				"sensitive": false,
			},
		},
		"root_module": {
			"child_modules": [
				{
					"address": "module.primary_tfe",
					"child_modules": [
						{
							"address": "module.primary_tfe.module.tfe_nlb",
							"resources": [
								{
									"address":        "module.primary_tfe.module.tfe_nlb.data.google_compute_instance_group.gce_ig",
									"mode":           "data",
									"name":           "gce_ig",
									"provider_name":  "google.west1",
									"schema_version": 0,
									"type":           "google_compute_instance_group",
									"values": {
										"zone": "europe-west4-a",
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_nlb.google_compute_firewall.gcp_lb_fw",
									"mode":           "managed",
									"name":           "gcp_lb_fw",
									"provider_name":  "google.west1",
									"schema_version": 1,
									"type":           "google_compute_firewall",
									"values": {
										"allow": [
											{
												"ports": [
													"8800",
													"23005",
												],
												"protocol": "tcp",
											},
										],
										"deny":           [],
										"description":    null,
										"disabled":       null,
										"enable_logging": null,
										"priority":       1000,
										"project":        "aeroframe",
										"source_ranges": [
											"0.0.0.0/0",
										],
										"source_service_accounts": null,
										"source_tags":             null,
										"target_service_accounts": null,
										"target_tags": [
											"tfe",
										],
										"timeouts": null,
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "gcp_fr",
									"provider_name":  "google.west1",
									"schema_version": 0,
									"type":           "google_compute_forwarding_rule",
									"values": {
										"all_ports":             null,
										"backend_service":       null,
										"description":           null,
										"load_balancing_scheme": "EXTERNAL",
										"port_range":            "8800",
										"ports":                 null,
										"project":               "aeroframe",
										"region":                "europe-west4",
										"service_label":         null,
										"timeouts":              null,
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[1]",
									"index":          1,
									"mode":           "managed",
									"name":           "gcp_fr",
									"provider_name":  "google.west1",
									"schema_version": 0,
									"type":           "google_compute_forwarding_rule",
									"values": {
										"all_ports":             null,
										"backend_service":       null,
										"description":           null,
										"load_balancing_scheme": "EXTERNAL",
										"port_range":            "23005",
										"ports":                 null,
										"project":               "aeroframe",
										"region":                "europe-west4",
										"service_label":         null,
										"timeouts":              null,
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "gcp_hhc",
									"provider_name":  "google.west1",
									"schema_version": 0,
									"type":           "google_compute_http_health_check",
									"values": {
										"check_interval_sec":  5,
										"description":         null,
										"healthy_threshold":   2,
										"host":                null,
										"port":                8800,
										"project":             "aeroframe",
										"request_path":        "/",
										"timeout_sec":         5,
										"timeouts":            null,
										"unhealthy_threshold": 2,
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[1]",
									"index":          1,
									"mode":           "managed",
									"name":           "gcp_hhc",
									"provider_name":  "google.west1",
									"schema_version": 0,
									"type":           "google_compute_http_health_check",
									"values": {
										"check_interval_sec":  5,
										"description":         null,
										"healthy_threshold":   2,
										"host":                null,
										"port":                23005,
										"project":             "aeroframe",
										"request_path":        "/healthz",
										"timeout_sec":         5,
										"timeouts":            null,
										"unhealthy_threshold": 2,
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "gcp_tp",
									"provider_name":  "google.west1",
									"schema_version": 0,
									"type":           "google_compute_target_pool",
									"values": {
										"backup_pool":      null,
										"description":      null,
										"failover_ratio":   null,
										"project":          "aeroframe",
										"region":           "europe-west4",
										"session_affinity": "NONE",
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[1]",
									"index":          1,
									"mode":           "managed",
									"name":           "gcp_tp",
									"provider_name":  "google.west1",
									"schema_version": 0,
									"type":           "google_compute_target_pool",
									"values": {
										"backup_pool":      null,
										"description":      null,
										"failover_ratio":   null,
										"project":          "aeroframe",
										"region":           "europe-west4",
										"session_affinity": "NONE",
									},
								},
							],
						},
						{
							"address": "module.primary_tfe.module.tfe_asg",
							"resources": [
								{
									"address":        "module.primary_tfe.module.tfe_asg.google_compute_health_check.instance_autohealing",
									"mode":           "managed",
									"name":           "instance_autohealing",
									"provider_name":  "google.west1",
									"schema_version": 0,
									"type":           "google_compute_health_check",
									"values": {
										"check_interval_sec": 5,
										"description":        null,
										"healthy_threshold":  2,
										"http2_health_check": [],
										"http_health_check":  [],
										"https_health_check": [],
										"ssl_health_check":   [],
										"tcp_health_check": [
											{
												"port":               8800,
												"port_name":          null,
												"port_specification": null,
												"proxy_header":       "NONE",
												"request":            null,
												"response":           null,
											},
										],
										"timeout_sec":         5,
										"timeouts":            null,
										"unhealthy_threshold": 10,
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_asg.google_compute_instance_template.instance_template",
									"mode":           "managed",
									"name":           "instance_template",
									"provider_name":  "google.west1",
									"schema_version": 1,
									"type":           "google_compute_instance_template",
									"values": {
										"can_ip_forward": false,
										"disk": [
											{
												"auto_delete":         true,
												"boot":                true,
												"disk_encryption_key": [],
												"disk_name":           null,
												"disk_size_gb":        50,
												"labels":              null,
												"source":              null,
												"source_image":        "rhel-7-v20190729",
											},
										],
										"enable_display":    null,
										"guest_accelerator": [],
										"labels": {
											"billing":      "937294293-smatale-tst",
											"operations":   "937294293-smatale-tst",
											"security":     "937294293-smatale-tst",
											"serverstatus": "hypercare",
											"servertype":   "app",
										},
										"machine_type":            "n1-standard-2",
										"metadata_startup_script": "    echo \"trigger disable yum cron\"\n    systemctl disable yum-cron\n    systemctl stop yum-cron \n    echo \"nameserver 169.254.169.254\" >> /etc/resolv.conf\n    # #!/bin/bash\n\n# set -e -o pipefail\n\n# # Grab all the install/config data from gcp's metadata store\n# mkdir /etc/ptfe\n\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/jq-url\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/jq-url\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/ptfe-hostname\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/hostname\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/repl-data\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/repl-data\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/b64-license\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/replicated-licenseb64\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/encpasswd\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/encpasswd\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_user\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_user\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_password\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_password\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_netloc\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_netloc\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_dbname\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_dbname\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_extra_params\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_extra_params\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_credentials\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_credentials\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_project\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_project\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_bucket\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_bucket\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_certificate\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/terraform.crt\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_cert_privatekey\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/terraform.key\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/private_ip\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_console_admin_username\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/tfe_console_admin_username\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_cosnole_admin_useremail\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/tfe_cosnole_admin_useremail\n\n# chown root:root /etc/ptfe/*\n# chown 0400 /etc/ptfe/*\n\n# JQ_URL=$(cat /etc/ptfe/jq-url)\n# curl -sfSL -o /usr/bin/jq $JQ_URL\n# chmod +x /usr/bin/jq\n\n# CONSOLE=$(base64 --decode /etc/ptfe/repl-data)\n# export CONSOLE\n# TFE_USERNAME=$(cat /etc/ptfe/tfe_console_admin_username)\n# export TFE_USERNAME\n# TFE_USEREMAIL=$(cat /etc/ptfe/tfe_cosnole_admin_useremail)\n# export TFE_USEREMAIL\n\n# # Store various bits of info as env vars\n# base64 -d /etc/ptfe/replicated-licenseb64 > /etc/replicated.rli\n# PTFEHOSTNAME=$(cat /etc/ptfe/hostname)\n# #PTFEHOSTNAME=${PTFEHOSTNAME%?}\n# export PTFEHOSTNAME\n# ENCPASSWD=$(cat /etc/ptfe/encpasswd)\n# export ENCPASSWD\n# PRIVATEIP=$(cat /etc/ptfe/private_ip)\n# export PRIVATEIP\n\n\n\n# if [[ $(< /etc/ptfe/pg_user) != none ]]; then\n#     PG_USER=$(cat /etc/ptfe/pg_user)\n#     export PG_USER\n#     PG_PASSWORD=$(base64 --decode /etc/ptfe/pg_password)\n#     export PG_PASSWORD\n#     PG_NETLOC=$(cat /etc/ptfe/pg_netloc)\n#     export PG_NETLOC\n#     PG_DBNAME=$(cat /etc/ptfe/pg_dbname)\n#     export PG_DBNAME\n#     if [ -f /etc/ptfe/pg_extra_params ]; then\n#         PG_EXTRA_PARAMS=$(cat /etc/ptfe/pg_extra_params)\n#     else\n#         PG_EXTRA_PARAMS=\n#     fi\n#     export PG_EXTRA_PARAMS\n#     GCS_PROJECT=$(cat /etc/ptfe/gcs_project)\n#     export GCS_PROJECT\n#     GCS_BUCKET=$(cat /etc/ptfe/gcs_bucket)\n#     export GCS_BUCKET\n#     GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n#     export GCS_CREDS\n# fi\n\n# # Setup the config files that will be used during the install\n# /bin/cat <<EOF >/etc/ptfe/payload.json\n# {\n#   \"username\": \"$TFE_USERNAME\",\n#   \"email\": \"$TFE_USEREMAIL\",\n#   \"password\": \"$CONSOLE\"\n# }\n# EOF\n\n# chown 0400 /etc/ptfe/payload.json\n\n# /bin/cat <<EOF >/etc/replicated-ptfe.conf\n# {\n#     \"hostname\": {\n#         \"value\": \"$PTFEHOSTNAME\"\n#     },\n#     \"enc_password\": {\n#         \"value\": \"$ENCPASSWD\"\n#     },\n#     \"installation_type\": {\n#         \"value\": \"production\"\n#     },\n#     \"production_type\": {\n#         \"value\": \"external\"\n#     },\n#     \"pg_user\": {\n#         \"value\": \"$PG_USER\"\n#     },\n#     \"pg_password\": {\n#         \"value\": \"$PG_PASSWORD\"\n#     },\n#     \"pg_netloc\": {\n#         \"value\": \"$PG_NETLOC\"\n#     },\n#     \"pg_dbname\": {\n#         \"value\": \"$PG_DBNAME\"\n#     },\n#     \"pg_extra_params\": {\n#         \"value\": \"$PG_EXTRA_PARAMS\"\n#     },\n#     \"placement\": {\n#         \"value\": \"placement_gcs\"\n#     },\n#     \"gcs_credentials\": {\n#         \"value\": \"$GCS_CREDS\"\n#     },\n#     \"gcs_project\": {\n#         \"value\": \"$GCS_PROJECT\"\n#     },\n#     \"gcs_bucket\": {\n#         \"value\": \"$GCS_BUCKET\"\n#     }\n# }\n# EOF\n\n# chown root:root /etc/replicated-ptfe.conf\n# chmod 0644 /etc/replicated-ptfe.conf\n\n# /bin/cat <<EOF >/etc/replicated.conf\n# {\n#     \"DaemonAuthenticationType\":     \"password\",\n#     \"DaemonAuthenticationPassword\": \"$CONSOLE\",\n#     \"TlsBootstrapType\":             \"server-path\",\n#     \"TlsBootstrapHostname\":         \"$PTFEHOSTNAME\",\n#     \"TlsBootstrapCert\":             \"/etc/ptfe/terraform.crt\",\n#     \"TlsBootstrapKey\":              \"/etc/ptfe/terraform.key\",\n#     \"BypassPreflightChecks\":        true,\n#     \"ImportSettingsFrom\":           \"/etc/replicated-ptfe.conf\",\n#     \"LicenseFileLocation\":          \"/etc/replicated.rli\"\n# }\n# EOF\n\n# chown root:root /etc/replicated.conf\n# chmod 0644 /etc/replicated.conf\n\n# #Install Stackdriver Logging and Monitoring Agent\n\n# GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n# export GCS_CREDS\n\n# GOOGLE_APPLICATION_CREDENTIALS=\"/etc/google/auth/application_default_credentials.json\"\n# sudo mkdir -p /etc/google/auth\n# echo \"$GCS_CREDS\" > \"$GOOGLE_APPLICATION_CREDENTIALS\"\n# sudo chown root:root \"$GOOGLE_APPLICATION_CREDENTIALS\"\n# sudo chmod 0400 \"$GOOGLE_APPLICATION_CREDENTIALS\"\n\n# curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\n# sudo bash install-monitoring-agent.sh\n\n# curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh\n# sudo bash install-logging-agent.sh --structured\n\n# echo \"Running docker install\"\n# sudo -s\n# yum install docker-1.13.1-108.git4ef4b30.el7 -y\n\n# #Install Google Cloud SDK and JQ\n# tee -a /etc/yum.repos.d/google-cloud-sdk.repo << EOM\n# [google-cloud-sdk]\n# name=Google Cloud SDK\n# baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64\n# enabled=1\n# gpgcheck=1\n# repo_gpgcheck=1\n# gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg\n#        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\n# EOM\n\n# yum install google-cloud-sdk -y\n# yum install epel-release -y\n# yum install jq -y\n# echo \"Running docker storage setup\"\n\n# #Remove authorization plugins active RHEL Docker Service\n# systemctl stop docker\n# rm /usr/lib/systemd/system/docker.service\n\n# touch /usr/lib/systemd/system/docker.service\n# chown root:root /usr/lib/systemd/system/docker.service\n# chmod 0644 /usr/lib/systemd/system/docker.service\n# cat > /usr/lib/systemd/system/docker.service <<EOF\n# Wants=docker-storage-setup.service\n# Requires=rhel-push-plugin.service registries.service\n# Requires=docker-cleanup.timer\n# [Service]\n# Type=notify\n# NotifyAccess=main\n# EnvironmentFile=-/run/containers/registries.conf\n# EnvironmentFile=-/etc/sysconfig/docker\n# EnvironmentFile=-/etc/sysconfig/docker-storage\n# EnvironmentFile=-/etc/sysconfig/docker-network\n# Environment=GOTRACEBACK=crash\n# Environment=DOCKER_HTTP_HOST_COMPAT=1\n# Environment=PATH=/usr/libexec/docker:/usr/bin:/usr/sbin\n# ExecStart=/usr/bin/dockerd-current \\\n#           --add-runtime docker-runc=/usr/libexec/docker/docker-runc-current \\\n#           --default-runtime=docker-runc \\\n#           --exec-opt native.cgroupdriver=systemd \\\n#           --userland-proxy-path=/usr/libexec/docker/docker-proxy-current \\\n#           --init-path=/usr/libexec/docker/docker-init-current \\\n#           --seccomp-profile=/etc/docker/seccomp.json \\\n#           $OPTIONS \\\n#           $DOCKER_STORAGE_OPTIONS \\\n#           $DOCKER_NETWORK_OPTIONS \\\n#           $ADD_REGISTRY \\\n#           $BLOCK_REGISTRY \\\n#           $INSECURE_REGISTRY \\\n#           $REGISTRIES\n# ExecReload=/bin/kill -s HUP $MAINPID\n# LimitNOFILE=1048576\n# LimitNPROC=1048576\n# LimitCORE=infinity\n# TimeoutStartSec=0\n# Restart=on-abnormal\n# KillMode=process\n#!/bin/bash\nset -e -o pipefail\n\n# global vars\nmetadataURL=\"http://metadata.google.internal/computeMetadata/v1/instance\"\nmetadataHeader=\"Metadata-Flavor: Google\"\nmetadataOutput=/etc/ptfe/\n\n# Grab all the install/config data from gcp's metadata store\nfunction metadataAttributesPTFE {\n    curl --silent --show-error --location --header \"$metadataHeader\" \"$metadataURL/attributes/$1\" -o $metadataOutput$2\n}\n\nfunction metadataNetworkPTFE {\n    curl --silent --show-error --location --header \"$metadataHeader\" \"$metadataURL/network-interfaces/0/$1\" -o $metadataOutput$2\n}\n\nfunction installMetadataInfo {\n    mkdir /etc/ptfe\n\n    metadataAttributesPTFE \"ptfe-hostname\" hostname\n    metadataAttributesPTFE \"b64-license\" replicated-licenseb64\n\n    metadataAttributesPTFE \"repl-data\" repl-data\n    metadataAttributesPTFE \"health_url\" health_url\n    metadataAttributesPTFE \"encpasswd\" encpasswd\n    metadataAttributesPTFE \"pg_user\" pg_user\n    metadataAttributesPTFE \"pg_password\" pg_password\n    metadataAttributesPTFE \"pg_netloc\" pg_netloc\n    metadataAttributesPTFE \"pg_dbname\" pg_dbname\n    metadataAttributesPTFE \"pg_extra_params\" pg_extra_params\n    metadataAttributesPTFE \"gcs_credentials\" gcs_credentials\n    metadataAttributesPTFE \"gcs_project\" gcs_project\n    metadataAttributesPTFE \"gcs_bucket\" gcs_bucket\n    metadataAttributesPTFE \"tfe_console_admin_username\" tfe_console_admin_username\n    metadataAttributesPTFE \"tfe_cosnole_admin_useremail\" tfe_cosnole_admin_useremail\n\n    metadataAttributesPTFE \"tfe_certificate\" terraform.crt\n    metadataAttributesPTFE \"tfe_cert_privatekey\" terraform.key\n\n    metadataAttributesPTFE \"sql_ssl_cert\" sql_ssl_cert.pem\n    metadataAttributesPTFE \"sql_ssl_server_ca_cert\" sql_ssl_server_ca_cert.pem\n    metadataAttributesPTFE \"sql_ssl_private_key\" sql_ssl_private_key.pem\n\n    metadataNetworkPTFE \"ip\" private_ip\n\n    chown root:root /etc/ptfe/*\n    chown 400 /etc/ptfe/*\n\n    chmod 600 /etc/ptfe/sql_ssl_*\n}\n\nfunction setupMetadataConfig {\n    base64 -d /etc/ptfe/replicated-licenseb64 > /etc/replicated.rli\n\n    CONSOLE=$(base64 --decode /etc/ptfe/repl-data)\n    TFE_USERNAME=$(cat /etc/ptfe/tfe_console_admin_username)\n    TFE_USEREMAIL=$(cat /etc/ptfe/tfe_cosnole_admin_useremail)\n    PTFEHOSTNAME=$(cat /etc/ptfe/hostname)\n\n    ENCPASSWD=$(cat /etc/ptfe/encpasswd)\n    PRIVATEIP=$(cat /etc/ptfe/private_ip)\n\n    PG_USER=$(cat /etc/ptfe/pg_user)\n    PG_PASSWORD=$(base64 --decode /etc/ptfe/pg_password)\n    PG_NETLOC=$(cat /etc/ptfe/pg_netloc)\n    PG_DBNAME=$(cat /etc/ptfe/pg_dbname)    \n\n    GCS_PROJECT=$(cat /etc/ptfe/gcs_project)\n    GCS_BUCKET=$(cat /etc/ptfe/gcs_bucket)\n    GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n    \n    if [ -f /etc/ptfe/pg_extra_params ]; then\n        PG_EXTRA_PARAMS=$(cat /etc/ptfe/pg_extra_params)\n    else\n        PG_EXTRA_PARAMS=\"\"\n    fi\n\n# Setup the config files that will be used during the install\ncat > /etc/ptfe/payload.json <<EOF \n{\n  \"username\": \"$TFE_USERNAME\",\n  \"email\": \"$TFE_USEREMAIL\",\n  \"password\": \"$CONSOLE\"\n}\nEOF\n\ncat > /etc/replicated-ptfe.conf <<EOF \n{\n    \"hostname\": {\n        \"value\": \"$PTFEHOSTNAME\"\n    },\n    \"enc_password\": {\n        \"value\": \"$ENCPASSWD\"\n    },\n    \"installation_type\": {\n        \"value\": \"production\"\n    },\n    \"production_type\": {\n        \"value\": \"external\"\n    },\n    \"pg_user\": {\n        \"value\": \"$PG_USER\"\n    },\n    \"pg_password\": {\n        \"value\": \"$PG_PASSWORD\"\n    },\n    \"pg_netloc\": {\n        \"value\": \"$PG_NETLOC\"\n    },\n    \"pg_dbname\": {\n        \"value\": \"$PG_DBNAME\"\n    },\n    \"pg_extra_params\": {\n        \"value\": \"$PG_EXTRA_PARAMS\"\n    },\n    \"placement\": {\n        \"value\": \"placement_gcs\"\n    },\n    \"gcs_credentials\": {\n        \"value\": \"$GCS_CREDS\"\n    },\n    \"gcs_project\": {\n        \"value\": \"$GCS_PROJECT\"\n    },\n    \"gcs_bucket\": {\n        \"value\": \"$GCS_BUCKET\"\n    }\n}\nEOF\n\ncat > /etc/replicated.conf <<EOF \n{\n    \"DaemonAuthenticationType\":     \"password\",\n    \"DaemonAuthenticationPassword\": \"$CONSOLE\",\n    \"TlsBootstrapType\":             \"server-path\",\n    \"TlsBootstrapHostname\":         \"$PTFEHOSTNAME\",\n    \"TlsBootstrapCert\":             \"/etc/ptfe/terraform.crt\",\n    \"TlsBootstrapKey\":              \"/etc/ptfe/terraform.key\",\n    \"BypassPreflightChecks\":        true,\n    \"ImportSettingsFrom\":           \"/etc/replicated-ptfe.conf\",\n    \"LicenseFileLocation\":          \"/etc/replicated.rli\"\n}\nEOF\n\n    chown 400 /etc/ptfe/payload.json\n    chown root:root /etc/replicated-ptfe.conf\n    chmod 644 /etc/replicated-ptfe.conf\n    chown root:root /etc/replicated.conf\n    chmod 644 /etc/replicated.conf\n}\n\nfunction installGoogleAgents {\n    GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n    GOOGLE_APPLICATION_CREDENTIALS=\"/etc/google/auth/application_default_credentials.json\"\n    mkdir -p /etc/google/auth\n    echo \"$GCS_CREDS\" > \"$GOOGLE_APPLICATION_CREDENTIALS\"\n    chown root:root \"$GOOGLE_APPLICATION_CREDENTIALS\"\n    chmod 400 \"$GOOGLE_APPLICATION_CREDENTIALS\"\n\n    curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\n    bash install-monitoring-agent.sh\n\n    curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh\n    bash install-logging-agent.sh --structured\n}\n\nfunction installDocker {\n\nmkdir -p /etc/docker/\ncat > /etc/docker/daemon.conf << EOF\n{\n  \"mtu\": 1460\n}\nEOF\n\n    # OS specific configs\n    setenforce 0\n    mkdir -p /lib/tc\n    mount --bind /usr/lib64/tc/ /lib/tc/\n    sed -i -e 's/^SELINUX=enforcing/SELINUX=permissive/' /etc/sysconfig/selinux \n\n    yum -y install docker ipvsadm wget unzip\n    systemctl enable docker\n    systemctl start docker\n}\n\nfunction installPTFE {\n    echo \"Running 'ptfe install'\"\n\n    curl -o install.sh https://install.terraform.io/ptfe/stable\n    chmod +x ./install.sh\n    bash ./install.sh \\\n        no-proxy \\\n        no-docker \\\n        private-address=$(cat /etc/ptfe/private_ip) \\\n        public-address=$(cat /etc/ptfe/private_ip)\n\n    PRIVATEIP=$(cat /etc/ptfe/private_ip)\n    health_check=$(cat /etc/ptfe/health_url | sed \"s/IP/$PRIVATEIP\"/g )\n\n    until curl -ks $health_check | jq -r '.passed' | grep -q true; do\n        printf '.'\n        sleep 15\n    done\n\n    echo \"TFE is in healthy state now\"\n\n    initial_token=$(/usr/local/bin/replicated admin retrieve-iact)\n    echo \"== intial token is $initial_token ==\"\n\n    curl \\\n    --header \"Content-Type: application/json\" \\\n    --request POST \\\n    --data @/etc/ptfe/payload.json \\\n    http://${PRIVATEIP}:8800/admin/initial-admin-user?token=$initial_token\n}\n\nfunction main {\n    # install dependencies\n    yum install google-cloud-sdk -y\n    yum install epel-release -y\n    yum install jq -y\n\n    installMetadataInfo \n    setupMetadataConfig\n    installGoogleAgents\n    installDocker\n    installPTFE\n\n}\n\nmain\n",
										"min_cpu_platform":        null,
										"network_interface": [
											{
												"access_config":  [],
												"alias_ip_range": [],
												"network_ip":     null,
											},
										],
										"region": "europe-west4",
										"scheduling": [
											{
												"automatic_restart":   true,
												"node_affinities":     [],
												"on_host_maintenance": "MIGRATE",
												"preemptible":         false,
											},
										],
										"service_account": [
											{
												"email": "aeroframe@aeroframe.iam.gserviceaccount.com",
												"scopes": [
													"https://www.googleapis.com/auth/cloud-platform",
													"https://www.googleapis.com/auth/compute.readonly",
													"https://www.googleapis.com/auth/devstorage.read_only",
													"https://www.googleapis.com/auth/userinfo.email",
												],
											},
										],
										"shielded_instance_config": [],
										"tags": [
											"healthcheck",
											"outbound",
											"tfe",
										],
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_asg.google_compute_region_instance_group_manager.instance_rigm[0]",
									"index":          0,
									"mode":           "managed",
									"name":           "instance_rigm",
									"provider_name":  "google-beta.west1",
									"schema_version": 0,
									"type":           "google_compute_region_instance_group_manager",
									"values": {
										"auto_healing_policies": [
											{
												"initial_delay_sec": 1800,
											},
										],
										"description": null,
										"distribution_policy_zones": [
											"europe-west4-a",
											"europe-west4-b",
										],
										"named_port":   [],
										"region":       "europe-west4",
										"target_pools": null,
										"target_size":  2,
										"timeouts":     null,
										"update_policy": [
											{
												"instance_redistribution_type": null,
												"max_surge_fixed":              3,
												"max_surge_percent":            null,
												"max_unavailable_fixed":        0,
												"max_unavailable_percent":      null,
												"min_ready_sec":                10,
												"minimal_action":               "REPLACE",
												"type":                         "PROACTIVE",
											},
										],
										"version": [
											{
												"target_size": [],
											},
										],
										"wait_for_instances": false,
									},
								},
							],
						},
						{
							"address": "module.primary_tfe.module.tfe_network",
							"child_modules": [
								{
									"address": "module.primary_tfe.module.tfe_network.module.nat",
									"resources": [
										{
											"address":        "module.primary_tfe.module.tfe_network.module.nat.google_compute_router.router[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "router",
											"provider_name":  "google.west1",
											"schema_version": 0,
											"type":           "google_compute_router",
											"values": {
												"bgp": [
													{
														"advertise_mode":       "DEFAULT",
														"advertised_groups":    null,
														"advertised_ip_ranges": [],
														"asn": 64514,
													},
												],
												"description": null,
												"region":      "europe-west4",
												"timeouts":    null,
											},
										},
										{
											"address":        "module.primary_tfe.module.tfe_network.module.nat.google_compute_router_nat.nat[0]",
											"index":          0,
											"mode":           "managed",
											"name":           "nat",
											"provider_name":  "google.west1",
											"schema_version": 0,
											"type":           "google_compute_router_nat",
											"values": {
												"icmp_idle_timeout_sec": 30,
												"log_config": [
													{
														"enable": true,
														"filter": "ERRORS_ONLY",
													},
												],
												"min_ports_per_vm":       null,
												"nat_ip_allocate_option": "AUTO_ONLY",
												"nat_ips":                null,
												"region":                 "europe-west4",
												"source_subnetwork_ip_ranges_to_nat": "ALL_SUBNETWORKS_ALL_IP_RANGES",
												"subnetwork":                         [],
												"tcp_established_idle_timeout_sec":   1200,
												"tcp_transitory_idle_timeout_sec":    30,
												"timeouts":                           null,
												"udp_idle_timeout_sec":               30,
											},
										},
									],
								},
							],
							"resources": [
								{
									"address":        "module.primary_tfe.module.tfe_network.data.google_compute_network.network",
									"mode":           "data",
									"name":           "network",
									"provider_name":  "google.west1",
									"schema_version": 0,
									"type":           "google_compute_network",
									"values": {
										"project": null,
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_network.google_compute_global_address.private_ip_address",
									"mode":           "managed",
									"name":           "private_ip_address",
									"provider_name":  "google-beta.west1",
									"schema_version": 0,
									"type":           "google_compute_global_address",
									"values": {
										"address_type":  "INTERNAL",
										"description":   null,
										"ip_version":    null,
										"labels":        null,
										"prefix_length": 16,
										"purpose":       "VPC_PEERING",
										"timeouts":      null,
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_network.google_compute_network.vpc",
									"mode":           "managed",
									"name":           "vpc",
									"provider_name":  "google.west1",
									"schema_version": 0,
									"type":           "google_compute_network",
									"values": {
										"auto_create_subnetworks":         true,
										"delete_default_routes_on_create": false,
										"description":                     null,
										"timeouts":                        null,
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_network.google_service_networking_connection.private_vpc_connection",
									"mode":           "managed",
									"name":           "private_vpc_connection",
									"provider_name":  "google-beta.west1",
									"schema_version": 0,
									"type":           "google_service_networking_connection",
									"values": {
										"service": "servicenetworking.googleapis.com",
									},
								},
								{
									"address":        "module.primary_tfe.module.tfe_network.null_resource.google_service_networking_connection",
									"mode":           "managed",
									"name":           "google_service_networking_connection",
									"provider_name":  "null",
									"schema_version": 0,
									"type":           "null_resource",
									"values": {
										"triggers": null,
									},
								},
							],
						},
						{
							"address": "module.primary_tfe.module.tfe_fw",
							"resources": [
								{
									"address":        "module.primary_tfe.module.tfe_fw.google_compute_firewall.gcp_fw",
									"mode":           "managed",
									"name":           "gcp_fw",
									"provider_name":  "google.west1",
									"schema_version": 1,
									"type":           "google_compute_firewall",
									"values": {
										"allow": [
											{
												"ports": [
													"22",
													"80",
													"443",
													"6443",
													"8800",
													"23010",
												],
												"protocol": "TCP",
											},
										],
										"deny":           [],
										"description":    null,
										"disabled":       null,
										"enable_logging": null,
										"priority":       1000,
										"source_ranges": [
											"0.0.0.0/0",
										],
										"source_service_accounts": null,
										"source_tags":             null,
										"target_service_accounts": null,
										"target_tags": [
											"tfe",
										],
										"timeouts": null,
									},
								},
							],
						},
					],
					"resources": [
						{
							"address":        "module.primary_tfe.google_sql_database_instance.tfe-db-instance",
							"mode":           "managed",
							"name":           "tfe-db-instance",
							"provider_name":  "google.west1",
							"schema_version": 0,
							"type":           "google_sql_database_instance",
							"values": {
								"database_version": "POSTGRES_9_6",
								"region":           "europe-west4",
								"settings": [
									{
										"authorized_gae_applications": null,
										"availability_type":           "REGIONAL",
										"backup_configuration": [
											{
												"binary_log_enabled": null,
												"enabled":            true,
												"location":           "europe-west4",
												"start_time":         "20:55",
											},
										],
										"database_flags":  [],
										"disk_autoresize": true,
										"disk_size":       100,
										"ip_configuration": [
											{
												"authorized_networks": [],
												"ipv4_enabled":        false,
												"require_ssl":         false,
											},
										],
										"maintenance_window": [
											{
												"day":          5,
												"hour":         12,
												"update_track": null,
											},
										],
										"pricing_plan":     "PER_USE",
										"replication_type": "SYNCHRONOUS",
										"tier":             "db-custom-8-30720",
										"user_labels": {
											"billing":    "937294293-smatale-tst",
											"operations": "937294293-smatale-tst",
											"security":   "937294293-smatale-tst",
										},
									},
								],
								"timeouts": null,
							},
						},
						{
							"address":        "module.primary_tfe.google_sql_ssl_cert.client_cert",
							"mode":           "managed",
							"name":           "client_cert",
							"provider_name":  "google.west1",
							"schema_version": 1,
							"type":           "google_sql_ssl_cert",
							"values": {
								"common_name": "terraform-generated",
								"project":     "aeroframe",
							},
						},
						{
							"address":        "module.primary_tfe.google_sql_user.users",
							"mode":           "managed",
							"name":           "users",
							"provider_name":  "google.west1",
							"schema_version": 1,
							"type":           "google_sql_user",
							"values": {
								"host":     null,
								"name":     "postgres",
								"password": "admin",
							},
						},
						{
							"address":        "module.primary_tfe.google_storage_bucket.tfe-store",
							"mode":           "managed",
							"name":           "tfe-store",
							"provider_name":  "google.west1",
							"schema_version": 0,
							"type":           "google_storage_bucket",
							"values": {
								"cors": [],
								"default_event_based_hold": null,
								"encryption":               [],
								"force_destroy":            false,
								"labels": {
									"billing":      "937294293-smatale-tst",
									"operations":   "937294293-smatale-tst",
									"security":     "937294293-smatale-tst",
									"serverstatus": "hypercare",
								},
								"lifecycle_rule":   [],
								"location":         "EUR4",
								"logging":          [],
								"requester_pays":   null,
								"retention_policy": [],
								"storage_class":    "STANDARD",
								"versioning":       [],
								"website":          [],
							},
						},
						{
							"address":        "module.primary_tfe.null_resource.tfe_asg_depends_on",
							"mode":           "managed",
							"name":           "tfe_asg_depends_on",
							"provider_name":  "null",
							"schema_version": 0,
							"type":           "null_resource",
							"values": {
								"triggers": null,
							},
						},
						{
							"address":        "module.primary_tfe.null_resource.tfe_nlb_depends_on",
							"mode":           "managed",
							"name":           "tfe_nlb_depends_on",
							"provider_name":  "null",
							"schema_version": 0,
							"type":           "null_resource",
							"values": {
								"triggers": null,
							},
						},
					],
				},
			],
			"resources": [
				{
					"address":        "azurerm_network_interface.main",
					"mode":           "managed",
					"name":           "main",
					"provider_name":  "azurerm",
					"schema_version": 0,
					"type":           "azurerm_network_interface",
					"values": {
						"enable_accelerated_networking": false,
						"enable_ip_forwarding":          false,
						"ip_configuration": [
							{
								"name": "testconfiguration1",
								"private_ip_address_allocation": "dynamic",
								"private_ip_address_version":    "IPv4",
								"public_ip_address_id":          null,
							},
						],
						"location": "westeurope",
						"name":     "tfvmex-nic",
						"network_security_group_id": null,
						"resource_group_name":       "tfvmex-resources",
					},
				},
				{
					"address":        "azurerm_resource_group.main",
					"mode":           "managed",
					"name":           "main",
					"provider_name":  "azurerm",
					"schema_version": 0,
					"type":           "azurerm_resource_group",
					"values": {
						"location": "westeurope",
						"name":     "tfvmex-resources",
					},
				},
				{
					"address":        "azurerm_subnet.internal",
					"mode":           "managed",
					"name":           "internal",
					"provider_name":  "azurerm",
					"schema_version": 0,
					"type":           "azurerm_subnet",
					"values": {
						"address_prefix": "10.0.2.0/24",
						"delegation":     [],
						"enforce_private_link_endpoint_network_policies": false,
						"enforce_private_link_service_network_policies":  false,
						"name": "internal",
						"network_security_group_id": null,
						"resource_group_name":       "tfvmex-resources",
						"route_table_id":            null,
						"service_endpoints":         null,
						"virtual_network_name":      "tfvmex-network",
					},
				},
				{
					"address":        "azurerm_virtual_machine.main",
					"mode":           "managed",
					"name":           "main",
					"provider_name":  "azurerm",
					"schema_version": 0,
					"type":           "azurerm_virtual_machine",
					"values": {
						"additional_capabilities":          [],
						"boot_diagnostics":                 [],
						"delete_data_disks_on_termination": false,
						"delete_os_disk_on_termination":    false,
						"location":                         "westeurope",
						"name":                             "tfvmex-vm",
						"os_profile": [
							{
								"admin_password": "Password1234!",
								"admin_username": "testadmin",
								"computer_name":  "hostname",
							},
						],
						"os_profile_linux_config": [
							{
								"disable_password_authentication": false,
								"ssh_keys":                        [],
							},
						],
						"os_profile_secrets":        [],
						"os_profile_windows_config": [],
						"plan": [],
						"primary_network_interface_id": null,
						"proximity_placement_group_id": null,
						"resource_group_name":          "tfvmex-resources",
						"storage_image_reference": [
							{
								"id":        "",
								"offer":     "UbuntuServer",
								"publisher": "Canonical",
								"sku":       "16.04-LTS",
								"version":   "latest",
							},
						],
						"storage_os_disk": [
							{
								"caching":                   "ReadWrite",
								"create_option":             "FromImage",
								"image_uri":                 null,
								"managed_disk_type":         "Standard_LRS",
								"name":                      "myosdisk1",
								"vhd_uri":                   null,
								"write_accelerator_enabled": false,
							},
						],
						"tags": {
							"environment": "staging",
						},
						"vm_size": "Standard_DS1_v2",
						"zones":   null,
					},
				},
				{
					"address":        "azurerm_virtual_network.main",
					"mode":           "managed",
					"name":           "main",
					"provider_name":  "azurerm",
					"schema_version": 0,
					"type":           "azurerm_virtual_network",
					"values": {
						"address_space": [
							"10.0.0.0/16",
						],
						"ddos_protection_plan": [],
						"dns_servers":          null,
						"location":             "westeurope",
						"name":                 "tfvmex-network",
						"resource_group_name":  "tfvmex-resources",
					},
				},
				{
					"address":        "random_id.project_tag",
					"mode":           "managed",
					"name":           "project_tag",
					"provider_name":  "random",
					"schema_version": 0,
					"type":           "random_id",
					"values": {
						"byte_length": 4,
						"keepers":     null,
						"prefix":      null,
					},
				},
				{
					"address":        "random_pet.console_password",
					"mode":           "managed",
					"name":           "console_password",
					"provider_name":  "random",
					"schema_version": 0,
					"type":           "random_pet",
					"values": {
						"keepers":   null,
						"length":    3,
						"prefix":    null,
						"separator": "-",
					},
				},
				{
					"address":        "random_string.default_enc_password",
					"mode":           "managed",
					"name":           "default_enc_password",
					"provider_name":  "random",
					"schema_version": 1,
					"type":           "random_string",
					"values": {
						"keepers":          null,
						"length":           32,
						"lower":            true,
						"min_lower":        0,
						"min_numeric":      0,
						"min_special":      0,
						"min_upper":        0,
						"number":           true,
						"override_special": null,
						"special":          false,
						"upper":            true,
					},
				},
			],
		},
	},
	"prior_state": {
		"format_version":    "0.1",
		"terraform_version": "0.12.21",
		"values": {
			"outputs": {
				"primary_tfe_cluster": {
					"sensitive": false,
					"value": {
						"installer_dashboard_password": null,
						"installer_dashboard_url":      null,
					},
				},
			},
			"root_module": {
				"child_modules": [
					{
						"address": "module.primary_tfe",
						"resources": [
							{
								"address":        "data.google_service_account.account_id",
								"mode":           "data",
								"name":           "account_id",
								"provider_name":  "google.west1",
								"schema_version": 0,
								"type":           "google_service_account",
								"values": {
									"account_id":   "aeroframe",
									"display_name": "aeroframe",
									"email":        "aeroframe@aeroframe.iam.gserviceaccount.com",
									"id":           "projects/aeroframe/serviceAccounts/aeroframe@aeroframe.iam.gserviceaccount.com",
									"name":         "projects/aeroframe/serviceAccounts/aeroframe@aeroframe.iam.gserviceaccount.com",
									"project":      "aeroframe",
									"unique_id":    "116624002598362821754",
								},
							},
						],
					},
				],
			},
		},
	},
	"resource_changes": [
		{
			"address": "azurerm_network_interface.main",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"enable_accelerated_networking": false,
					"enable_ip_forwarding":          false,
					"ip_configuration": [
						{
							"name": "testconfiguration1",
							"private_ip_address_allocation": "dynamic",
							"private_ip_address_version":    "IPv4",
							"public_ip_address_id":          null,
						},
					],
					"location": "westeurope",
					"name":     "tfvmex-nic",
					"network_security_group_id": null,
					"resource_group_name":       "tfvmex-resources",
				},
				"after_unknown": {
					"applied_dns_servers": true,
					"dns_servers":         true,
					"id":                  true,
					"internal_dns_name_label": true,
					"internal_fqdn":           true,
					"ip_configuration": [
						{
							"application_gateway_backend_address_pools_ids": true,
							"application_security_group_ids":                true,
							"load_balancer_backend_address_pools_ids":       true,
							"load_balancer_inbound_nat_rules_ids":           true,
							"primary":            true,
							"private_ip_address": true,
							"subnet_id":          true,
						},
					],
					"mac_address":          true,
					"private_ip_address":   true,
					"private_ip_addresses": true,
					"tags":                 true,
					"virtual_machine_id":   true,
				},
				"before": null,
			},
			"mode":          "managed",
			"name":          "main",
			"provider_name": "azurerm",
			"type":          "azurerm_network_interface",
		},
		{
			"address": "azurerm_resource_group.main",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"location": "westeurope",
					"name":     "tfvmex-resources",
				},
				"after_unknown": {
					"id":   true,
					"tags": true,
				},
				"before": null,
			},
			"mode":          "managed",
			"name":          "main",
			"provider_name": "azurerm",
			"type":          "azurerm_resource_group",
		},
		{
			"address": "azurerm_subnet.internal",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"address_prefix": "10.0.2.0/24",
					"delegation":     [],
					"enforce_private_link_endpoint_network_policies": false,
					"enforce_private_link_service_network_policies":  false,
					"name": "internal",
					"network_security_group_id": null,
					"resource_group_name":       "tfvmex-resources",
					"route_table_id":            null,
					"service_endpoints":         null,
					"virtual_network_name":      "tfvmex-network",
				},
				"after_unknown": {
					"delegation":        [],
					"id":                true,
					"ip_configurations": true,
				},
				"before": null,
			},
			"mode":          "managed",
			"name":          "internal",
			"provider_name": "azurerm",
			"type":          "azurerm_subnet",
		},
		{
			"address": "azurerm_virtual_machine.main",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"additional_capabilities":          [],
					"boot_diagnostics":                 [],
					"delete_data_disks_on_termination": false,
					"delete_os_disk_on_termination":    false,
					"location":                         "westeurope",
					"name":                             "tfvmex-vm",
					"os_profile": [
						{
							"admin_password": "Password1234!",
							"admin_username": "testadmin",
							"computer_name":  "hostname",
						},
					],
					"os_profile_linux_config": [
						{
							"disable_password_authentication": false,
							"ssh_keys":                        [],
						},
					],
					"os_profile_secrets":        [],
					"os_profile_windows_config": [],
					"plan": [],
					"primary_network_interface_id": null,
					"proximity_placement_group_id": null,
					"resource_group_name":          "tfvmex-resources",
					"storage_image_reference": [
						{
							"id":        "",
							"offer":     "UbuntuServer",
							"publisher": "Canonical",
							"sku":       "16.04-LTS",
							"version":   "latest",
						},
					],
					"storage_os_disk": [
						{
							"caching":                   "ReadWrite",
							"create_option":             "FromImage",
							"image_uri":                 null,
							"managed_disk_type":         "Standard_LRS",
							"name":                      "myosdisk1",
							"vhd_uri":                   null,
							"write_accelerator_enabled": false,
						},
					],
					"tags": {
						"environment": "staging",
					},
					"vm_size": "Standard_DS1_v2",
					"zones":   null,
				},
				"after_unknown": {
					"additional_capabilities": [],
					"availability_set_id":     true,
					"boot_diagnostics":        [],
					"id":                      true,
					"identity":                true,
					"license_type":            true,
					"network_interface_ids":   true,
					"os_profile": [
						{
							"custom_data": true,
						},
					],
					"os_profile_linux_config": [
						{
							"ssh_keys": [],
						},
					],
					"os_profile_secrets":        [],
					"os_profile_windows_config": [],
					"plan":              [],
					"storage_data_disk": true,
					"storage_image_reference": [
						{},
					],
					"storage_os_disk": [
						{
							"disk_size_gb":    true,
							"managed_disk_id": true,
							"os_type":         true,
						},
					],
					"tags": {},
				},
				"before": null,
			},
			"mode":          "managed",
			"name":          "main",
			"provider_name": "azurerm",
			"type":          "azurerm_virtual_machine",
		},
		{
			"address": "azurerm_virtual_network.main",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"address_space": [
						"10.0.0.0/16",
					],
					"ddos_protection_plan": [],
					"dns_servers":          null,
					"location":             "westeurope",
					"name":                 "tfvmex-network",
					"resource_group_name":  "tfvmex-resources",
				},
				"after_unknown": {
					"address_space": [
						false,
					],
					"ddos_protection_plan": [],
					"id":     true,
					"subnet": true,
					"tags":   true,
				},
				"before": null,
			},
			"mode":          "managed",
			"name":          "main",
			"provider_name": "azurerm",
			"type":          "azurerm_virtual_network",
		},
		{
			"address": "module.primary_tfe.google_sql_database_instance.tfe-db-instance",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"database_version": "POSTGRES_9_6",
					"region":           "europe-west4",
					"settings": [
						{
							"authorized_gae_applications": null,
							"availability_type":           "REGIONAL",
							"backup_configuration": [
								{
									"binary_log_enabled": null,
									"enabled":            true,
									"location":           "europe-west4",
									"start_time":         "20:55",
								},
							],
							"database_flags":  [],
							"disk_autoresize": true,
							"disk_size":       100,
							"ip_configuration": [
								{
									"authorized_networks": [],
									"ipv4_enabled":        false,
									"require_ssl":         false,
								},
							],
							"maintenance_window": [
								{
									"day":          5,
									"hour":         12,
									"update_track": null,
								},
							],
							"pricing_plan":     "PER_USE",
							"replication_type": "SYNCHRONOUS",
							"tier":             "db-custom-8-30720",
							"user_labels": {
								"billing":    "937294293-smatale-tst",
								"operations": "937294293-smatale-tst",
								"security":   "937294293-smatale-tst",
							},
						},
					],
					"timeouts": null,
				},
				"after_unknown": {
					"connection_name":               true,
					"first_ip_address":              true,
					"id":                            true,
					"ip_address":                    true,
					"master_instance_name":          true,
					"name":                          true,
					"private_ip_address":            true,
					"project":                       true,
					"public_ip_address":             true,
					"replica_configuration":         true,
					"self_link":                     true,
					"server_ca_cert":                true,
					"service_account_email_address": true,
					"settings": [
						{
							"activation_policy": true,
							"backup_configuration": [
								{},
							],
							"crash_safe_replication": true,
							"database_flags":         [],
							"disk_type":              true,
							"ip_configuration": [
								{
									"authorized_networks": [],
									"private_network":     true,
								},
							],
							"location_preference": true,
							"maintenance_window": [
								{},
							],
							"user_labels": {},
							"version":     true,
						},
					],
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "tfe-db-instance",
			"provider_name":  "google.west1",
			"type":           "google_sql_database_instance",
		},
		{
			"address": "module.primary_tfe.google_sql_ssl_cert.client_cert",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"common_name": "terraform-generated",
					"project":     "aeroframe",
				},
				"after_unknown": {
					"cert":               true,
					"cert_serial_number": true,
					"create_time":        true,
					"expiration_time":    true,
					"id":                 true,
					"instance":           true,
					"private_key":        true,
					"server_ca_cert":     true,
					"sha1_fingerprint":   true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "client_cert",
			"provider_name":  "google.west1",
			"type":           "google_sql_ssl_cert",
		},
		{
			"address": "module.primary_tfe.google_sql_user.users",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"host":     null,
					"name":     "postgres",
					"password": "admin",
				},
				"after_unknown": {
					"id":       true,
					"instance": true,
					"project":  true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "users",
			"provider_name":  "google.west1",
			"type":           "google_sql_user",
		},
		{
			"address": "module.primary_tfe.google_storage_bucket.tfe-store",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"cors": [],
					"default_event_based_hold": null,
					"encryption":               [],
					"force_destroy":            false,
					"labels": {
						"billing":      "937294293-smatale-tst",
						"operations":   "937294293-smatale-tst",
						"security":     "937294293-smatale-tst",
						"serverstatus": "hypercare",
					},
					"lifecycle_rule":   [],
					"location":         "EUR4",
					"logging":          [],
					"requester_pays":   null,
					"retention_policy": [],
					"storage_class":    "STANDARD",
					"versioning":       [],
					"website":          [],
				},
				"after_unknown": {
					"bucket_policy_only": true,
					"cors":               [],
					"encryption":         [],
					"id":                 true,
					"labels":             {},
					"lifecycle_rule":     [],
					"logging":            [],
					"name":               true,
					"project":            true,
					"retention_policy":   [],
					"self_link":          true,
					"url":                true,
					"versioning":         [],
					"website":            [],
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "tfe-store",
			"provider_name":  "google.west1",
			"type":           "google_storage_bucket",
		},
		{
			"address": "module.primary_tfe.module.tfe_asg.google_compute_health_check.instance_autohealing",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"check_interval_sec": 5,
					"description":        null,
					"healthy_threshold":  2,
					"http2_health_check": [],
					"http_health_check":  [],
					"https_health_check": [],
					"ssl_health_check":   [],
					"tcp_health_check": [
						{
							"port":               8800,
							"port_name":          null,
							"port_specification": null,
							"proxy_header":       "NONE",
							"request":            null,
							"response":           null,
						},
					],
					"timeout_sec":         5,
					"timeouts":            null,
					"unhealthy_threshold": 10,
				},
				"after_unknown": {
					"creation_timestamp": true,
					"http2_health_check": [],
					"http_health_check":  [],
					"https_health_check": [],
					"id":                 true,
					"name":               true,
					"project":            true,
					"self_link":          true,
					"ssl_health_check":   [],
					"tcp_health_check": [
						{},
					],
					"type": true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_asg",
			"name":           "instance_autohealing",
			"provider_name":  "google.west1",
			"type":           "google_compute_health_check",
		},
		{
			"address": "module.primary_tfe.module.tfe_asg.google_compute_instance_template.instance_template",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"can_ip_forward": false,
					"disk": [
						{
							"auto_delete":         true,
							"boot":                true,
							"disk_encryption_key": [],
							"disk_name":           null,
							"disk_size_gb":        50,
							"labels":              null,
							"source":              null,
							"source_image":        "rhel-7-v20190729",
						},
					],
					"enable_display":    null,
					"guest_accelerator": [],
					"labels": {
						"billing":      "937294293-smatale-tst",
						"operations":   "937294293-smatale-tst",
						"security":     "937294293-smatale-tst",
						"serverstatus": "hypercare",
						"servertype":   "app",
					},
					"machine_type":            "n1-standard-2",
					"metadata_startup_script": "    echo \"trigger disable yum cron\"\n    systemctl disable yum-cron\n    systemctl stop yum-cron \n    echo \"nameserver 169.254.169.254\" >> /etc/resolv.conf\n    # #!/bin/bash\n\n# set -e -o pipefail\n\n# # Grab all the install/config data from gcp's metadata store\n# mkdir /etc/ptfe\n\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/jq-url\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/jq-url\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/ptfe-hostname\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/hostname\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/repl-data\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/repl-data\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/b64-license\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/replicated-licenseb64\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/encpasswd\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/encpasswd\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_user\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_user\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_password\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_password\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_netloc\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_netloc\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_dbname\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_dbname\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/pg_extra_params\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/pg_extra_params\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_credentials\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_credentials\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_project\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_project\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcs_bucket\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/gcs_bucket\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_certificate\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/terraform.crt\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_cert_privatekey\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/terraform.key\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/private_ip\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_console_admin_username\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/tfe_console_admin_username\n# curl \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/tfe_cosnole_admin_useremail\" -H \"Metadata-Flavor: Google\" -o /etc/ptfe/tfe_cosnole_admin_useremail\n\n# chown root:root /etc/ptfe/*\n# chown 0400 /etc/ptfe/*\n\n# JQ_URL=$(cat /etc/ptfe/jq-url)\n# curl -sfSL -o /usr/bin/jq $JQ_URL\n# chmod +x /usr/bin/jq\n\n# CONSOLE=$(base64 --decode /etc/ptfe/repl-data)\n# export CONSOLE\n# TFE_USERNAME=$(cat /etc/ptfe/tfe_console_admin_username)\n# export TFE_USERNAME\n# TFE_USEREMAIL=$(cat /etc/ptfe/tfe_cosnole_admin_useremail)\n# export TFE_USEREMAIL\n\n# # Store various bits of info as env vars\n# base64 -d /etc/ptfe/replicated-licenseb64 > /etc/replicated.rli\n# PTFEHOSTNAME=$(cat /etc/ptfe/hostname)\n# #PTFEHOSTNAME=${PTFEHOSTNAME%?}\n# export PTFEHOSTNAME\n# ENCPASSWD=$(cat /etc/ptfe/encpasswd)\n# export ENCPASSWD\n# PRIVATEIP=$(cat /etc/ptfe/private_ip)\n# export PRIVATEIP\n\n\n\n# if [[ $(< /etc/ptfe/pg_user) != none ]]; then\n#     PG_USER=$(cat /etc/ptfe/pg_user)\n#     export PG_USER\n#     PG_PASSWORD=$(base64 --decode /etc/ptfe/pg_password)\n#     export PG_PASSWORD\n#     PG_NETLOC=$(cat /etc/ptfe/pg_netloc)\n#     export PG_NETLOC\n#     PG_DBNAME=$(cat /etc/ptfe/pg_dbname)\n#     export PG_DBNAME\n#     if [ -f /etc/ptfe/pg_extra_params ]; then\n#         PG_EXTRA_PARAMS=$(cat /etc/ptfe/pg_extra_params)\n#     else\n#         PG_EXTRA_PARAMS=\n#     fi\n#     export PG_EXTRA_PARAMS\n#     GCS_PROJECT=$(cat /etc/ptfe/gcs_project)\n#     export GCS_PROJECT\n#     GCS_BUCKET=$(cat /etc/ptfe/gcs_bucket)\n#     export GCS_BUCKET\n#     GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n#     export GCS_CREDS\n# fi\n\n# # Setup the config files that will be used during the install\n# /bin/cat <<EOF >/etc/ptfe/payload.json\n# {\n#   \"username\": \"$TFE_USERNAME\",\n#   \"email\": \"$TFE_USEREMAIL\",\n#   \"password\": \"$CONSOLE\"\n# }\n# EOF\n\n# chown 0400 /etc/ptfe/payload.json\n\n# /bin/cat <<EOF >/etc/replicated-ptfe.conf\n# {\n#     \"hostname\": {\n#         \"value\": \"$PTFEHOSTNAME\"\n#     },\n#     \"enc_password\": {\n#         \"value\": \"$ENCPASSWD\"\n#     },\n#     \"installation_type\": {\n#         \"value\": \"production\"\n#     },\n#     \"production_type\": {\n#         \"value\": \"external\"\n#     },\n#     \"pg_user\": {\n#         \"value\": \"$PG_USER\"\n#     },\n#     \"pg_password\": {\n#         \"value\": \"$PG_PASSWORD\"\n#     },\n#     \"pg_netloc\": {\n#         \"value\": \"$PG_NETLOC\"\n#     },\n#     \"pg_dbname\": {\n#         \"value\": \"$PG_DBNAME\"\n#     },\n#     \"pg_extra_params\": {\n#         \"value\": \"$PG_EXTRA_PARAMS\"\n#     },\n#     \"placement\": {\n#         \"value\": \"placement_gcs\"\n#     },\n#     \"gcs_credentials\": {\n#         \"value\": \"$GCS_CREDS\"\n#     },\n#     \"gcs_project\": {\n#         \"value\": \"$GCS_PROJECT\"\n#     },\n#     \"gcs_bucket\": {\n#         \"value\": \"$GCS_BUCKET\"\n#     }\n# }\n# EOF\n\n# chown root:root /etc/replicated-ptfe.conf\n# chmod 0644 /etc/replicated-ptfe.conf\n\n# /bin/cat <<EOF >/etc/replicated.conf\n# {\n#     \"DaemonAuthenticationType\":     \"password\",\n#     \"DaemonAuthenticationPassword\": \"$CONSOLE\",\n#     \"TlsBootstrapType\":             \"server-path\",\n#     \"TlsBootstrapHostname\":         \"$PTFEHOSTNAME\",\n#     \"TlsBootstrapCert\":             \"/etc/ptfe/terraform.crt\",\n#     \"TlsBootstrapKey\":              \"/etc/ptfe/terraform.key\",\n#     \"BypassPreflightChecks\":        true,\n#     \"ImportSettingsFrom\":           \"/etc/replicated-ptfe.conf\",\n#     \"LicenseFileLocation\":          \"/etc/replicated.rli\"\n# }\n# EOF\n\n# chown root:root /etc/replicated.conf\n# chmod 0644 /etc/replicated.conf\n\n# #Install Stackdriver Logging and Monitoring Agent\n\n# GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n# export GCS_CREDS\n\n# GOOGLE_APPLICATION_CREDENTIALS=\"/etc/google/auth/application_default_credentials.json\"\n# sudo mkdir -p /etc/google/auth\n# echo \"$GCS_CREDS\" > \"$GOOGLE_APPLICATION_CREDENTIALS\"\n# sudo chown root:root \"$GOOGLE_APPLICATION_CREDENTIALS\"\n# sudo chmod 0400 \"$GOOGLE_APPLICATION_CREDENTIALS\"\n\n# curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\n# sudo bash install-monitoring-agent.sh\n\n# curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh\n# sudo bash install-logging-agent.sh --structured\n\n# echo \"Running docker install\"\n# sudo -s\n# yum install docker-1.13.1-108.git4ef4b30.el7 -y\n\n# #Install Google Cloud SDK and JQ\n# tee -a /etc/yum.repos.d/google-cloud-sdk.repo << EOM\n# [google-cloud-sdk]\n# name=Google Cloud SDK\n# baseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64\n# enabled=1\n# gpgcheck=1\n# repo_gpgcheck=1\n# gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg\n#        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\n# EOM\n\n# yum install google-cloud-sdk -y\n# yum install epel-release -y\n# yum install jq -y\n# echo \"Running docker storage setup\"\n\n# #Remove authorization plugins active RHEL Docker Service\n# systemctl stop docker\n# rm /usr/lib/systemd/system/docker.service\n\n# touch /usr/lib/systemd/system/docker.service\n# chown root:root /usr/lib/systemd/system/docker.service\n# chmod 0644 /usr/lib/systemd/system/docker.service\n# cat > /usr/lib/systemd/system/docker.service <<EOF\n# Wants=docker-storage-setup.service\n# Requires=rhel-push-plugin.service registries.service\n# Requires=docker-cleanup.timer\n# [Service]\n# Type=notify\n# NotifyAccess=main\n# EnvironmentFile=-/run/containers/registries.conf\n# EnvironmentFile=-/etc/sysconfig/docker\n# EnvironmentFile=-/etc/sysconfig/docker-storage\n# EnvironmentFile=-/etc/sysconfig/docker-network\n# Environment=GOTRACEBACK=crash\n# Environment=DOCKER_HTTP_HOST_COMPAT=1\n# Environment=PATH=/usr/libexec/docker:/usr/bin:/usr/sbin\n# ExecStart=/usr/bin/dockerd-current \\\n#           --add-runtime docker-runc=/usr/libexec/docker/docker-runc-current \\\n#           --default-runtime=docker-runc \\\n#           --exec-opt native.cgroupdriver=systemd \\\n#           --userland-proxy-path=/usr/libexec/docker/docker-proxy-current \\\n#           --init-path=/usr/libexec/docker/docker-init-current \\\n#           --seccomp-profile=/etc/docker/seccomp.json \\\n#           $OPTIONS \\\n#           $DOCKER_STORAGE_OPTIONS \\\n#           $DOCKER_NETWORK_OPTIONS \\\n#           $ADD_REGISTRY \\\n#           $BLOCK_REGISTRY \\\n#           $INSECURE_REGISTRY \\\n#           $REGISTRIES\n# ExecReload=/bin/kill -s HUP $MAINPID\n# LimitNOFILE=1048576\n# LimitNPROC=1048576\n# LimitCORE=infinity\n# TimeoutStartSec=0\n# Restart=on-abnormal\n# KillMode=process\n#!/bin/bash\nset -e -o pipefail\n\n# global vars\nmetadataURL=\"http://metadata.google.internal/computeMetadata/v1/instance\"\nmetadataHeader=\"Metadata-Flavor: Google\"\nmetadataOutput=/etc/ptfe/\n\n# Grab all the install/config data from gcp's metadata store\nfunction metadataAttributesPTFE {\n    curl --silent --show-error --location --header \"$metadataHeader\" \"$metadataURL/attributes/$1\" -o $metadataOutput$2\n}\n\nfunction metadataNetworkPTFE {\n    curl --silent --show-error --location --header \"$metadataHeader\" \"$metadataURL/network-interfaces/0/$1\" -o $metadataOutput$2\n}\n\nfunction installMetadataInfo {\n    mkdir /etc/ptfe\n\n    metadataAttributesPTFE \"ptfe-hostname\" hostname\n    metadataAttributesPTFE \"b64-license\" replicated-licenseb64\n\n    metadataAttributesPTFE \"repl-data\" repl-data\n    metadataAttributesPTFE \"health_url\" health_url\n    metadataAttributesPTFE \"encpasswd\" encpasswd\n    metadataAttributesPTFE \"pg_user\" pg_user\n    metadataAttributesPTFE \"pg_password\" pg_password\n    metadataAttributesPTFE \"pg_netloc\" pg_netloc\n    metadataAttributesPTFE \"pg_dbname\" pg_dbname\n    metadataAttributesPTFE \"pg_extra_params\" pg_extra_params\n    metadataAttributesPTFE \"gcs_credentials\" gcs_credentials\n    metadataAttributesPTFE \"gcs_project\" gcs_project\n    metadataAttributesPTFE \"gcs_bucket\" gcs_bucket\n    metadataAttributesPTFE \"tfe_console_admin_username\" tfe_console_admin_username\n    metadataAttributesPTFE \"tfe_cosnole_admin_useremail\" tfe_cosnole_admin_useremail\n\n    metadataAttributesPTFE \"tfe_certificate\" terraform.crt\n    metadataAttributesPTFE \"tfe_cert_privatekey\" terraform.key\n\n    metadataAttributesPTFE \"sql_ssl_cert\" sql_ssl_cert.pem\n    metadataAttributesPTFE \"sql_ssl_server_ca_cert\" sql_ssl_server_ca_cert.pem\n    metadataAttributesPTFE \"sql_ssl_private_key\" sql_ssl_private_key.pem\n\n    metadataNetworkPTFE \"ip\" private_ip\n\n    chown root:root /etc/ptfe/*\n    chown 400 /etc/ptfe/*\n\n    chmod 600 /etc/ptfe/sql_ssl_*\n}\n\nfunction setupMetadataConfig {\n    base64 -d /etc/ptfe/replicated-licenseb64 > /etc/replicated.rli\n\n    CONSOLE=$(base64 --decode /etc/ptfe/repl-data)\n    TFE_USERNAME=$(cat /etc/ptfe/tfe_console_admin_username)\n    TFE_USEREMAIL=$(cat /etc/ptfe/tfe_cosnole_admin_useremail)\n    PTFEHOSTNAME=$(cat /etc/ptfe/hostname)\n\n    ENCPASSWD=$(cat /etc/ptfe/encpasswd)\n    PRIVATEIP=$(cat /etc/ptfe/private_ip)\n\n    PG_USER=$(cat /etc/ptfe/pg_user)\n    PG_PASSWORD=$(base64 --decode /etc/ptfe/pg_password)\n    PG_NETLOC=$(cat /etc/ptfe/pg_netloc)\n    PG_DBNAME=$(cat /etc/ptfe/pg_dbname)    \n\n    GCS_PROJECT=$(cat /etc/ptfe/gcs_project)\n    GCS_BUCKET=$(cat /etc/ptfe/gcs_bucket)\n    GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n    \n    if [ -f /etc/ptfe/pg_extra_params ]; then\n        PG_EXTRA_PARAMS=$(cat /etc/ptfe/pg_extra_params)\n    else\n        PG_EXTRA_PARAMS=\"\"\n    fi\n\n# Setup the config files that will be used during the install\ncat > /etc/ptfe/payload.json <<EOF \n{\n  \"username\": \"$TFE_USERNAME\",\n  \"email\": \"$TFE_USEREMAIL\",\n  \"password\": \"$CONSOLE\"\n}\nEOF\n\ncat > /etc/replicated-ptfe.conf <<EOF \n{\n    \"hostname\": {\n        \"value\": \"$PTFEHOSTNAME\"\n    },\n    \"enc_password\": {\n        \"value\": \"$ENCPASSWD\"\n    },\n    \"installation_type\": {\n        \"value\": \"production\"\n    },\n    \"production_type\": {\n        \"value\": \"external\"\n    },\n    \"pg_user\": {\n        \"value\": \"$PG_USER\"\n    },\n    \"pg_password\": {\n        \"value\": \"$PG_PASSWORD\"\n    },\n    \"pg_netloc\": {\n        \"value\": \"$PG_NETLOC\"\n    },\n    \"pg_dbname\": {\n        \"value\": \"$PG_DBNAME\"\n    },\n    \"pg_extra_params\": {\n        \"value\": \"$PG_EXTRA_PARAMS\"\n    },\n    \"placement\": {\n        \"value\": \"placement_gcs\"\n    },\n    \"gcs_credentials\": {\n        \"value\": \"$GCS_CREDS\"\n    },\n    \"gcs_project\": {\n        \"value\": \"$GCS_PROJECT\"\n    },\n    \"gcs_bucket\": {\n        \"value\": \"$GCS_BUCKET\"\n    }\n}\nEOF\n\ncat > /etc/replicated.conf <<EOF \n{\n    \"DaemonAuthenticationType\":     \"password\",\n    \"DaemonAuthenticationPassword\": \"$CONSOLE\",\n    \"TlsBootstrapType\":             \"server-path\",\n    \"TlsBootstrapHostname\":         \"$PTFEHOSTNAME\",\n    \"TlsBootstrapCert\":             \"/etc/ptfe/terraform.crt\",\n    \"TlsBootstrapKey\":              \"/etc/ptfe/terraform.key\",\n    \"BypassPreflightChecks\":        true,\n    \"ImportSettingsFrom\":           \"/etc/replicated-ptfe.conf\",\n    \"LicenseFileLocation\":          \"/etc/replicated.rli\"\n}\nEOF\n\n    chown 400 /etc/ptfe/payload.json\n    chown root:root /etc/replicated-ptfe.conf\n    chmod 644 /etc/replicated-ptfe.conf\n    chown root:root /etc/replicated.conf\n    chmod 644 /etc/replicated.conf\n}\n\nfunction installGoogleAgents {\n    GCS_CREDS=$(base64 --decode /etc/ptfe/gcs_credentials | jq -c . | sed -e 's/\"/\\\\\"/g' -e 's/\\\\n/\\\\\\\\n/g')\n    GOOGLE_APPLICATION_CREDENTIALS=\"/etc/google/auth/application_default_credentials.json\"\n    mkdir -p /etc/google/auth\n    echo \"$GCS_CREDS\" > \"$GOOGLE_APPLICATION_CREDENTIALS\"\n    chown root:root \"$GOOGLE_APPLICATION_CREDENTIALS\"\n    chmod 400 \"$GOOGLE_APPLICATION_CREDENTIALS\"\n\n    curl -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh\n    bash install-monitoring-agent.sh\n\n    curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh\n    bash install-logging-agent.sh --structured\n}\n\nfunction installDocker {\n\nmkdir -p /etc/docker/\ncat > /etc/docker/daemon.conf << EOF\n{\n  \"mtu\": 1460\n}\nEOF\n\n    # OS specific configs\n    setenforce 0\n    mkdir -p /lib/tc\n    mount --bind /usr/lib64/tc/ /lib/tc/\n    sed -i -e 's/^SELINUX=enforcing/SELINUX=permissive/' /etc/sysconfig/selinux \n\n    yum -y install docker ipvsadm wget unzip\n    systemctl enable docker\n    systemctl start docker\n}\n\nfunction installPTFE {\n    echo \"Running 'ptfe install'\"\n\n    curl -o install.sh https://install.terraform.io/ptfe/stable\n    chmod +x ./install.sh\n    bash ./install.sh \\\n        no-proxy \\\n        no-docker \\\n        private-address=$(cat /etc/ptfe/private_ip) \\\n        public-address=$(cat /etc/ptfe/private_ip)\n\n    PRIVATEIP=$(cat /etc/ptfe/private_ip)\n    health_check=$(cat /etc/ptfe/health_url | sed \"s/IP/$PRIVATEIP\"/g )\n\n    until curl -ks $health_check | jq -r '.passed' | grep -q true; do\n        printf '.'\n        sleep 15\n    done\n\n    echo \"TFE is in healthy state now\"\n\n    initial_token=$(/usr/local/bin/replicated admin retrieve-iact)\n    echo \"== intial token is $initial_token ==\"\n\n    curl \\\n    --header \"Content-Type: application/json\" \\\n    --request POST \\\n    --data @/etc/ptfe/payload.json \\\n    http://${PRIVATEIP}:8800/admin/initial-admin-user?token=$initial_token\n}\n\nfunction main {\n    # install dependencies\n    yum install google-cloud-sdk -y\n    yum install epel-release -y\n    yum install jq -y\n\n    installMetadataInfo \n    setupMetadataConfig\n    installGoogleAgents\n    installDocker\n    installPTFE\n\n}\n\nmain\n",
					"min_cpu_platform":        null,
					"network_interface": [
						{
							"access_config":  [],
							"alias_ip_range": [],
							"network_ip":     null,
						},
					],
					"region": "europe-west4",
					"scheduling": [
						{
							"automatic_restart":   true,
							"node_affinities":     [],
							"on_host_maintenance": "MIGRATE",
							"preemptible":         false,
						},
					],
					"service_account": [
						{
							"email": "aeroframe@aeroframe.iam.gserviceaccount.com",
							"scopes": [
								"https://www.googleapis.com/auth/cloud-platform",
								"https://www.googleapis.com/auth/compute.readonly",
								"https://www.googleapis.com/auth/devstorage.read_only",
								"https://www.googleapis.com/auth/userinfo.email",
							],
						},
					],
					"shielded_instance_config": [],
					"tags": [
						"healthcheck",
						"outbound",
						"tfe",
					],
				},
				"after_unknown": {
					"description": true,
					"disk": [
						{
							"device_name":         true,
							"disk_encryption_key": [],
							"disk_type":           true,
							"interface":           true,
							"mode":                true,
							"type":                true,
						},
					],
					"guest_accelerator": [],
					"id":                true,
					"instance_description": true,
					"labels":               {},
					"metadata":             true,
					"metadata_fingerprint": true,
					"name":                 true,
					"name_prefix":          true,
					"network_interface": [
						{
							"access_config":      [],
							"alias_ip_range":     [],
							"network":            true,
							"subnetwork":         true,
							"subnetwork_project": true,
						},
					],
					"project": true,
					"scheduling": [
						{
							"node_affinities": [],
						},
					],
					"self_link": true,
					"service_account": [
						{
							"scopes": [
								false,
								false,
								false,
								false,
							],
						},
					],
					"shielded_instance_config": [],
					"tags": [
						false,
						false,
						false,
					],
					"tags_fingerprint": true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_asg",
			"name":           "instance_template",
			"provider_name":  "google.west1",
			"type":           "google_compute_instance_template",
		},
		{
			"address": "module.primary_tfe.module.tfe_asg.google_compute_region_instance_group_manager.instance_rigm[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"auto_healing_policies": [
						{
							"initial_delay_sec": 1800,
						},
					],
					"description": null,
					"distribution_policy_zones": [
						"europe-west4-a",
						"europe-west4-b",
					],
					"named_port":   [],
					"region":       "europe-west4",
					"target_pools": null,
					"target_size":  2,
					"timeouts":     null,
					"update_policy": [
						{
							"instance_redistribution_type": null,
							"max_surge_fixed":              3,
							"max_surge_percent":            null,
							"max_unavailable_fixed":        0,
							"max_unavailable_percent":      null,
							"min_ready_sec":                10,
							"minimal_action":               "REPLACE",
							"type":                         "PROACTIVE",
						},
					],
					"version": [
						{
							"target_size": [],
						},
					],
					"wait_for_instances": false,
				},
				"after_unknown": {
					"auto_healing_policies": [
						{
							"health_check": true,
						},
					],
					"base_instance_name": true,
					"distribution_policy_zones": [
						false,
						false,
					],
					"fingerprint":       true,
					"id":                true,
					"instance_group":    true,
					"instance_template": true,
					"name":              true,
					"named_port":        [],
					"project":           true,
					"self_link":         true,
					"update_policy": [
						{},
					],
					"update_strategy": true,
					"version": [
						{
							"instance_template": true,
							"name":              true,
							"target_size":       [],
						},
					],
				},
				"before": null,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_asg",
			"name":           "instance_rigm",
			"provider_name":  "google-beta.west1",
			"type":           "google_compute_region_instance_group_manager",
		},
		{
			"address": "module.primary_tfe.module.tfe_fw.google_compute_firewall.gcp_fw",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"allow": [
						{
							"ports": [
								"22",
								"80",
								"443",
								"6443",
								"8800",
								"23010",
							],
							"protocol": "TCP",
						},
					],
					"deny":           [],
					"description":    null,
					"disabled":       null,
					"enable_logging": null,
					"priority":       1000,
					"source_ranges": [
						"0.0.0.0/0",
					],
					"source_service_accounts": null,
					"source_tags":             null,
					"target_service_accounts": null,
					"target_tags": [
						"tfe",
					],
					"timeouts": null,
				},
				"after_unknown": {
					"allow": [
						{
							"ports": [
								false,
								false,
								false,
								false,
								false,
								false,
							],
						},
					],
					"creation_timestamp": true,
					"deny":               [],
					"destination_ranges": true,
					"direction":          true,
					"id":                 true,
					"name":               true,
					"network":            true,
					"project":            true,
					"self_link":          true,
					"source_ranges": [
						false,
					],
					"target_tags": [
						false,
					],
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_fw",
			"name":           "gcp_fw",
			"provider_name":  "google.west1",
			"type":           "google_compute_firewall",
		},
		{
			"address": "module.primary_tfe.module.tfe_network.data.google_compute_network.network",
			"change": {
				"actions": [
					"read",
				],
				"after": {
					"project": null,
				},
				"after_unknown": {
					"description":            true,
					"gateway_ipv4":           true,
					"id":                     true,
					"name":                   true,
					"self_link":              true,
					"subnetworks_self_links": true,
				},
				"before": null,
			},
			"mode":           "data",
			"module_address": "module.primary_tfe.module.tfe_network",
			"name":           "network",
			"provider_name":  "google.west1",
			"type":           "google_compute_network",
		},
		{
			"address": "module.primary_tfe.module.tfe_network.google_compute_global_address.private_ip_address",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"address_type":  "INTERNAL",
					"description":   null,
					"ip_version":    null,
					"labels":        null,
					"prefix_length": 16,
					"purpose":       "VPC_PEERING",
					"timeouts":      null,
				},
				"after_unknown": {
					"address":            true,
					"creation_timestamp": true,
					"id":                 true,
					"label_fingerprint":  true,
					"name":               true,
					"network":            true,
					"project":            true,
					"self_link":          true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network",
			"name":           "private_ip_address",
			"provider_name":  "google-beta.west1",
			"type":           "google_compute_global_address",
		},
		{
			"address": "module.primary_tfe.module.tfe_network.google_compute_network.vpc",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"auto_create_subnetworks":         true,
					"delete_default_routes_on_create": false,
					"description":                     null,
					"timeouts":                        null,
				},
				"after_unknown": {
					"gateway_ipv4": true,
					"id":           true,
					"ipv4_range":   true,
					"name":         true,
					"project":      true,
					"routing_mode": true,
					"self_link":    true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network",
			"name":           "vpc",
			"provider_name":  "google.west1",
			"type":           "google_compute_network",
		},
		{
			"address": "module.primary_tfe.module.tfe_network.google_service_networking_connection.private_vpc_connection",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"service": "servicenetworking.googleapis.com",
				},
				"after_unknown": {
					"id":                      true,
					"network":                 true,
					"peering":                 true,
					"reserved_peering_ranges": true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network",
			"name":           "private_vpc_connection",
			"provider_name":  "google-beta.west1",
			"type":           "google_service_networking_connection",
		},
		{
			"address": "module.primary_tfe.module.tfe_network.module.nat.google_compute_router.router[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"bgp": [
						{
							"advertise_mode":       "DEFAULT",
							"advertised_groups":    null,
							"advertised_ip_ranges": [],
							"asn": 64514,
						},
					],
					"description": null,
					"region":      "europe-west4",
					"timeouts":    null,
				},
				"after_unknown": {
					"bgp": [
						{
							"advertised_ip_ranges": [],
						},
					],
					"creation_timestamp": true,
					"id":                 true,
					"name":               true,
					"network":            true,
					"project":            true,
					"self_link":          true,
				},
				"before": null,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network.module.nat",
			"name":           "router",
			"provider_name":  "google.west1",
			"type":           "google_compute_router",
		},
		{
			"address": "module.primary_tfe.module.tfe_network.module.nat.google_compute_router_nat.nat[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"icmp_idle_timeout_sec": 30,
					"log_config": [
						{
							"enable": true,
							"filter": "ERRORS_ONLY",
						},
					],
					"min_ports_per_vm":       null,
					"nat_ip_allocate_option": "AUTO_ONLY",
					"nat_ips":                null,
					"region":                 "europe-west4",
					"source_subnetwork_ip_ranges_to_nat": "ALL_SUBNETWORKS_ALL_IP_RANGES",
					"subnetwork":                         [],
					"tcp_established_idle_timeout_sec":   1200,
					"tcp_transitory_idle_timeout_sec":    30,
					"timeouts":                           null,
					"udp_idle_timeout_sec":               30,
				},
				"after_unknown": {
					"id": true,
					"log_config": [
						{},
					],
					"name":       true,
					"project":    true,
					"router":     true,
					"subnetwork": [],
				},
				"before": null,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network.module.nat",
			"name":           "nat",
			"provider_name":  "google.west1",
			"type":           "google_compute_router_nat",
		},
		{
			"address": "module.primary_tfe.module.tfe_network.null_resource.google_service_networking_connection",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"triggers": null,
				},
				"after_unknown": {
					"id": true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_network",
			"name":           "google_service_networking_connection",
			"provider_name":  "null",
			"type":           "null_resource",
		},
		{
			"address": "module.primary_tfe.module.tfe_nlb.data.google_compute_instance_group.gce_ig",
			"change": {
				"actions": [
					"read",
				],
				"after": {
					"zone": "europe-west4-a",
				},
				"after_unknown": {
					"description": true,
					"id":          true,
					"instances":   true,
					"name":        true,
					"named_port":  true,
					"network":     true,
					"project":     true,
					"self_link":   true,
					"size":        true,
				},
				"before": null,
			},
			"mode":           "data",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gce_ig",
			"provider_name":  "google.west1",
			"type":           "google_compute_instance_group",
		},
		{
			"address": "module.primary_tfe.module.tfe_nlb.google_compute_firewall.gcp_lb_fw",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"allow": [
						{
							"ports": [
								"8800",
								"23005",
							],
							"protocol": "tcp",
						},
					],
					"deny":           [],
					"description":    null,
					"disabled":       null,
					"enable_logging": null,
					"priority":       1000,
					"project":        "aeroframe",
					"source_ranges": [
						"0.0.0.0/0",
					],
					"source_service_accounts": null,
					"source_tags":             null,
					"target_service_accounts": null,
					"target_tags": [
						"tfe",
					],
					"timeouts": null,
				},
				"after_unknown": {
					"allow": [
						{
							"ports": [
								false,
								false,
							],
						},
					],
					"creation_timestamp": true,
					"deny":               [],
					"destination_ranges": true,
					"direction":          true,
					"id":                 true,
					"name":               true,
					"network":            true,
					"self_link":          true,
					"source_ranges": [
						false,
					],
					"target_tags": [
						false,
					],
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_lb_fw",
			"provider_name":  "google.west1",
			"type":           "google_compute_firewall",
		},
		{
			"address": "module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"all_ports":             null,
					"backend_service":       null,
					"description":           null,
					"load_balancing_scheme": "EXTERNAL",
					"port_range":            "8800",
					"ports":                 null,
					"project":               "aeroframe",
					"region":                "europe-west4",
					"service_label":         null,
					"timeouts":              null,
				},
				"after_unknown": {
					"creation_timestamp": true,
					"id":                 true,
					"ip_address":         true,
					"ip_protocol":        true,
					"ip_version":         true,
					"name":               true,
					"network":            true,
					"network_tier":       true,
					"self_link":          true,
					"service_name":       true,
					"subnetwork":         true,
					"target":             true,
				},
				"before": null,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_fr",
			"provider_name":  "google.west1",
			"type":           "google_compute_forwarding_rule",
		},
		{
			"address": "module.primary_tfe.module.tfe_nlb.google_compute_forwarding_rule.gcp_fr[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"all_ports":             null,
					"backend_service":       null,
					"description":           null,
					"load_balancing_scheme": "EXTERNAL",
					"port_range":            "23005",
					"ports":                 null,
					"project":               "aeroframe",
					"region":                "europe-west4",
					"service_label":         null,
					"timeouts":              null,
				},
				"after_unknown": {
					"creation_timestamp": true,
					"id":                 true,
					"ip_address":         true,
					"ip_protocol":        true,
					"ip_version":         true,
					"name":               true,
					"network":            true,
					"network_tier":       true,
					"self_link":          true,
					"service_name":       true,
					"subnetwork":         true,
					"target":             true,
				},
				"before": null,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_fr",
			"provider_name":  "google.west1",
			"type":           "google_compute_forwarding_rule",
		},
		{
			"address": "module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"check_interval_sec":  5,
					"description":         null,
					"healthy_threshold":   2,
					"host":                null,
					"port":                8800,
					"project":             "aeroframe",
					"request_path":        "/",
					"timeout_sec":         5,
					"timeouts":            null,
					"unhealthy_threshold": 2,
				},
				"after_unknown": {
					"creation_timestamp": true,
					"id":                 true,
					"name":               true,
					"self_link":          true,
				},
				"before": null,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_hhc",
			"provider_name":  "google.west1",
			"type":           "google_compute_http_health_check",
		},
		{
			"address": "module.primary_tfe.module.tfe_nlb.google_compute_http_health_check.gcp_hhc[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"check_interval_sec":  5,
					"description":         null,
					"healthy_threshold":   2,
					"host":                null,
					"port":                23005,
					"project":             "aeroframe",
					"request_path":        "/healthz",
					"timeout_sec":         5,
					"timeouts":            null,
					"unhealthy_threshold": 2,
				},
				"after_unknown": {
					"creation_timestamp": true,
					"id":                 true,
					"name":               true,
					"self_link":          true,
				},
				"before": null,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_hhc",
			"provider_name":  "google.west1",
			"type":           "google_compute_http_health_check",
		},
		{
			"address": "module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"backup_pool":      null,
					"description":      null,
					"failover_ratio":   null,
					"project":          "aeroframe",
					"region":           "europe-west4",
					"session_affinity": "NONE",
				},
				"after_unknown": {
					"health_checks": true,
					"id":            true,
					"instances":     true,
					"name":          true,
					"self_link":     true,
				},
				"before": null,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_tp",
			"provider_name":  "google.west1",
			"type":           "google_compute_target_pool",
		},
		{
			"address": "module.primary_tfe.module.tfe_nlb.google_compute_target_pool.gcp_tp[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"backup_pool":      null,
					"description":      null,
					"failover_ratio":   null,
					"project":          "aeroframe",
					"region":           "europe-west4",
					"session_affinity": "NONE",
				},
				"after_unknown": {
					"health_checks": true,
					"id":            true,
					"instances":     true,
					"name":          true,
					"self_link":     true,
				},
				"before": null,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.primary_tfe.module.tfe_nlb",
			"name":           "gcp_tp",
			"provider_name":  "google.west1",
			"type":           "google_compute_target_pool",
		},
		{
			"address": "module.primary_tfe.null_resource.tfe_asg_depends_on",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"triggers": null,
				},
				"after_unknown": {
					"id": true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "tfe_asg_depends_on",
			"provider_name":  "null",
			"type":           "null_resource",
		},
		{
			"address": "module.primary_tfe.null_resource.tfe_nlb_depends_on",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"triggers": null,
				},
				"after_unknown": {
					"id": true,
				},
				"before": null,
			},
			"mode":           "managed",
			"module_address": "module.primary_tfe",
			"name":           "tfe_nlb_depends_on",
			"provider_name":  "null",
			"type":           "null_resource",
		},
		{
			"address": "random_id.project_tag",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"byte_length": 4,
					"keepers":     null,
					"prefix":      null,
				},
				"after_unknown": {
					"b64":     true,
					"b64_std": true,
					"b64_url": true,
					"dec":     true,
					"hex":     true,
					"id":      true,
				},
				"before": null,
			},
			"mode":          "managed",
			"name":          "project_tag",
			"provider_name": "random",
			"type":          "random_id",
		},
		{
			"address": "random_pet.console_password",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"keepers":   null,
					"length":    3,
					"prefix":    null,
					"separator": "-",
				},
				"after_unknown": {
					"id": true,
				},
				"before": null,
			},
			"mode":          "managed",
			"name":          "console_password",
			"provider_name": "random",
			"type":          "random_pet",
		},
		{
			"address": "random_string.default_enc_password",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"keepers":          null,
					"length":           32,
					"lower":            true,
					"min_lower":        0,
					"min_numeric":      0,
					"min_special":      0,
					"min_upper":        0,
					"number":           true,
					"override_special": null,
					"special":          false,
					"upper":            true,
				},
				"after_unknown": {
					"id":     true,
					"result": true,
				},
				"before": null,
			},
			"mode":          "managed",
			"name":          "default_enc_password",
			"provider_name": "random",
			"type":          "random_string",
		},
	],
	"terraform_version": "0.12.21",
	"variables": {
		"account_id": {
			"value": "aeroframe",
		},
		"az_location": {
			"value": "westeurope",
		},
		"certificate": {
			"value": "tfe-cluster.crt",
		},
		"client_id": {
			"value": "48cb9cf5-f551-4bcd-b9d8-89ebae297a40",
		},
		"client_secret": {
			"value": "dBLMeiw-0iFIdm535D/iFoD=oF=5GJ5n",
		},
		"cloud_provider": {
			"value": "gcp",
		},
		"costcenter": {
			"value": "937294293",
		},
		"creator": {
			"value": "smatale",
		},
		"domain": {
			"value": "test.slb.com",
		},
		"dr_region": {
			"value": "europe-north1",
		},
		"enable-oslogin": {
			"value": "true",
		},
		"enable_regional_group": {
			"value": "true",
		},
		"encryption_password": {
			"value": "",
		},
		"environment": {
			"value": "tst",
		},
		"frontend_dns": {
			"value": "terraform",
		},
		"gcs_bucket_location": {
			"value": "EUR4",
		},
		"gcs_credentials": {
			"value": "tfe-gcp-creds.json",
		},
		"image_family": {
			"value": "rhel-7-v20190729",
		},
		"instance_zone": {
			"value": "[\"b\", \"c\"]",
		},
		"license_file": {
			"value": "schlumberger.rli",
		},
		"machine_type": {
			"value": "n1-standard-2",
		},
		"postgresql_database": {
			"value": "postgres",
		},
		"postgresql_disk_size": {
			"value": "100",
		},
		"postgresql_extra_params": {
			"value": "937294293",
		},
		"postgresql_instance_availability_type": {
			"value": "REGIONAL",
		},
		"postgresql_instance_maintenance_window_day": {
			"value": "5",
		},
		"postgresql_instance_maintenance_window_hour": {
			"value": "12",
		},
		"postgresql_instance_tier": {
			"value": "db-custom-8-30720",
		},
		"postgresql_password": {
			"value": "admin",
		},
		"postgresql_user": {
			"value": "postgres",
		},
		"prefix": {
			"value": "tfvmex",
		},
		"privatekey": {
			"value": "tfe-cluster-private.key",
		},
		"project": {
			"value": "aeroframe",
		},
		"region": {
			"value": "europe-west4",
		},
		"server_status": {
			"value": "hypercare",
		},
		"server_type": {
			"value": "app",
		},
		"ssh_keys": {
			"value": "[]",
		},
		"ssr_id": {
			"value": "7361",
		},
		"subscription_id": {
			"value": "8ad38ca9-23ff-4c12-8e04-d9adb350983c",
		},
		"tenant_id": {
			"value": "c8cd0425-e7b7-4f3d-9215-7e5fa3f439e8",
		},
		"tfe_console_admin_username": {
			"value": "admin",
		},
		"tfe_cosnole_admin_useremail": {
			"value": "smatale@slb.com",
		},
		"vm_boot_disk_size": {
			"value": "50",
		},
		"vm_boot_disk_type": {
			"value": "pd-ssd",
		},
	},
}
